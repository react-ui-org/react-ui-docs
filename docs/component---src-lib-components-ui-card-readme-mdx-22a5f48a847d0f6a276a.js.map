{"version":3,"sources":["webpack:///../src/lib/components/ui/Card/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Button","ScrollView","Card","CardBody","CardFooter","label","priority","raised","variant","dense","size","style","display","height","type","disabled","of","isMDXComponent"],"mappings":"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","file":"component---src-lib-components-ui-card-readme-mdx-22a5f48a847d0f6a276a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-ui/react-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Button } from '../Button/Button';\nimport { ScrollView } from '../ScrollView/ScrollView';\nimport { Card } from './Card';\nimport { CardBody } from './CardBody';\nimport { CardFooter } from './CardFooter';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"card\"\n    }}>{`Card`}</h1>\n\n    <p>{`Cards contain content and actions about a single subject.`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <p>{`To implement the Card component, you need to import at least Card and\n`}<a parentName=\"p\" {...{\n        \"href\": \"#cardbody\"\n      }}>{`CardBody`}</a>{` components:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Card, CardBody } from '@react-ui-org/react-ui';\n`}</code></pre>\n    <p>{`And use it:`}</p>\n    <Playground __position={0} __code={'<Card>\\n  <CardBody>Hello!</CardBody>\\n</Card>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      ScrollView,\n      Card,\n      CardBody,\n      CardFooter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Card mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello!\n    </CardBody>\n  </Card>\n    </Playground>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"#api\"\n      }}>{`API`}</a>{` for all available options.`}</p>\n    <h2 {...{\n      \"id\": \"general-guidelines\"\n    }}>{`General Guidelines`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The default (flat) card is `}<strong parentName=\"p\">{`designed for a non-white background.`}</strong>{` You may\nwant to either use a different `}<a parentName=\"p\" {...{\n            \"href\": \"#variants\"\n          }}>{`variant`}</a>{` or\n`}<a parentName=\"p\" {...{\n            \"href\": \"/customize/theming\"\n          }}>{`customize`}</a>{` the default appearance to make it stand\nout on white surfaces.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use options `}<a parentName=\"p\" {...{\n            \"href\": \"#cardbody\"\n          }}>{`CardBody`}</a>{` and `}<a parentName=\"p\" {...{\n            \"href\": \"#cardfooter\"\n          }}>{`CardFooter`}</a>{` components to\nprovide your content with expected spacing.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use `}<strong parentName=\"p\">{`medium or low-emphasis buttons`}</strong>{` when there are more cards, eg. in a\ngrid. It will help you keep the UI clean and easy to scan.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"card-composition\"\n    }}>{`Card Composition`}</h2>\n    <p>{`Aside from the `}<a parentName=\"p\" {...{\n        \"href\": \"#cardbody\"\n      }}>{`CardBody`}</a>{` element, you can add a\n`}<a parentName=\"p\" {...{\n        \"href\": \"#cardfooter\"\n      }}>{`CardFooter`}</a>{` to better separate your card's actions from the rest\nof the content.`}</p>\n    <p>{`Import all necessary components:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Card, CardBody, CardFooter } from '@react-ui-org/react-ui';\n`}</code></pre>\n    <p>{`And use them:`}</p>\n    <Playground __position={1} __code={'<Card>\\n  <CardBody>Hello! I&apos;m card with footer.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" />\\n  </CardFooter>\\n</Card>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      ScrollView,\n      Card,\n      CardBody,\n      CardFooter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Card mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m card with footer.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n    </Playground>\n    <p>{`👉 CardFooter is required in case you need to align the actions of multiple\ncards with varying height of content.`}</p>\n    <h2 {...{\n      \"id\": \"raised-card\"\n    }}>{`Raised Card`}</h2>\n    <p>{`Add optional shadow to lift the card above surface.`}</p>\n    <Playground __position={2} __code={'<Card raised>\\n  <CardBody>Hello! I&apos;m raised card with footer.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" />\\n  </CardFooter>\\n</Card>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      ScrollView,\n      Card,\n      CardBody,\n      CardFooter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Card raised mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m raised card with footer.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n    </Playground>\n    <h2 {...{\n      \"id\": \"bordered-card\"\n    }}>{`Bordered Card`}</h2>\n    <p>{`Use a border when you need to visually separate the card from its background.`}</p>\n    <Playground __position={3} __code={'<Card variant=\\\"bordered\\\">\\n  <CardBody>Hello! I&apos;m card with border and footer.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" />\\n  </CardFooter>\\n</Card>\\n<Card variant=\\\"bordered\\\" raised>\\n  <CardBody>Hello! I&apos;m raised card with border and footer.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" />\\n  </CardFooter>\\n</Card>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      ScrollView,\n      Card,\n      CardBody,\n      CardFooter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Card variant=\"bordered\" mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m card with border and footer.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n  <Card variant=\"bordered\" raised mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m raised card with border and footer.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n    </Playground>\n    <h2 {...{\n      \"id\": \"dense-card\"\n    }}>{`Dense Card`}</h2>\n    <p>{`Use a dense card when you need to save space on screen. Other elements in the\ncard should be also smaller to keep the card contained and easy to scan.`}</p>\n    <Playground __position={4} __code={'<Card dense raised>\\n  <CardBody>\\n    <small>Hello! I&apos;m dense card. Everything is smaller here.</small>\\n  </CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" size=\\\"small\\\" />\\n  </CardFooter>\\n</Card>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      ScrollView,\n      Card,\n      CardBody,\n      CardFooter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Card dense raised mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      <small>Hello! I&apos;m dense card. Everything is smaller here.</small>\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" size=\"small\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n    </Playground>\n    <h2 {...{\n      \"id\": \"scrollable-card\"\n    }}>{`Scrollable Card`}</h2>\n    <p>{`Combine Card with `}<a parentName=\"p\" {...{\n        \"href\": \"/components/ui/scroll-view\"\n      }}>{`ScrollView`}</a>{` to enable scrolling\nfor card content.`}</p>\n    <Playground __position={5} __code={'<div\\n  style={{\\n    display: \\'flex\\',\\n    height: \\'200px\\',\\n  }}\\n>\\n  <Card raised>\\n    <ScrollView>\\n      <CardBody>\\n        Hello! I&apos;m scrollable card. Lorem ipsum dolor sit amet,\\n        consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean\\n        massa. Cum sociis natoque penatibus et magnis dis parturient montes,\\n        nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque\\n        eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede\\n        justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim\\n        justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum\\n        felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus\\n        elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo\\n        ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam\\n        lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus\\n        viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean\\n        imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper\\n        ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus\\n        eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing\\n        sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar,\\n        hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus.\\n      </CardBody>\\n    </ScrollView>\\n  </Card>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      ScrollView,\n      Card,\n      CardBody,\n      CardFooter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div style={{\n        display: 'flex',\n        height: '200px'\n      }}>\n    <Card raised mdxType=\"Card\">\n      <ScrollView mdxType=\"ScrollView\">\n        <CardBody mdxType=\"CardBody\">\n          Hello! I&apos;m scrollable card.\n          Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo\n          ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis\n          dis parturient montes, nascetur ridiculus mus. Donec quam felis,\n          ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa\n          quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget,\n          arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo.\n          Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras\n          dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend\n          tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac,\n          enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus.\n          Phasellus viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean\n          imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper\n          ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus\n          eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing\n          sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar,\n          hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus.\n        </CardBody>\n      </ScrollView>\n    </Card>\n  </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"card-types\"\n    }}>{`Card Types`}</h2>\n    <p>{`All `}<a parentName=\"p\" {...{\n        \"href\": \"/foundation/colors#ui-colors\"\n      }}>{`UI colors`}</a>{` (success, warning, error, help,\ninfo, and note) are supported by cards to cover various needs of your app. The\nbordered card type is forced automatically to make sure the border is visible.`}</p>\n    <Playground __position={6} __code={'<Card type=\\\"success\\\">\\n  <CardBody>Hello! I&apos;m success variant of card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" variant=\\\"success\\\" />\\n  </CardFooter>\\n</Card>\\n<Card type=\\\"warning\\\">\\n  <CardBody>Hello! I&apos;m warning variant of card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" variant=\\\"warning\\\" />\\n  </CardFooter>\\n</Card>\\n<Card type=\\\"error\\\">\\n  <CardBody>Hello! I&apos;m error variant of card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" variant=\\\"danger\\\" />\\n  </CardFooter>\\n</Card>\\n<Card type=\\\"help\\\">\\n  <CardBody>Hello! I&apos;m help variant of card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" variant=\\\"dark\\\" />\\n  </CardFooter>\\n</Card>\\n<Card type=\\\"info\\\">\\n  <CardBody>Hello! I&apos;m info variant of card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" variant=\\\"dark\\\" />\\n  </CardFooter>\\n</Card>\\n<Card type=\\\"note\\\">\\n  <CardBody>Hello! I&apos;m note variant of card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" variant=\\\"dark\\\" />\\n  </CardFooter>\\n</Card>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      ScrollView,\n      Card,\n      CardBody,\n      CardFooter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Card type=\"success\" mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m success variant of card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" variant=\"success\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n  <Card type=\"warning\" mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m warning variant of card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" variant=\"warning\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n  <Card type=\"error\" mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m error variant of card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" variant=\"danger\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n  <Card type=\"help\" mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m help variant of card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" variant=\"dark\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n  <Card type=\"info\" mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m info variant of card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" variant=\"dark\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n  <Card type=\"note\" mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m note variant of card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" variant=\"dark\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n    </Playground>\n    <h2 {...{\n      \"id\": \"states\"\n    }}>{`States`}</h2>\n    <h3 {...{\n      \"id\": \"disabled-state\"\n    }}>{`Disabled State`}</h3>\n    <p>{`Entire card can appear disabled. However, you'll still need to manually disable\nits interactive elements to disallow user's interaction.`}</p>\n    <Playground __position={7} __code={'<Card disabled>\\n  <CardBody>Hello! I&apos;m a disabled card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" disabled />\\n  </CardFooter>\\n</Card>\\n<Card disabled raised>\\n  <CardBody>Hello! I&apos;m a disabled raised card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" disabled />\\n  </CardFooter>\\n</Card>\\n<Card variant=\\\"bordered\\\" disabled>\\n  <CardBody>Hello! I&apos;m a disabled bordered card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" disabled />\\n  </CardFooter>\\n</Card>\\n<Card type=\\\"success\\\" disabled>\\n  <CardBody>Hello! I&apos;m a disabled success variant of card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" variant=\\\"success\\\" disabled />\\n  </CardFooter>\\n</Card>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      ScrollView,\n      Card,\n      CardBody,\n      CardFooter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Card disabled mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m a disabled card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" disabled mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n  <Card disabled raised mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m a disabled raised card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" disabled mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n  <Card variant=\"bordered\" disabled mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m a disabled bordered card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" disabled mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n  <Card type=\"success\" disabled mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m a disabled success variant of card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" variant=\"success\" disabled mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <Props of={Card} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"cardbody\"\n    }}>{`CardBody`}</h3>\n    <p>{`Space your content with CardBody. See `}<a parentName=\"p\" {...{\n        \"href\": \"#card-composition\"\n      }}>{`Card Composition`}</a>{` for\nall details.`}</p>\n    <Props of={CardBody} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"cardfooter\"\n    }}>{`CardFooter`}</h3>\n    <p>{`Separate your card actions with CardFooter. See\n`}<a parentName=\"p\" {...{\n        \"href\": \"#card-composition\"\n      }}>{`Card Composition`}</a>{` for all details.`}</p>\n    <Props of={CardFooter} mdxType=\"Props\" />\n    <hr></hr>\n    <p>{`Next: `}<a parentName=\"p\" {...{\n        \"href\": \"/components/ui/checkbox-field\"\n      }}>{`CheckboxField →`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}