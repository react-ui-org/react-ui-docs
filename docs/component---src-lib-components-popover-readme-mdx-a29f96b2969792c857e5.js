(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{tiAa:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return v})),n.d(t,"default",(function(){return y}));var o=n("Fcif"),a=n("dV/x"),r=n("mXGw"),l=n("/FXl"),i=n("TjRS"),p=n("cHv/"),b=n("JzDW"),c=n("8nFo"),d=n("ZFoC"),s=n("s0IP"),m=n("nBnF");n("aD51");const u=["components"],v={};void 0!==v&&v&&v===Object(v)&&Object.isExtensible(v)&&!Object.prototype.hasOwnProperty.call(v,"__filemeta")&&Object.defineProperty(v,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/lib/components/Popover/README.mdx"}});const g={_frontmatter:v},O=i.a;function y(e){let{components:t}=e,n=Object(a.a)(e,u);return Object(l.b)(O,Object(o.a)({},g,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"popover"},"Popover"),Object(l.b)("p",null,"Popover displays additional information without interrupting user flow."),Object(l.b)("h2",{id:"basic-usage"},"Basic Usage"),Object(l.b)("p",null,"To implement the Popover component, you need to import it first:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"import { Popover, PopoverWrapper } from '@react-ui-org/react-ui';\n")),Object(l.b)("p",null,"And use it:"),Object(l.b)(d.c,{__position:0,__code:"() => {\n  const [isPopoverOpen, setIsPopoverOpen] = React.useState(false)\n  // All inline styles in this example are for demonstration purposes only.\n  return (\n    <div\n      style={{\n        display: 'grid',\n        placeContent: 'center',\n        minWidth: '20rem',\n        minHeight: '10rem',\n      }}\n    >\n      <PopoverWrapper>\n        <Button\n          aria-describedby={isPopoverOpen ? 'my-popover' : undefined}\n          label=\"Want to see a popover? Click me!\"\n          onClick={() => setIsPopoverOpen(!isPopoverOpen)}\n        />\n        {isPopoverOpen && <Popover id=\"my-popover\">Hello there!</Popover>}\n      </PopoverWrapper>\n    </div>\n  )\n}",__scope:{props:n,DefaultLayout:i.a,useFloating:p.a,autoUpdate:b.a,flip:c.c,Playground:d.c,Props:d.d,Placeholder:s.a,Button:m.c,Popover:m.v,ButtonGroup:m.d,SelectField:m.z,Toolbar:m.I,ToolbarItem:m.K,PopoverWrapper:m.w,DefaultLayout:i.a,_frontmatter:v},mdxType:"Playground"},()=>{const[e,t]=r.useState(!1);return Object(l.b)("div",{style:{display:"grid",placeContent:"center",minWidth:"20rem",minHeight:"10rem"}},Object(l.b)(m.w,{mdxType:"PopoverWrapper"},Object(l.b)(m.c,{"aria-describedby":e?"my-popover":void 0,label:"Want to see a popover? Click me!",onClick:()=>t(!e),mdxType:"Button"}),e&&Object(l.b)(m.v,{id:"my-popover",mdxType:"Popover"},"Hello there!")))}),Object(l.b)("p",null,"See ",Object(l.b)("a",{parentName:"p",href:"#api"},"API")," for all available options."),Object(l.b)("h2",{id:"placement"},"Placement"),Object(l.b)("p",null,"Available placements are: top, right, bottom, and left. Additionally, all basic\nplacements can be aligned to the center (default, no suffix), start (e.g.\n",Object(l.b)("inlineCode",{parentName:"p"},"top-start"),"), or end (e.g. ",Object(l.b)("inlineCode",{parentName:"p"},"bottom-end"),"). Check Popover ",Object(l.b)("a",{parentName:"p",href:"#api"},"API")," for the\ncomplete list of accepted values."),Object(l.b)(d.c,{__position:1,__code:"() => {\n  const [align, setAlign] = React.useState('')\n  // All inline styles in this example are for demonstration purposes only.\n  return (\n    <>\n      <Toolbar align=\"baseline\">\n        <ToolbarItem>\n          <span id=\"alignment-options-label\">Alignment:</span>\n        </ToolbarItem>\n        <ToolbarItem>\n          <ButtonGroup\n            aria-labelledby=\"alignment-options-label\"\n            priority=\"outline\"\n          >\n            <Button\n              aria-pressed={align === '-start'}\n              color={align === '-start' ? 'selected' : 'secondary'}\n              label=\"start\"\n              onClick={() => setAlign('-start')}\n            />\n            <Button\n              aria-pressed={align === ''}\n              color={align === '' ? 'selected' : 'secondary'}\n              label=\"center\"\n              onClick={() => setAlign('')}\n            />\n            <Button\n              aria-pressed={align === '-end'}\n              color={align === '-end' ? 'selected' : 'secondary'}\n              label=\"end\"\n              onClick={() => setAlign('-end')}\n            />\n          </ButtonGroup>\n        </ToolbarItem>\n      </Toolbar>\n      <div\n        style={{\n          display: 'grid',\n          placeContent: 'center',\n          minWidth: '20rem',\n          minHeight: '15rem',\n        }}\n      >\n        <PopoverWrapper>\n          <Placeholder bordered aria-describedby=\"my-popover-top\">\n            Popovers\n            <br />\n            all day long…\n          </Placeholder>\n          <Popover id=\"my-popover-top\" placement={`top${align}`}>\n            Top side\n          </Popover>\n          <Popover id=\"my-popover-right\" placement={`right${align}`}>\n            Right side\n          </Popover>\n          <Popover id=\"my-popover-bottom\" placement={`bottom${align}`}>\n            Bottom side\n          </Popover>\n          <Popover id=\"my-popover-left\" placement={`left${align}`}>\n            Left side\n          </Popover>\n        </PopoverWrapper>\n      </div>\n    </>\n  )\n}",__scope:{props:n,DefaultLayout:i.a,useFloating:p.a,autoUpdate:b.a,flip:c.c,Playground:d.c,Props:d.d,Placeholder:s.a,Button:m.c,Popover:m.v,ButtonGroup:m.d,SelectField:m.z,Toolbar:m.I,ToolbarItem:m.K,PopoverWrapper:m.w,DefaultLayout:i.a,_frontmatter:v},mdxType:"Playground"},()=>{const[e,t]=r.useState("");return Object(l.b)(r.Fragment,null,Object(l.b)(m.I,{align:"baseline",mdxType:"Toolbar"},Object(l.b)(m.K,{mdxType:"ToolbarItem"},Object(l.b)("span",{id:"alignment-options-label"},"Alignment:")),Object(l.b)(m.K,{mdxType:"ToolbarItem"},Object(l.b)(m.d,{"aria-labelledby":"alignment-options-label",priority:"outline",mdxType:"ButtonGroup"},Object(l.b)(m.c,{"aria-pressed":"-start"===e,color:"-start"===e?"selected":"secondary",label:"start",onClick:()=>t("-start"),mdxType:"Button"}),Object(l.b)(m.c,{"aria-pressed":""===e,color:""===e?"selected":"secondary",label:"center",onClick:()=>t(""),mdxType:"Button"}),Object(l.b)(m.c,{"aria-pressed":"-end"===e,color:"-end"===e?"selected":"secondary",label:"end",onClick:()=>t("-end"),mdxType:"Button"})))),Object(l.b)("div",{style:{display:"grid",placeContent:"center",minWidth:"20rem",minHeight:"15rem"}},Object(l.b)(m.w,{mdxType:"PopoverWrapper"},Object(l.b)(s.a,{bordered:!0,"aria-describedby":"my-popover-top",mdxType:"Placeholder"},"Popovers",Object(l.b)("br",null),"all day long…"),Object(l.b)(m.v,{id:"my-popover-top",placement:"top"+e,mdxType:"Popover"},"Top side"),Object(l.b)(m.v,{id:"my-popover-right",placement:"right"+e,mdxType:"Popover"},"Right side"),Object(l.b)(m.v,{id:"my-popover-bottom",placement:"bottom"+e,mdxType:"Popover"},"Bottom side"),Object(l.b)(m.v,{id:"my-popover-left",placement:"left"+e,mdxType:"Popover"},"Left side"))))}),Object(l.b)("h2",{id:"popoverwrapper"},"PopoverWrapper"),Object(l.b)("p",null,"PopoverWrapper is an optional wrapper to make positioning of Popover even\neasier."),Object(l.b)("p",null,"By default, Popover is placed relative to the closest parent element with\n",Object(l.b)("inlineCode",{parentName:"p"},"position: relative")," or ",Object(l.b)("inlineCode",{parentName:"p"},"position: absolute"),". Maybe you already have one of\nthese in your CSS. PopoverWrapper is here for situations when you don't."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},'<PopoverWrapper>\n  <Button\n    aria-describedby={isPopoverOpen ? \'my-popover\' : undefined}\n    label="Want to see a popover? Click me!"\n    onClick={() => setIsPopoverOpen(!isPopoverOpen)}\n  />\n  {isPopoverOpen && <Popover id="my-popover">Hello there!</Popover>}\n</PopoverWrapper>\n')),Object(l.b)("p",null,"How do you know you may need PopoverWrapper?"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"You are ",Object(l.b)("strong",{parentName:"li"},"not")," rendering Popover in a React portal."),Object(l.b)("li",{parentName:"ul"},"You are using Popover in a complex layout and it does not pop up where you\nneed it."),Object(l.b)("li",{parentName:"ul"},"You are using Floating UI with ",Object(l.b)("inlineCode",{parentName:"li"},"absolute")," positioning strategy (see\n",Object(l.b)("a",{parentName:"li",href:"#advanced-positioning"},"Advanced Positioning")," below) and your Popover keeps to\nbe misplaced."),Object(l.b)("li",{parentName:"ul"},"You have no idea what CSS ",Object(l.b)("inlineCode",{parentName:"li"},"position")," is and just want to get it working.")),Object(l.b)("p",null,"To sum it up, usually you will need either PopoverWrapper around your content or\n",Object(l.b)("inlineCode",{parentName:"p"},"position: [ relative | absolute ]")," somewhere in your CSS (but you never need\nboth!). Nevertheless, in the simplest situations, like in a single-column page\nlayout, you may not need either of these at all."),Object(l.b)("p",null,"Head to PopoverWrapper ",Object(l.b)("a",{parentName:"p",href:"#popoverwrapper-api"},"API")," for all available options."),Object(l.b)("h2",{id:"advanced-positioning"},"Advanced Positioning"),Object(l.b)("p",null,"While the basic setup can be sufficient in some scenarios, dropping a Popover\nusually won't be so easy. To handle all tricky situations and edge cases\nautomatically, including smart position updates to ensure Popover visibility,\nwe recommend to involve an external library designed specifically for this\npurpose."),Object(l.b)("p",null,"ℹ️ The following example is using external library ",Object(l.b)("a",{parentName:"p",href:"https://floating-ui.com/docs/react-dom"},"Floating UI"),". To use\nFloating UI, install it first:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-shell"},"npm install --save @floating-ui/react-dom\n")),Object(l.b)("p",null,"And import it along with Popover, e.g.:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"import {\n  useFloating,\n  autoUpdate,\n  flip,\n} from '@floating-ui/react-dom';\nimport { Popover } from '@react-ui-org/react-ui';\n")),Object(l.b)("p",null,"As opposed to the ",Object(l.b)("a",{parentName:"p",href:"#placement"},"basic setup"),", Popover will be placed according to\nits triggering component (",Object(l.b)("inlineCode",{parentName:"p"},"reference"),"), but still recognizing the closest parent\nelement with ",Object(l.b)("inlineCode",{parentName:"p"},"position: relative")," or ",Object(l.b)("inlineCode",{parentName:"p"},"position: absolute")," if there is any."),Object(l.b)("p",null,"Popover reacts on the ",Object(l.b)("inlineCode",{parentName:"p"},"ref")," option, necessary for advanced positioning:\nwhen ",Object(l.b)("inlineCode",{parentName:"p"},"ref")," is set, Popover resets its built-in positioning and relies\non provided ",Object(l.b)("inlineCode",{parentName:"p"},"style"),"."),Object(l.b)("p",null,"👉 Please consult ",Object(l.b)("a",{parentName:"p",href:"https://floating-ui.com/docs/react-dom"},"Floating UI")," documentation to understand how it works and to\nget an idea of all possible cases you may need to cover."),Object(l.b)("p",null,"🖱 Try scrolling the example to see how Popover placement is updated."),Object(l.b)(d.c,{__position:2,__code:"() => {\n  const [isPopoverOpen, setIsPopoverOpen] = React.useState(false)\n  const [placement, setPlacement] = React.useState('top')\n  const {\n    x,\n    y,\n    reference,\n    floating,\n    placement: finalPlacement,\n    strategy,\n  } = useFloating({\n    placement,\n    middleware: [flip()],\n    whileElementsMounted: autoUpdate,\n  })\n  const placementOptions = [\n    'top',\n    'top-start',\n    'top-end',\n    'right',\n    'right-start',\n    'right-end',\n    'bottom',\n    'bottom-start',\n    'bottom-end',\n    'left',\n    'left-start',\n    'left-end',\n  ]\n  // All inline styles in this example EXCEPT Popover `style` are for\n  // demonstration purposes only.\n  return (\n    <>\n      <Toolbar>\n        <ToolbarItem>\n          <SelectField\n            label=\"Suggested placement:\"\n            onChange={e => setPlacement(e.target.value)}\n            options={placementOptions.map(el => ({\n              label: el,\n              value: el,\n            }))}\n            value={placement}\n          />\n        </ToolbarItem>\n        <ToolbarItem>\n          <div className=\"mb-2\">Final placement:</div>\n          <code>{finalPlacement}</code>\n        </ToolbarItem>\n      </Toolbar>\n      <div\n        style={{\n          width: '40rem',\n          maxWidth: '100%',\n          height: '10rem',\n          overflow: 'auto',\n        }}\n      >\n        <div\n          style={{\n            position: 'relative',\n            width: '60rem',\n            height: '20rem',\n            paddingBlock: '7rem',\n            textAlign: 'center',\n          }}\n        >\n          <Button\n            aria-describedby={\n              isPopoverOpen ? 'my-advanced-popover' : undefined\n            }\n            label=\"Trigger Popover\"\n            onClick={() => setIsPopoverOpen(!isPopoverOpen)}\n            ref={reference}\n          />\n          {isPopoverOpen && (\n            <Popover\n              id=\"my-advanced-popover\"\n              placement={finalPlacement}\n              style={{\n                position: strategy,\n                top: y ? y : '',\n                left: x ? x : '',\n              }}\n              ref={floating}\n            >\n              Auto-flipping Popover\n            </Popover>\n          )}\n        </div>\n      </div>\n    </>\n  )\n}",__scope:{props:n,DefaultLayout:i.a,useFloating:p.a,autoUpdate:b.a,flip:c.c,Playground:d.c,Props:d.d,Placeholder:s.a,Button:m.c,Popover:m.v,ButtonGroup:m.d,SelectField:m.z,Toolbar:m.I,ToolbarItem:m.K,PopoverWrapper:m.w,DefaultLayout:i.a,_frontmatter:v},mdxType:"Playground"},()=>{const[e,t]=r.useState(!1),[n,o]=r.useState("top"),{x:a,y:i,reference:d,floating:s,placement:u,strategy:v}=Object(p.a)({placement:n,middleware:[Object(c.c)()],whileElementsMounted:b.a});return Object(l.b)(r.Fragment,null,Object(l.b)(m.I,{mdxType:"Toolbar"},Object(l.b)(m.K,{mdxType:"ToolbarItem"},Object(l.b)(m.z,{label:"Suggested placement:",onChange:e=>o(e.target.value),options:["top","top-start","top-end","right","right-start","right-end","bottom","bottom-start","bottom-end","left","left-start","left-end"].map(e=>({label:e,value:e})),value:n,mdxType:"SelectField"})),Object(l.b)(m.K,{mdxType:"ToolbarItem"},Object(l.b)("div",{className:"mb-2"},"Final placement:"),Object(l.b)("code",null,u))),Object(l.b)("div",{style:{width:"40rem",maxWidth:"100%",height:"10rem",overflow:"auto"}},Object(l.b)("div",{style:{position:"relative",width:"60rem",height:"20rem",paddingBlock:"7rem",textAlign:"center"}},Object(l.b)(m.c,{"aria-describedby":e?"my-advanced-popover":void 0,label:"Trigger Popover",onClick:()=>t(!e),ref:d,mdxType:"Button"}),e&&Object(l.b)(m.v,{id:"my-advanced-popover",placement:u,style:{position:v,top:i||"",left:a||""},ref:s,mdxType:"Popover"},"Auto-flipping Popover"))))}),Object(l.b)("h2",{id:"forwarding-html-attributes"},"Forwarding HTML Attributes"),Object(l.b)("p",null,"In addition to the options below in the ",Object(l.b)("a",{parentName:"p",href:"#api"},"component's API")," section, you\ncan specify ",Object(l.b)("a",{parentName:"p",href:"https://reactjs.org/docs/events.html"},"React synthetic events")," or ",Object(l.b)("strong",{parentName:"p"},"any HTML attribute you like.")," All\nattributes that don't interfere with the API are forwarded to the root ",Object(l.b)("inlineCode",{parentName:"p"},"<div>"),"\nHTML element. This enables making the component interactive and helps to improve\nits accessibility."),Object(l.b)("p",null,"👉 Refer to the MDN reference for the full list of supported attributes of the\n",Object(l.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div#attributes"},"div")," element."),Object(l.b)("h2",{id:"forwarding-ref"},"Forwarding ref"),Object(l.b)("p",null,"If you provide ",Object(l.b)("a",{parentName:"p",href:"https://reactjs.org/docs/refs-and-the-dom.html"},"ref"),", it is forwarded to the root native HTML ",Object(l.b)("inlineCode",{parentName:"p"},"<div>")," element,\nwhich enables ",Object(l.b)("a",{parentName:"p",href:"#advanced-positioning"},"Advanced Positioning"),"."),Object(l.b)("h2",{id:"api"},"API"),Object(l.b)(d.d,{table:!0,of:m.v,mdxType:"Props"}),Object(l.b)("h3",{id:"popoverwrapper-api"},"PopoverWrapper API"),Object(l.b)(d.d,{table:!0,of:m.w,mdxType:"Props"}),Object(l.b)("h2",{id:"theming"},"Theming"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Custom Property"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-Popover__width")),Object(l.b)("td",{parentName:"tr",align:null},"Popover width")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-Popover__padding")),Object(l.b)("td",{parentName:"tr",align:null},"Popover padding")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-Popover__border-width")),Object(l.b)("td",{parentName:"tr",align:null},"Border width")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-Popover__border-color")),Object(l.b)("td",{parentName:"tr",align:null},"Border color")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-Popover__border-radius")),Object(l.b)("td",{parentName:"tr",align:null},"Corner radius")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-Popover__color")),Object(l.b)("td",{parentName:"tr",align:null},"Text color")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-Popover__background-color")),Object(l.b)("td",{parentName:"tr",align:null},"Background color")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-Popover__box-shadow")),Object(l.b)("td",{parentName:"tr",align:null},"Popover box shadow")))))}void 0!==y&&y&&y===Object(y)&&Object.isExtensible(y)&&!Object.prototype.hasOwnProperty.call(y,"__filemeta")&&Object.defineProperty(y,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/lib/components/Popover/README.mdx"}}),y.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-lib-components-popover-readme-mdx-a29f96b2969792c857e5.js.map