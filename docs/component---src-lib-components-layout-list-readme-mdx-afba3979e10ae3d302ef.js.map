{"version":3,"sources":["webpack:///../src/lib/components/layout/List/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Placeholder","List","ListItem","bordered","align","autoWidth","table","of","isMDXComponent"],"mappings":"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","file":"component---src-lib-components-layout-list-readme-mdx-afba3979e10ae3d302ef.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-ui/react-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Placeholder } from '../../../../docs/_components/Placeholder/Placeholder';\nimport { List } from './List';\nimport { ListItem } from './ListItem';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"list\"\n    }}>{`List`}</h1>\n\n    <p>{`The List aligns content into an organized list.`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <p>{`To implement the List component, you need to import it first:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { List, ListItem } from '@react-ui-org/react-ui';\n`}</code></pre>\n    <p>{`And use it:`}</p>\n    <Playground __position={0} __code={'<List>\\n  <ListItem>\\n    <Placeholder bordered>List item</Placeholder>\\n  </ListItem>\\n  <ListItem>\\n    <Placeholder bordered>List item</Placeholder>\\n  </ListItem>\\n  <ListItem>\\n    <Placeholder bordered>List item</Placeholder>\\n  </ListItem>\\n</List>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Placeholder,\n      List,\n      ListItem,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <List mdxType=\"List\">\n    <ListItem mdxType=\"ListItem\">\n      <Placeholder bordered mdxType=\"Placeholder\">List item</Placeholder>\n    </ListItem>\n    <ListItem mdxType=\"ListItem\">\n      <Placeholder bordered mdxType=\"Placeholder\">List item</Placeholder>\n    </ListItem>\n    <ListItem mdxType=\"ListItem\">\n      <Placeholder bordered mdxType=\"Placeholder\">List item</Placeholder>\n    </ListItem>\n  </List>\n    </Playground>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"#api\"\n      }}>{`API`}</a>{` for all available options.`}</p>\n    <h2 {...{\n      \"id\": \"general-guidelines\"\n    }}>{`General Guidelines`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Wrap your items`}</strong>{` into the `}<a parentName=\"p\" {...{\n            \"href\": \"#listitem\"\n          }}>{`ListItem`}</a>{` component. This ensures\nyour content is properly spaced and aligned with other List elements. Do\n`}<strong parentName=\"p\">{`not`}</strong>{` try to put any custom HTML or React components directly into the\nList layout without wrapping it with the ListItem first.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`For forms, use rather the `}<a parentName=\"p\" {...{\n            \"href\": \"/components/layout/form-layout\"\n          }}>{`FormLayout`}</a>{`\ncomponent which is designed specifically for that purpose.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"list-alignment\"\n    }}>{`List Alignment`}</h2>\n    <p>{`You can simply set the list alignment by specifying the `}<inlineCode parentName=\"p\">{`align`}</inlineCode>{` option.`}</p>\n    <p>{`ðŸ‘‰ At the current stage of development, React UI is `}<strong parentName=\"p\">{`RTL aware`}</strong>{` so switching\nto a fully RTL-compatible behavior in the future should be painless. That's why\nthe alignment values are called rather `}<inlineCode parentName=\"p\">{`start`}</inlineCode>{` than `}<inlineCode parentName=\"p\">{`left`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`end`}</inlineCode>{` instead of\n`}<inlineCode parentName=\"p\">{`right`}</inlineCode>{`.`}</p>\n    <Playground __position={1} __code={'<List align=\\\"end\\\">\\n  <ListItem>\\n    <Placeholder bordered>List item</Placeholder>\\n  </ListItem>\\n  <ListItem>\\n    <Placeholder bordered>List item</Placeholder>\\n  </ListItem>\\n  <ListItem>\\n    <Placeholder bordered>List item</Placeholder>\\n  </ListItem>\\n</List>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Placeholder,\n      List,\n      ListItem,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <List align=\"end\" mdxType=\"List\">\n    <ListItem mdxType=\"ListItem\">\n      <Placeholder bordered mdxType=\"Placeholder\">List item</Placeholder>\n    </ListItem>\n    <ListItem mdxType=\"ListItem\">\n      <Placeholder bordered mdxType=\"Placeholder\">List item</Placeholder>\n    </ListItem>\n    <ListItem mdxType=\"ListItem\">\n      <Placeholder bordered mdxType=\"Placeholder\">List item</Placeholder>\n    </ListItem>\n  </List>\n    </Playground>\n    <h2 {...{\n      \"id\": \"auto-width\"\n    }}>{`Auto Width`}</h2>\n    <p>{`For cases when you prefer the list items to keep their original width and don't\nwant them to expand over the full width of the parent of the list, there is the\n`}<inlineCode parentName=\"p\">{`autoWidth`}</inlineCode>{` option. It `}<strong parentName=\"p\">{`shrinks the list according to its longest item.`}</strong>{`\nHowever, the root div always behaves as a full-width block element (unless you\nput it inside a flex or grid layout).`}</p>\n    <Playground __position={2} __code={'<List align=\\\"end\\\" autoWidth>\\n  <ListItem>\\n    <Placeholder bordered>List item</Placeholder>\\n  </ListItem>\\n  <ListItem>\\n    <Placeholder bordered>List item that is longer</Placeholder>\\n  </ListItem>\\n  <ListItem>\\n    <Placeholder bordered>List item that is even a bit longer</Placeholder>\\n  </ListItem>\\n</List>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Placeholder,\n      List,\n      ListItem,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <List align=\"end\" autoWidth mdxType=\"List\">\n    <ListItem mdxType=\"ListItem\">\n      <Placeholder bordered mdxType=\"Placeholder\">List item</Placeholder>\n    </ListItem>\n    <ListItem mdxType=\"ListItem\">\n      <Placeholder bordered mdxType=\"Placeholder\">List item that is longer</Placeholder>\n    </ListItem>\n    <ListItem mdxType=\"ListItem\">\n      <Placeholder bordered mdxType=\"Placeholder\">List item that is even a bit longer</Placeholder>\n    </ListItem>\n  </List>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <Props table of={List} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"listitem-api\"\n    }}>{`ListItem API`}</h3>\n    <p>{`A wrapper for individual list items.`}</p>\n    <Props table of={ListItem} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"theming\"\n    }}>{`Theming`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Custom Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--rui-List__row-gap`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Gap between list items`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}