(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{e2aI:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return b})),n.d(t,"default",(function(){return s}));var a=n("Fcif"),o=n("dV/x"),i=(n("mXGw"),n("/FXl")),l=n("TjRS");n("aD51");const r=["components"],b={};void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!Object.prototype.hasOwnProperty.call(b,"__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"CONTRIBUTING.md"}});const c={_frontmatter:b},p=l.a;function s(e){let{components:t}=e,n=Object(o.a)(e,r);return Object(i.b)(p,Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"contributing"},"Contributing"),Object(i.b)("p",null,"In the first place, thank you for your interest in contributing! üôè"),Object(i.b)("h2",{id:"development"},"Development"),Object(i.b)("p",null,"To build the project:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Install local npm packages: ",Object(i.b)("inlineCode",{parentName:"li"},"npm install")),Object(i.b)("li",{parentName:"ol"},"Run the build: ",Object(i.b)("inlineCode",{parentName:"li"},"npm run build"))),Object(i.b)("p",null,"To run the dev server:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Install local npm packages: ",Object(i.b)("inlineCode",{parentName:"li"},"npm install")),Object(i.b)("li",{parentName:"ol"},"Run the dev server (usually on ",Object(i.b)("inlineCode",{parentName:"li"},"http://localhost:3000"),"): ",Object(i.b)("inlineCode",{parentName:"li"},"npm start"))),Object(i.b)("h2",{id:"git-workflow"},"Git Workflow"),Object(i.b)("p",null,"In order for the automation to work in the best possible way (we use GitHub\nActions), please follow these guidelines:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"One pull request per subject.")," Don't combine unrelated changes in a single\nPR unless they are really subtle details such as fix of a typo.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Only PRs into ",Object(i.b)("inlineCode",{parentName:"strong"},"master")," branch are listed in changelog.")," PRs into other\nbranches are not picked up by release automation.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Name your branches according to nature of change.")," Choose one of:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"bc/*")," for breaking changes"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"feature/*")," for features"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"bugfix/*")," for bugfixes"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"refactoring/*")," for refactoring of the library"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"docs/*")," or ",Object(i.b)("inlineCode",{parentName:"li"},"documentation/*")," for changes in docs"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"maintenance/*")," for maintenance (builds, dependencies, automation, etc.)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"release/*")," for ",Object(i.b)("a",{parentName:"li",href:"/contribute/releasing"},"releases")," (administrators only)"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Write clear, helpful and descriptive commit messages.")),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},Object(i.b)("strong",{parentName:"li"},"Use imperative and write in English,")," e.g. ",Object(i.b)("em",{parentName:"li"},"Update dependencies")," or\n",Object(i.b)("em",{parentName:"li"},"Claim support for controlled components only"),"."),Object(i.b)("li",{parentName:"ol"},Object(i.b)("strong",{parentName:"li"},"If an issue exists for your changes, append the issue number")," in\nparentheses to the end of the commit message, e.g. ",Object(i.b)("em",{parentName:"li"},"Update dependencies\n(#261)"),"."),Object(i.b)("li",{parentName:"ol"},"Optionally use Markdown code blocks to emphasize, e.g.\n",Object(i.b)("em",{parentName:"li"},"Create ",Object(i.b)("inlineCode",{parentName:"em"},"ScrollView")," component (#53)"),"."))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Write clear, helpful and descriptive PR names.")),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},Object(i.b)("strong",{parentName:"li"},"All rules for commit messages apply")," also for PR names."),Object(i.b)("li",{parentName:"ol"},Object(i.b)("strong",{parentName:"li"},"Always check that PR name meets the requirements")," above because ",Object(i.b)("strong",{parentName:"li"},"PR\nnames are used in changelog"),". GitHub automatically truncates long PR\nnames and picks up branch name for multi-commit PRs, so it's necessary to\nmake sure the PR name is what we want to have in the changelog."),Object(i.b)("li",{parentName:"ol"},Object(i.b)("strong",{parentName:"li"},"If an issue exists for your changes, append this text to PR\ndescription")," (the topmost comment in the PR) in order for the issue to be\nclosed automatically once the PR is merged: ",Object(i.b)("inlineCode",{parentName:"li"},"Closes #<ISSUE NUMBER>"),". You\nwill know the issue is linked correctly when it appears in the ",Object(i.b)("em",{parentName:"li"},"Linked\nissues")," section of the PR. (Having the issue mentioned in commit message\nand/or PR name does ",Object(i.b)("em",{parentName:"li"},"not")," have this effect.)"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("strong",{parentName:"li"},"If there is no issue for your changes, please add your PR to ",Object(i.b)("inlineCode",{parentName:"strong"},"The\nBoard"))," GitHub project in the ",Object(i.b)("em",{parentName:"li"},"Projects")," section of the PR. The correct\nboard column will be selected automatically. This helps us keep track of\nwhat is in development.")))),Object(i.b)("p",null,"Pull requests are labelled automatically. You can add more labels to better\nqualify the nature of the change ‚Äî in such case, it will be included in all\ncorresponding changelog groups. Or use the ",Object(i.b)("inlineCode",{parentName:"p"},"skip changelog")," label to exclude a\npull request from the changelog."),Object(i.b)("h2",{id:"package-linking"},"Package Linking"),Object(i.b)("p",null,"The best way for development of React UI is to link ",Object(i.b)("inlineCode",{parentName:"p"},"react-ui")," into your\napplication with ",Object(i.b)("inlineCode",{parentName:"p"},"npm link")," so you can see it in action."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"In React UI repository, run ",Object(i.b)("inlineCode",{parentName:"li"},"npm link")),Object(i.b)("li",{parentName:"ol"},"In your application, run ",Object(i.b)("inlineCode",{parentName:"li"},"npm link @react-ui-org/react-ui"))),Object(i.b)("p",null,"To prevent\n",Object(i.b)("a",{parentName:"p",href:"https://reactjs.org/warnings/invalid-hook-call-warning.html#duplicate-react"},"Invalid Hook Call Warning"),"\nwhen React UI is linked, add the following code to your app's Webpack config:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"const path = require('path');\n\nmodule.exports = {\n  resolve: {\n    alias: {\n      react: path.resolve('./node_modules/react'),\n      'react-dom': path.resolve('./node_modules/react-dom'),\n    },\n  },\n};\n")),Object(i.b)("h2",{id:"general-guidelines"},"General Guidelines"),Object(i.b)("p",null,"To keep React UI consistent and predictable the following guidelines should be observed:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"If component accepts the ",Object(i.b)("inlineCode",{parentName:"li"},"children")," prop it should be either required or the element\nshould return ",Object(i.b)("inlineCode",{parentName:"li"},"null")," when no children are provided.")),Object(i.b)("h2",{id:"documenting"},"Documenting"),Object(i.b)("p",null,"We use ",Object(i.b)("a",{parentName:"p",href:"https://docz.site"},"Docz")," (powered by ",Object(i.b)("a",{parentName:"p",href:"https://www.gatsbyjs.com"},"Gatsby"),")\nas the documentation platform. The documentation itself is written in\n",Object(i.b)("a",{parentName:"p",href:"https://mdxjs.com"},"MDX")," format ‚Äî a human-readable blend of the popular Markdown\nand JSX syntax."),Object(i.b)("p",null,"Run ",Object(i.b)("inlineCode",{parentName:"p"},"npm start")," to run the docs in development mode, and open\n",Object(i.b)("inlineCode",{parentName:"p"},"http://localhost:3000")," in your browser to see the docs in live-reload mode."),Object(i.b)("p",null,"A few things to note:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"In order to get component props parsed and rendered by Docz, it's crucial to\n",Object(i.b)("strong",{parentName:"p"},"import the component into an MDX file right from its source file")," ‚Äî parsing\na re-exported component (typically via ",Object(i.b)("inlineCode",{parentName:"p"},"index.js"),") isn't currently supported.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"If you don't want Gatsby to collect ",Object(i.b)("strong",{parentName:"p"},"anonymous statistics"),", you may want to\ndisable ",Object(i.b)("a",{parentName:"p",href:"https://www.gatsbyjs.com/docs/telemetry/"},"Gatsby telemetry")," by\nrunning ",Object(i.b)("inlineCode",{parentName:"p"},"npx gatsby telemetry --disable"),".")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"If you see the Not found page after having ",Object(i.b)("strong",{parentName:"p"},"changed the configuration of Docz\nor Gatsby in the live-reload mode,")," you may either restart the Docz\ndevelopment server (",Object(i.b)("inlineCode",{parentName:"p"},"ctrl + c")," and ",Object(i.b)("inlineCode",{parentName:"p"},"npm start"),"), or try to edit an MDX file\nwhich makes the Docz rebuild, too.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"To ",Object(i.b)("strong",{parentName:"p"},"make your authoring experience better,")," we recommend to make sure your\nIDE understands the MDX syntax and is able to help you wrap lines in MD and\nMDX files automatically (Jetbrains IDE's and VSCode support both features\nout-of-the-box or through a plugin)."))))}void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!Object.prototype.hasOwnProperty.call(s,"__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"CONTRIBUTING.md"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---contributing-md-865a49591cf3fa42a920.js.map