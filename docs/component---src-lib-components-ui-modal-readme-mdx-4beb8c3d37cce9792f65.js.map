{"version":3,"sources":["webpack:///../src/lib/components/ui/Modal/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Button","Modal","ParsableModal","modalOpen","setModalOpen","React","clickHandler","label","priority","title","actions","color","closeHandler","modalSize","setModalSize","size","modalPosition","setModalPosition","position","modalScrollView","setModalScrollView","autoFocus","scrollView","undefined","role","aria-label","table","of","isMDXComponent"],"mappings":"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","file":"component---src-lib-components-ui-modal-readme-mdx-4beb8c3d37cce9792f65.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-ui/react-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Button from '../Button';\nimport { ModalWithContext as Modal, Modal as ParsableModal } from './Modal';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"modal\"\n    }}>{`Modal`}</h1>\n    <p>{`Modal allows to prompt users to take or complete an action.`}</p>\n\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <p>{`To implement the Modal component, you need to import it first:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Modal } from '@react-ui-org/react-ui';\n`}</code></pre>\n    <p>{`And use it:`}</p>\n    <Playground __position={0} __code={'() => {\\n  const [modalOpen, setModalOpen] = React.useState(false)\\n  return (\\n    <>\\n      <Button\\n        clickHandler={() => setModalOpen(true)}\\n        label=\\\"Launch modal\\\"\\n        priority=\\\"outline\\\"\\n      />\\n      <div>\\n        {modalOpen && (\\n          <Modal\\n            title=\\\"Warning\\\"\\n            actions={[\\n              {\\n                clickHandler: () => setModalOpen(false),\\n                label: \\'Delete\\',\\n                color: \\'danger\\',\\n              },\\n            ]}\\n            closeHandler={() => setModalOpen(false)}\\n          >\\n            <p>\\n              Do you really want to delete the user <code>admin</code>? This\\n              cannot be undone.\\n            </p>\\n          </Modal>\\n        )}\\n      </div>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Modal,\n      ParsableModal,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [modalOpen, setModalOpen] = React.useState(false);\n        return <>\n        <Button clickHandler={() => setModalOpen(true)} label=\"Launch modal\" priority=\"outline\" mdxType=\"Button\" />\n        <div>\n          {modalOpen && <Modal title=\"Warning\" actions={[{\n              clickHandler: () => setModalOpen(false),\n              label: 'Delete',\n              color: 'danger'\n            }]} closeHandler={() => setModalOpen(false)} mdxType=\"Modal\">\n              <p>\n                Do you really want to delete the user <code>admin</code>?\n                This cannot be undone.\n              </p>\n            </Modal>}\n        </div>\n      </>;\n      }}\n    </Playground>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"#api\"\n      }}>{`API`}</a>{` for all available options.`}</p>\n    <h2 {...{\n      \"id\": \"general-guidelines\"\n    }}>{`General Guidelines`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use modals to `}<strong parentName=\"p\">{`confirm an action,`}</strong>{` display a `}<strong parentName=\"p\">{`blocking alert`}</strong>{`, or to\nreveal `}<strong parentName=\"p\">{`contextual options or settings`}</strong>{` that cannot be displayed inline\nwith the parent content.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`The title`}</strong>{` should communicate the `}<strong parentName=\"p\">{`purpose of the modal`}</strong>{` rather than a\ngeneric text. Eg. “Delete the user?” tells more than “Are you sure?” or\n“Warning”.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Modal actions`}</strong>{` should correspond to the modal purpose, too. Eg. “Delete”\ntells better what happens rather than “OK”.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Modal `}<strong parentName=\"p\">{`automatically focuses the first form field`}</strong>{` by default which allows\nusers to confirm the modal by hitting enter key (requires an action of type\n`}<inlineCode parentName=\"p\">{`submit`}</inlineCode>{`). When no field is found then the first button in footer is focused.\nTo turn this feature off, set the `}<inlineCode parentName=\"p\">{`autofocus`}</inlineCode>{` prop to `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Avoid stacking`}</strong>{` of modals. While it may technically work, the modal is just\nnot designed for that.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h2>\n    <p>{`Modal is available in three fixed-width sizes: small, medium, large and fullscreen.\nModals of any size automatically shrink when they cannot fit the screen width.`}</p>\n    <Playground __position={1} __code={'() => {\\n  const [modalOpen, setModalOpen] = React.useState(false)\\n  const [modalSize, setModalSize] = React.useState(\\'small\\')\\n  return (\\n    <>\\n      <Button\\n        clickHandler={() => {\\n          setModalSize(\\'small\\')\\n          setModalOpen(true)\\n        }}\\n        label=\\\"Launch small modal\\\"\\n        priority=\\\"outline\\\"\\n      />\\n      <Button\\n        clickHandler={() => {\\n          setModalSize(\\'medium\\')\\n          setModalOpen(true)\\n        }}\\n        label=\\\"Launch medium modal\\\"\\n        priority=\\\"outline\\\"\\n      />\\n      <Button\\n        clickHandler={() => {\\n          setModalSize(\\'large\\')\\n          setModalOpen(true)\\n        }}\\n        label=\\\"Launch large modal\\\"\\n        priority=\\\"outline\\\"\\n      />\\n      <Button\\n        clickHandler={() => {\\n          setModalSize(\\'fullscreen\\')\\n          setModalOpen(true)\\n        }}\\n        label=\\\"Launch fullscreen modal\\\"\\n        priority=\\\"outline\\\"\\n      />\\n      <div>\\n        {modalOpen && (\\n          <Modal\\n            title=\\\"Delete the user?\\\"\\n            actions={[\\n              {\\n                clickHandler: () => setModalOpen(false),\\n                label: \\'Delete\\',\\n                color: \\'danger\\',\\n              },\\n            ]}\\n            closeHandler={() => setModalOpen(false)}\\n            size={modalSize}\\n          >\\n            <p>\\n              Do you really want to delete the user <code>admin</code>? This\\n              cannot be undone.\\n            </p>\\n          </Modal>\\n        )}\\n      </div>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Modal,\n      ParsableModal,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [modalOpen, setModalOpen] = React.useState(false);\n        const [modalSize, setModalSize] = React.useState('small');\n        return <>\n        <Button clickHandler={() => {\n            setModalSize('small');\n            setModalOpen(true);\n          }} label=\"Launch small modal\" priority=\"outline\" mdxType=\"Button\" />\n        <Button clickHandler={() => {\n            setModalSize('medium');\n            setModalOpen(true);\n          }} label=\"Launch medium modal\" priority=\"outline\" mdxType=\"Button\" />\n        <Button clickHandler={() => {\n            setModalSize('large');\n            setModalOpen(true);\n          }} label=\"Launch large modal\" priority=\"outline\" mdxType=\"Button\" />\n        <Button clickHandler={() => {\n            setModalSize('fullscreen');\n            setModalOpen(true);\n          }} label=\"Launch fullscreen modal\" priority=\"outline\" mdxType=\"Button\" />\n        <div>\n          {modalOpen && <Modal title=\"Delete the user?\" actions={[{\n              clickHandler: () => setModalOpen(false),\n              label: 'Delete',\n              color: 'danger'\n            }]} closeHandler={() => setModalOpen(false)} size={modalSize} mdxType=\"Modal\">\n              <p>\n                Do you really want to delete the user <code>admin</code>?\n                This cannot be undone.\n              </p>\n            </Modal>}\n        </div>\n      </>;\n      }}\n    </Playground>\n    <p>{`On top of that, the modal is able to adjust to the width of its content.`}</p>\n    <p>{`👉 Please note the auto width may not function correctly in combination with\nother auto layout mechanisms, e.g. the auto-width\n`}<a parentName=\"p\" {...{\n        \"href\": \"/components/layout/form-layout#label-width\"\n      }}>{`FormLayout`}</a>{`. It's just too much\nmagic that doesn't work together yet 🎩.`}</p>\n    <Playground __position={2} __code={'() => {\\n  const [modalOpen, setModalOpen] = React.useState(false)\\n  return (\\n    <>\\n      <Button\\n        clickHandler={() => setModalOpen(true)}\\n        label=\\\"Launch auto-width modal\\\"\\n        priority=\\\"outline\\\"\\n      />\\n      <div>\\n        {modalOpen && (\\n          <Modal\\n            title=\\\"Delete the user?\\\"\\n            actions={[\\n              {\\n                clickHandler: () => setModalOpen(false),\\n                label: \\'Delete\\',\\n                color: \\'danger\\',\\n              },\\n            ]}\\n            closeHandler={() => setModalOpen(false)}\\n            size=\\\"auto\\\"\\n          >\\n            <p>\\n              Do you really want to delete the user <code>admin</code>? This\\n              cannot be undone.\\n            </p>\\n          </Modal>\\n        )}\\n      </div>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Modal,\n      ParsableModal,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [modalOpen, setModalOpen] = React.useState(false);\n        return <>\n        <Button clickHandler={() => setModalOpen(true)} label=\"Launch auto-width modal\" priority=\"outline\" mdxType=\"Button\" />\n        <div>\n          {modalOpen && <Modal title=\"Delete the user?\" actions={[{\n              clickHandler: () => setModalOpen(false),\n              label: 'Delete',\n              color: 'danger'\n            }]} closeHandler={() => setModalOpen(false)} size=\"auto\" mdxType=\"Modal\">\n              <p>\n                Do you really want to delete the user <code>admin</code>?\n                This cannot be undone.\n              </p>\n            </Modal>}\n        </div>\n      </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"position\"\n    }}>{`Position`}</h2>\n    <p>{`Modal can be aligned either to top or center of the screen.`}</p>\n    <Playground __position={3} __code={'() => {\\n  const [modalOpen, setModalOpen] = React.useState(false)\\n  const [modalPosition, setModalPosition] = React.useState(\\'center\\')\\n  return (\\n    <>\\n      <Button\\n        clickHandler={() => {\\n          setModalPosition(\\'center\\')\\n          setModalOpen(true)\\n        }}\\n        label=\\\"Launch modal at center\\\"\\n        priority=\\\"outline\\\"\\n      />\\n      <Button\\n        clickHandler={() => {\\n          setModalPosition(\\'top\\')\\n          setModalOpen(true)\\n        }}\\n        label=\\\"Launch modal at top\\\"\\n        priority=\\\"outline\\\"\\n      />\\n      <div>\\n        {modalOpen && (\\n          <Modal\\n            title=\\\"Delete the user?\\\"\\n            actions={[\\n              {\\n                clickHandler: () => setModalOpen(false),\\n                label: \\'Delete\\',\\n                color: \\'danger\\',\\n              },\\n            ]}\\n            closeHandler={() => setModalOpen(false)}\\n            position={modalPosition}\\n          >\\n            <p>\\n              Do you really want to delete the user <code>admin</code>? This\\n              cannot be undone.\\n            </p>\\n          </Modal>\\n        )}\\n      </div>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Modal,\n      ParsableModal,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [modalOpen, setModalOpen] = React.useState(false);\n        const [modalPosition, setModalPosition] = React.useState('center');\n        return <>\n        <Button clickHandler={() => {\n            setModalPosition('center');\n            setModalOpen(true);\n          }} label=\"Launch modal at center\" priority=\"outline\" mdxType=\"Button\" />\n        <Button clickHandler={() => {\n            setModalPosition('top');\n            setModalOpen(true);\n          }} label=\"Launch modal at top\" priority=\"outline\" mdxType=\"Button\" />\n        <div>\n          {modalOpen && <Modal title=\"Delete the user?\" actions={[{\n              clickHandler: () => setModalOpen(false),\n              label: 'Delete',\n              color: 'danger'\n            }]} closeHandler={() => setModalOpen(false)} position={modalPosition} mdxType=\"Modal\">\n              <p>\n                Do you really want to delete the user <code>admin</code>?\n                This cannot be undone.\n              </p>\n            </Modal>}\n        </div>\n      </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"scrolling-long-content\"\n    }}>{`Scrolling Long Content`}</h2>\n    <p>{`When modals become too long for the user's viewport or device, they scroll\nindependent of the page itself.`}</p>\n    <p>{`The inner implementation of body scrolling uses a partially\n`}<a parentName=\"p\" {...{\n        \"href\": \"#api\"\n      }}>{`customizable`}</a>{` instance of the `}<a parentName=\"p\" {...{\n        \"href\": \"/components/ui/scroll-view\"\n      }}>{`ScrollView`}</a>{`\ncomponent.`}</p>\n    <Playground __position={4} __code={'() => {\\n  const [modalOpen, setModalOpen] = React.useState(false)\\n  const [modalScrollView, setModalScrollView] = React.useState(true)\\n  return (\\n    <>\\n      <Button\\n        clickHandler={() => {\\n          setModalScrollView(true)\\n          setModalOpen(true)\\n        }}\\n        label=\\\"Launch modal with scrolling body\\\"\\n        priority=\\\"outline\\\"\\n      />\\n      <Button\\n        clickHandler={() => {\\n          setModalScrollView(false)\\n          setModalOpen(true)\\n        }}\\n        label=\\\"Launch scrolling modal\\\"\\n        priority=\\\"outline\\\"\\n      />\\n      <div>\\n        {modalOpen && (\\n          <Modal\\n            title=\\\"Modal with long content\\\"\\n            actions={[\\n              {\\n                clickHandler: () => setModalOpen(false),\\n                label: \\'OK\\',\\n              },\\n            ]}\\n            autoFocus={false}\\n            closeHandler={() => setModalOpen(false)}\\n            scrollView={modalScrollView ? undefined : null}\\n            size=\\\"small\\\"\\n          >\\n            <p>\\n              Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\\n              commodo ligula eget dolor. Aenean massa.\\n            </p>\\n            <p>\\n              Cum sociis natoque penatibus et magnis dis parturient montes,\\n              nascetur ridiculus mus. Donec quam felis, ultricies nec,\\n              pellentesque eu, pretium quis, sem.\\n            </p>\\n            <p>\\n              Nulla consequat massa quis enim. Donec pede justo, fringilla\\n              vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus\\n              ut, imperdiet a, venenatis vitae, justo.\\n            </p>\\n            <p>\\n              Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\\n              commodo ligula eget dolor. Aenean massa.\\n            </p>\\n            <p>\\n              Cum sociis natoque penatibus et magnis dis parturient montes,\\n              nascetur ridiculus mus. Donec quam felis, ultricies nec,\\n              pellentesque eu, pretium quis, sem.\\n            </p>\\n            <p>\\n              Nulla consequat massa quis enim. Donec pede justo, fringilla\\n              vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus\\n              ut, imperdiet a, venenatis vitae, justo.\\n            </p>\\n            <p>\\n              Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\\n              commodo ligula eget dolor. Aenean massa.\\n            </p>\\n            <p>\\n              Cum sociis natoque penatibus et magnis dis parturient montes,\\n              nascetur ridiculus mus. Donec quam felis, ultricies nec,\\n              pellentesque eu, pretium quis, sem.\\n            </p>\\n            <p>\\n              Nulla consequat massa quis enim. Donec pede justo, fringilla\\n              vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus\\n              ut, imperdiet a, venenatis vitae, justo.\\n            </p>\\n            <p>\\n              Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\\n              commodo ligula eget dolor. Aenean massa.\\n            </p>\\n            <p>\\n              Cum sociis natoque penatibus et magnis dis parturient montes,\\n              nascetur ridiculus mus. Donec quam felis, ultricies nec,\\n              pellentesque eu, pretium quis, sem.\\n            </p>\\n            <p>\\n              Nulla consequat massa quis enim. Donec pede justo, fringilla\\n              vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus\\n              ut, imperdiet a, venenatis vitae, justo.\\n            </p>\\n            <p>\\n              Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\\n              commodo ligula eget dolor. Aenean massa.\\n            </p>\\n            <p>\\n              Cum sociis natoque penatibus et magnis dis parturient montes,\\n              nascetur ridiculus mus. Donec quam felis, ultricies nec,\\n              pellentesque eu, pretium quis, sem.\\n            </p>\\n            <p>\\n              Nulla consequat massa quis enim. Donec pede justo, fringilla\\n              vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus\\n              ut, imperdiet a, venenatis vitae, justo.\\n            </p>\\n          </Modal>\\n        )}\\n      </div>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Modal,\n      ParsableModal,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [modalOpen, setModalOpen] = React.useState(false);\n        const [modalScrollView, setModalScrollView] = React.useState(true);\n        return <>\n        <Button clickHandler={() => {\n            setModalScrollView(true);\n            setModalOpen(true);\n          }} label=\"Launch modal with scrolling body\" priority=\"outline\" mdxType=\"Button\" />\n        <Button clickHandler={() => {\n            setModalScrollView(false);\n            setModalOpen(true);\n          }} label=\"Launch scrolling modal\" priority=\"outline\" mdxType=\"Button\" />\n        <div>\n          {modalOpen && <Modal title=\"Modal with long content\" actions={[{\n              clickHandler: () => setModalOpen(false),\n              label: 'OK'\n            }]} autoFocus={false} closeHandler={() => setModalOpen(false)} scrollView={modalScrollView ? undefined : null} size=\"small\" mdxType=\"Modal\">\n              <p>\n                Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\n                commodo ligula eget dolor. Aenean massa.\n              </p>\n              <p>\n                Cum sociis natoque penatibus et magnis dis parturient montes,\n                nascetur ridiculus mus. Donec quam felis, ultricies nec,\n                pellentesque eu, pretium quis, sem.\n              </p>\n              <p>\n                Nulla consequat massa quis enim. Donec pede justo, fringilla\n                vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus\n                ut, imperdiet a, venenatis vitae, justo.\n              </p>\n              <p>\n                Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\n                commodo ligula eget dolor. Aenean massa.\n              </p>\n              <p>\n                Cum sociis natoque penatibus et magnis dis parturient montes,\n                nascetur ridiculus mus. Donec quam felis, ultricies nec,\n                pellentesque eu, pretium quis, sem.\n              </p>\n              <p>\n                Nulla consequat massa quis enim. Donec pede justo, fringilla\n                vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus\n                ut, imperdiet a, venenatis vitae, justo.\n              </p>\n              <p>\n                Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\n                commodo ligula eget dolor. Aenean massa.\n              </p>\n              <p>\n                Cum sociis natoque penatibus et magnis dis parturient montes,\n                nascetur ridiculus mus. Donec quam felis, ultricies nec,\n                pellentesque eu, pretium quis, sem.\n              </p>\n              <p>\n                Nulla consequat massa quis enim. Donec pede justo, fringilla\n                vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus\n                ut, imperdiet a, venenatis vitae, justo.\n              </p>\n              <p>\n                Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\n                commodo ligula eget dolor. Aenean massa.\n              </p>\n              <p>\n                Cum sociis natoque penatibus et magnis dis parturient montes,\n                nascetur ridiculus mus. Donec quam felis, ultricies nec,\n                pellentesque eu, pretium quis, sem.\n              </p>\n              <p>\n                Nulla consequat massa quis enim. Donec pede justo, fringilla\n                vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus\n                ut, imperdiet a, venenatis vitae, justo.\n              </p>\n              <p>\n                Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\n                commodo ligula eget dolor. Aenean massa.\n              </p>\n              <p>\n                Cum sociis natoque penatibus et magnis dis parturient montes,\n                nascetur ridiculus mus. Donec quam felis, ultricies nec,\n                pellentesque eu, pretium quis, sem.\n              </p>\n              <p>\n                Nulla consequat massa quis enim. Donec pede justo, fringilla\n                vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus\n                ut, imperdiet a, venenatis vitae, justo.\n              </p>\n            </Modal>}\n        </div>\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"long-content-and-autofocus\"\n    }}>{`Long Content and Autofocus`}</h3>\n    <p>{`👉 If you set the `}<inlineCode parentName=\"p\">{`scrollMode`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`modal`}</inlineCode>{`, you may want to turn `}<inlineCode parentName=\"p\">{`autoFocus`}</inlineCode>{` off\nto prevent the modal from scrolling to the end immediately after being opened.`}</p>\n    <h2 {...{\n      \"id\": \"blocking-modals\"\n    }}>{`Blocking Modals`}</h2>\n    <p>{`There are situations when you need to interrupt user's flow and lock entire UI\nto prevent interaction. That's where blocking modals may come handy.`}</p>\n    <Playground __position={5} __code={'() => {\\n  const [modalOpen, setModalOpen] = React.useState(false)\\n  return (\\n    <>\\n      <Button\\n        clickHandler={() => setModalOpen(true)}\\n        label=\\\"Launch blocking modal\\\"\\n        priority=\\\"outline\\\"\\n      />\\n      <div>\\n        {modalOpen && (\\n          <Modal title=\\\"Update is in progress\\\" size=\\\"auto\\\">\\n            <p>\\n              <span role=\\\"img\\\" aria-label=\\\"Warning\\\">\\n                ⚠️\\n              </span>\\n              Please wait a few seconds until the firmware update is finished.\\n              Don&apos;t turn off the device!\\n            </p>\\n            <Button\\n              clickHandler={() => setModalOpen(false)}\\n              label=\\\"Close the demo\\\"\\n              priority=\\\"flat\\\"\\n            />\\n          </Modal>\\n        )}\\n      </div>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Modal,\n      ParsableModal,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [modalOpen, setModalOpen] = React.useState(false);\n        return <>\n        <Button clickHandler={() => setModalOpen(true)} label=\"Launch blocking modal\" priority=\"outline\" mdxType=\"Button\" />\n        <div>\n          {modalOpen && <Modal title=\"Update is in progress\" size=\"auto\" mdxType=\"Modal\">\n              <p>\n                <span role=\"img\" aria-label=\"Warning\">⚠️</span>\n                Please wait a few seconds until the firmware update is finished.\n                Don&apos;t turn off the device!\n              </p>\n              <Button clickHandler={() => setModalOpen(false)} label=\"Close the demo\" priority=\"flat\" mdxType=\"Button\" />\n            </Modal>}\n        </div>\n      </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <Props table of={ParsableModal} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"theming\"\n    }}>{`Theming`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Custom Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--rui-Modal__background`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Modal background (including `}<inlineCode parentName=\"td\">{`url()`}</inlineCode>{` or gradient)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--rui-Modal__box-shadow`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Modal box shadow`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--rui-Modal__outer-spacing-xs`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Spacing around modal, `}<inlineCode parentName=\"td\">{`xs`}</inlineCode>{` screen size`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--rui-Modal__outer-spacing-sm`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Spacing around modal, `}<inlineCode parentName=\"td\">{`sm`}</inlineCode>{` screen size and bigger`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--rui-Modal__footer__background`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Modal footer background (including `}<inlineCode parentName=\"td\">{`url()`}</inlineCode>{` or gradient)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--rui-Modal__backdrop__background`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Modal backdrop background (including `}<inlineCode parentName=\"td\">{`url()`}</inlineCode>{` or gradient)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--rui-Modal--auto__min-width`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Minimum width of auto-sized modal`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--rui-Modal--auto__max-width`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Maximum width of auto-sized modal`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--rui-Modal--small__width`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Width of small modal`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--rui-Modal--medium__width`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Width of medium modal`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--rui-Modal--large__width`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Width of large modal`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--rui-Modal--fullscreen__width`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Width of fullscreen modal`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--rui-Modal--fullscreen__height`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Height of fullscreen modal`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}