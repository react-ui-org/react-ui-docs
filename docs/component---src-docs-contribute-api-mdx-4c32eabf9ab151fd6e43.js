(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{F5Va:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return b}));var o=n("Fcif"),i=n("dV/x"),a=(n("mXGw"),n("/FXl")),s=n("TjRS");n("aD51");const c=["components"],l={};void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!Object.prototype.hasOwnProperty.call(l,"__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/contribute/api.mdx"}});const r={_frontmatter:l},p=s.a;function b(e){let{components:t}=e,n=Object(i.a)(e,c);return Object(a.b)(p,Object(o.a)({},r,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"api-guidelines"},"API Guidelines"),Object(a.b)("p",null,"Guiding principles for designing component APIs."),Object(a.b)("h2",{id:"visual-props-api-vs-theme"},"Visual Props: API vs. Theme"),Object(a.b)("p",null,"While a custom theme is intended to define visual and interaction settings,\ncomponent API can be designed to allow customization of many kinds, including\nthe visual properties. This may be confusing during the design process of a\ncomponent. So how do you reliably know which approach you need?"),Object(a.b)("p",null,"The key difference is whether you want to enable overriding the default value in\nthe component instance:"),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Do I want to allow overriding this particular visual setting in a component\ninstance?")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"If yes, put it into the API of the component. Developers can adjust their\n",Object(a.b)("a",{parentName:"li",href:"/customize/global-props"},"global props"),", but the option value can still be\noverridden per component instance."),Object(a.b)("li",{parentName:"ul"},"If not, put it into the theme. Developers can change it\n",Object(a.b)("a",{parentName:"li",href:"/customize/theming/overview"},"in their theme")," and it will be the same for all\ncomponent instances.")),Object(a.b)("h2",{id:"measures"},"Measures"),Object(a.b)("p",null,"Always use ",Object(a.b)("a",{parentName:"p",href:"/foundation/spacing"},"spacing values")," for all kinds of measures like\noffsets, gaps, or spacings. This helps keep the design consistent across\ncomponents."))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!Object.prototype.hasOwnProperty.call(b,"__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/contribute/api.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-contribute-api-mdx-4c32eabf9ab151fd6e43.js.map