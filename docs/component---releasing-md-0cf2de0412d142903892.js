(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{ux0G:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return b})),n.d(t,"default",(function(){return c}));var a=n("Fcif"),r=n("dV/x"),o=(n("mXGw"),n("/FXl")),i=n("TjRS");n("aD51");const b={};void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"RELEASING.md"}});const l={_frontmatter:b},s=i.a;function c(e){let{components:t}=e,n=Object(r.a)(e,["components"]);return Object(o.b)(s,Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"releasing"},"Releasing"),Object(o.b)("p",null,"The release process is fully automated so you can release a new version just\nby bumping version number in ",Object(o.b)("inlineCode",{parentName:"p"},"package.json"),". However, there are several chances\nto adjust both version and changelog if you wish to do so for a reason."),Object(o.b)("p",null,"In order for the automation to work properly, contributors must follow the\n",Object(o.b)("a",{parentName:"p",href:"/contribute/guidelines"},"contributing guidelines"),"."),Object(o.b)("h2",{id:"how-it-works"},"How It Works"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Pull requests are automatically labelled by branch name. Labels are then used\nfor:"),Object(o.b)("ol",{parentName:"li"},Object(o.b)("li",{parentName:"ol"},"resolving next ",Object(o.b)("a",{parentName:"li",href:"https://semver.org"},"semantic version number"),"\n(BREAKING.FEATURE.PATCH),"),Object(o.b)("li",{parentName:"ol"},"grouping changes in changelog."))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Release draft with changelog is generated as pull requests are merged into\nthe ",Object(o.b)("inlineCode",{parentName:"p"},"master")," branch. Invididual PR names are listed and grouped by type based\non label(s) added to them previously."))),Object(o.b)("p",null,"See the source of ",Object(o.b)("inlineCode",{parentName:"p"},".github/workflows")," for details."),Object(o.b)("h2",{id:"release-process"},"Release Process"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"As you go:")," make sure all contributions follow the contributing\nguidelines, especially the\n",Object(o.b)("a",{parentName:"p",href:"/contribute/guidelines#git-workflow"},"Git workflow")," (correct PR names and\nbranch names). Check out the release draft on\n",Object(o.b)("a",{parentName:"p",href:"https://github.com/react-ui-org/react-ui/releases"},"GitHub releases page")," to\nsee what the changelog looks like and what will be the next version number.\n",Object(o.b)("strong",{parentName:"p"},"Don't edit manually until you are ready to publish the release.")," Release\ndraft is automatically overwritten everytime a change is merged to ",Object(o.b)("inlineCode",{parentName:"p"},"master"),".")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Manual:")," once you are ready to publish a release:"),Object(o.b)("ol",{parentName:"li"},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Bump the version number")," in ",Object(o.b)("inlineCode",{parentName:"p"},"package.json")," and ",Object(o.b)("inlineCode",{parentName:"p"},"package-lock.json"),".\nMake sure it matches the intended version number in the release draft.\n",Object(o.b)("strong",{parentName:"p"},"Don't combine this step with any other changes,")," they wouldn't be\nreflected in the changelog.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Now is also your ",Object(o.b)("strong",{parentName:"p"},"chance to review and adjust (if necessary) the intended\nversion and actual changelog before the release is published."),"\nAutomatic release drafting is skipped when a version change in\n",Object(o.b)("inlineCode",{parentName:"p"},"package.json")," is  detected so this time your changes will not be\noverwritten. Save your changes in release draft with the ",Object(o.b)("em",{parentName:"p"},"Save draft"),"\nbutton, ",Object(o.b)("strong",{parentName:"p"},"do not publish")," yet!")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Get back to the repository, commit both files as\n",Object(o.b)("inlineCode",{parentName:"p"},"Bump version to <VERSION_NUMBER>")," in ",Object(o.b)("inlineCode",{parentName:"p"},"release/<VERSION_NUMBER>")," branch,\ncreate a pull request, hold your breath, andâ€”merge it.")))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Automatic:")," once the release pull request from step 2.3 is merged, the\nfollowing actions are triggered automatically:"),Object(o.b)("ol",{parentName:"li"},Object(o.b)("li",{parentName:"ol"},"GitHub release draft with name corresponding to the version number from\nstep 2 is published."),Object(o.b)("li",{parentName:"ol"},"Git tag with the version number from step 2 is added to ",Object(o.b)("inlineCode",{parentName:"li"},"master")," branch."),Object(o.b)("li",{parentName:"ol"},"Package is built and published to npm package registry."),Object(o.b)("li",{parentName:"ol"},"Documentation is built and deployed to production.")))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Note:")," prefix version number with ",Object(o.b)("inlineCode",{parentName:"p"},"v")," everywhere except in ",Object(o.b)("inlineCode",{parentName:"p"},"package.json")," and\n",Object(o.b)("inlineCode",{parentName:"p"},"package-lock.json"),"."))}void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"RELEASING.md"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---releasing-md-0cf2de0412d142903892.js.map