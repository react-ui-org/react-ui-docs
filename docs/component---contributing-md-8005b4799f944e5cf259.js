(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{e2aI:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return r})),n.d(t,"default",(function(){return p}));var a=n("k0FJ"),o=n("yHgN"),l=(n("mXGw"),n("/FXl")),i=n("TjRS");n("aD51");const r={};void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"CONTRIBUTING.md"}});const b={_frontmatter:r},c=i.a;function p(e){let{components:t}=e,n=Object(o.a)(e,["components"]);return Object(l.b)(c,Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"contributing"},"Contributing"),Object(l.b)("p",null,"In the first place, thank you for your interest in contributing! üôè"),Object(l.b)("h2",{id:"development"},"Development"),Object(l.b)("p",null,"To build the project:"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Install local npm packages: ",Object(l.b)("inlineCode",{parentName:"li"},"npm install")),Object(l.b)("li",{parentName:"ol"},"Run the build: ",Object(l.b)("inlineCode",{parentName:"li"},"npm run build"))),Object(l.b)("p",null,"To run the dev server:"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Install local npm packages: ",Object(l.b)("inlineCode",{parentName:"li"},"npm install")),Object(l.b)("li",{parentName:"ol"},"Run the dev server (usually on ",Object(l.b)("inlineCode",{parentName:"li"},"http://localhost:3000"),"): ",Object(l.b)("inlineCode",{parentName:"li"},"npm start"))),Object(l.b)("h2",{id:"git-workflow"},"Git Workflow"),Object(l.b)("p",null,"In order for the automation to work in the best possible way (we use GitHub\nActions), please follow these guidelines:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"One pull request per subject.")," Don't combine unrelated changes in a single\nPR.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Name your branches according to the nature of change.")," Choose one of:"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"bc/*")," for breaking changes"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"feature/*")," for features"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"bugfix/*")," for bugfixes"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"maintenance/*")," for maintenance"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"release/*")," for releases (administrators only)"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Write clear PR names.")," Use imperative and write in English, eg. ",Object(l.b)("em",{parentName:"p"},"Create\n",Object(l.b)("inlineCode",{parentName:"em"},"ScrollView")," component"),". Optionally use Markdown code blocks to emphasize.\n",Object(l.b)("strong",{parentName:"p"},"PR names are used in changelogs."))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Write clear commit messages.")," Also in imperative and in English. Append\nissue number (if it exists) in parentheses to the end of the message, eg.\n",Object(l.b)("em",{parentName:"p"},"Create ",Object(l.b)("inlineCode",{parentName:"em"},"ScrollView")," component (#53)"),". Optionally use Markdown code blocks to\nemphasize."))),Object(l.b)("p",null,"Pull requests are labelled automatically. You can add more labels to better\nqualify the nature of the change. Use the ",Object(l.b)("inlineCode",{parentName:"p"},"skip changelog")," label to exclude a\npull request from changelog."),Object(l.b)("h2",{id:"package-linking"},"Package Linking"),Object(l.b)("p",null,"The best way for development of React UI is to link ",Object(l.b)("inlineCode",{parentName:"p"},"react-ui")," into your\napplication with ",Object(l.b)("inlineCode",{parentName:"p"},"npm link")," so you can see it in action."),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"In React UI repository, run ",Object(l.b)("inlineCode",{parentName:"li"},"npm link")),Object(l.b)("li",{parentName:"ol"},"In your application, run ",Object(l.b)("inlineCode",{parentName:"li"},"npm link @react-ui-org/react-ui"))),Object(l.b)("p",null,"To prevent\n",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://reactjs.org/warnings/invalid-hook-call-warning.html#duplicate-react"}),"Invalid Hook Call Warning"),"\nwhen React UI is linked, add the following code to your app's Webpack config:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const path = require('path');\n\nmodule.exports = {\n  resolve: {\n    alias: {\n      react: path.resolve('./node_modules/react'),\n      'react-dom': path.resolve('./node_modules/react-dom'),\n    },\n  },\n};\n")),Object(l.b)("h2",{id:"documenting"},"Documenting"),Object(l.b)("p",null,"We use ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://docz.site"}),"Docz")," (powered by ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.gatsbyjs.com"}),"Gatsby"),")\nas the documentation platform. The documentation itself is written in\n",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://mdxjs.com"}),"MDX")," format ‚Äî a human-readable blend of the popular Markdown\nand JSX syntax."),Object(l.b)("p",null,"Run ",Object(l.b)("inlineCode",{parentName:"p"},"npm start")," to run the docs in development mode, and open\n",Object(l.b)("inlineCode",{parentName:"p"},"http://localhost:3000")," in your browser to see the docs in live-reload mode."),Object(l.b)("p",null,"A few things to note:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"In order to get component props parsed and rendered by Docz, it's crucial to\n",Object(l.b)("strong",{parentName:"p"},"import the component into an MDX file right from its source file")," ‚Äî parsing\na re-exported component (typically via ",Object(l.b)("inlineCode",{parentName:"p"},"index.js"),") isn't currently supported.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"If you don't want Gatsby to collect ",Object(l.b)("strong",{parentName:"p"},"anonymous statistics"),", you may want to\ndisable ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.gatsbyjs.com/docs/telemetry/"}),"Gatsby telemetry")," by\nrunning ",Object(l.b)("inlineCode",{parentName:"p"},"npx gatsby telemetry --disable"),".")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"If you see the Not found page after having ",Object(l.b)("strong",{parentName:"p"},"changed the configuration of Docz\nor Gatsby in the live-reload mode,")," you may either restart the Docz\ndevelopment server (",Object(l.b)("inlineCode",{parentName:"p"},"ctrl + c")," and ",Object(l.b)("inlineCode",{parentName:"p"},"npm start"),"), or try to edit an MDX file\nwhich makes the Docz rebuild, too.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"To ",Object(l.b)("strong",{parentName:"p"},"make your authoring experience better,")," we recommend to make sure your\nIDE understands the MDX syntax and is able to help you wrap lines in MD and\nMDX files automatically (Jetbrains IDE's and VSCode support both features\nout-of-the-box or through a plugin)."))))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"CONTRIBUTING.md"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---contributing-md-8005b4799f944e5cf259.js.map