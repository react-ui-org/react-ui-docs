{"version":3,"sources":["webpack:///../src/lib/components/ui/Card/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Button","Card","CardBody","CardFooter","label","priority","raised","type","dense","size","variant","disabled","of","isMDXComponent"],"mappings":"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","file":"component---src-lib-components-ui-card-readme-mdx-493bac4b017d57b84b0d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-ui/react-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Button } from '../Button/Button';\nimport { Card } from './Card';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"card\"\n    }}>{`Card`}</h1>\n\n    <p>{`Cards contain content and actions about a single subject.`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <p>{`To use the Card component, you need to import at least Card and\n`}<a parentName=\"p\" {...{\n        \"href\": \"#cardbody\"\n      }}>{`CardBody`}</a>{` components:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Card, CardBody } from '@react-ui-org/react-ui';\n`}</code></pre>\n    <p>{`And use it:`}</p>\n    <Playground __position={0} __code={'<Card>\\n  <CardBody>Hello!</CardBody>\\n</Card>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Card,\n      CardBody,\n      CardFooter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Card mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello!\n    </CardBody>\n  </Card>\n    </Playground>\n    <h2 {...{\n      \"id\": \"general-guidelines\"\n    }}>{`General Guidelines`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The default (flat) card is `}<strong parentName=\"p\">{`designed for a non-white background.`}</strong>{` You may\nwant to either use a different `}<a parentName=\"p\" {...{\n            \"href\": \"#variants\"\n          }}>{`variant`}</a>{` or\n`}<a parentName=\"p\" {...{\n            \"href\": \"/getting-started/theming\"\n          }}>{`customize`}</a>{` the default appearance to make it stand\nout on white surfaces.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The `}<a parentName=\"p\" {...{\n            \"href\": \"#cardbody\"\n          }}>{`CardBody`}</a>{` component is the only required element in a card.\n`}<a parentName=\"p\" {...{\n            \"href\": \"#cardfooter\"\n          }}>{`CardFooter`}</a>{` is optional.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use `}<strong parentName=\"p\">{`medium or low-emphasis buttons`}</strong>{` when there are more cards, eg. in a\ngrid. It will help you keep the UI clean and easy to scan.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"card-composition\"\n    }}>{`Card Composition`}</h2>\n    <p>{`Aside from the mandatory `}<a parentName=\"p\" {...{\n        \"href\": \"#cardbody\"\n      }}>{`CardBody`}</a>{` element, you can add a\n`}<a parentName=\"p\" {...{\n        \"href\": \"#cardfooter\"\n      }}>{`CardFooter`}</a>{` to better separate your card's actions from the rest\nof the content.`}</p>\n    <p>{`Import all necessary components:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Card, CardBody, CardFooter } from '@react-ui-org/react-ui';\n`}</code></pre>\n    <p>{`And use them:`}</p>\n    <Playground __position={1} __code={'<Card>\\n  <CardBody>Hello! I&apos;m card with a footer.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" />\\n  </CardFooter>\\n</Card>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Card,\n      CardBody,\n      CardFooter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Card mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m card with a footer.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n    </Playground>\n    <p>{`👉 CardFooter is required in case you need to align the actions of multiple\ncards with varying height of content.`}</p>\n    <h2 {...{\n      \"id\": \"raised-card\"\n    }}>{`Raised Card`}</h2>\n    <p>{`Add optional shadow to lift the card above surface.`}</p>\n    <Playground __position={2} __code={'<Card raised>\\n  <CardBody>Hello! I&apos;m a raised card with a footer.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" />\\n  </CardFooter>\\n</Card>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Card,\n      CardBody,\n      CardFooter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Card raised mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m a raised card with a footer.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n    </Playground>\n    <h2 {...{\n      \"id\": \"bordered-card\"\n    }}>{`Bordered Card`}</h2>\n    <p>{`Use a border when you need to visually separate the card from its background.`}</p>\n    <Playground __position={3} __code={'<Card type=\\\"bordered\\\">\\n  <CardBody>Hello! I&apos;m card with a border and a footer.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" />\\n  </CardFooter>\\n</Card>\\n<Card type=\\\"bordered\\\" raised>\\n  <CardBody>\\n    Hello! I&apos;m a raised card with a border and a footer.\\n  </CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" />\\n  </CardFooter>\\n</Card>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Card,\n      CardBody,\n      CardFooter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Card type=\"bordered\" mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m card with a border and a footer.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n  <Card type=\"bordered\" raised mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m a raised card with a border and a footer.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n    </Playground>\n    <h2 {...{\n      \"id\": \"dense-card\"\n    }}>{`Dense Card`}</h2>\n    <p>{`Use a dense card when you need to save space on screen. Other elements in the\ncard should be also smaller to keep the card contained and easy to scan.`}</p>\n    <Playground __position={4} __code={'<Card dense raised>\\n  <CardBody>\\n    <small>Hello! I&apos;m a dense card. Everything is smaller here.</small>\\n  </CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" size=\\\"small\\\" />\\n  </CardFooter>\\n</Card>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Card,\n      CardBody,\n      CardFooter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Card dense raised mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      <small>Hello! I&apos;m a dense card. Everything is smaller here.</small>\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" size=\"small\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n    </Playground>\n    <h2 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h2>\n    <p>{`All `}<a parentName=\"p\" {...{\n        \"href\": \"/foundation/colors#ui-colors\"\n      }}>{`UI colors`}</a>{` (success, warning, error, help,\ninfo, and note) are supported by cards to cover various needs of your app. The\nbordered card type is forced automatically to make sure the border is visible.`}</p>\n    <Playground __position={5} __code={'<Card type=\\\"success\\\">\\n  <CardBody>Hello! I&apos;m success variant of card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" variant=\\\"success\\\" />\\n  </CardFooter>\\n</Card>\\n<Card type=\\\"warning\\\">\\n  <CardBody>Hello! I&apos;m warning variant of card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" variant=\\\"warning\\\" />\\n  </CardFooter>\\n</Card>\\n<Card type=\\\"error\\\">\\n  <CardBody>Hello! I&apos;m error variant of card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" variant=\\\"danger\\\" />\\n  </CardFooter>\\n</Card>\\n<Card type=\\\"help\\\">\\n  <CardBody>Hello! I&apos;m help variant of card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" variant=\\\"dark\\\" />\\n  </CardFooter>\\n</Card>\\n<Card type=\\\"info\\\">\\n  <CardBody>Hello! I&apos;m info variant of card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" variant=\\\"dark\\\" />\\n  </CardFooter>\\n</Card>\\n<Card type=\\\"note\\\">\\n  <CardBody>Hello! I&apos;m note variant of card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" variant=\\\"dark\\\" />\\n  </CardFooter>\\n</Card>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Card,\n      CardBody,\n      CardFooter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Card type=\"success\" mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m success variant of card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" variant=\"success\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n  <Card type=\"warning\" mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m warning variant of card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" variant=\"warning\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n  <Card type=\"error\" mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m error variant of card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" variant=\"danger\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n  <Card type=\"help\" mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m help variant of card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" variant=\"dark\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n  <Card type=\"info\" mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m info variant of card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" variant=\"dark\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n  <Card type=\"note\" mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m note variant of card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" variant=\"dark\" mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n    </Playground>\n    <h2 {...{\n      \"id\": \"states\"\n    }}>{`States`}</h2>\n    <h3 {...{\n      \"id\": \"disabled-state\"\n    }}>{`Disabled State`}</h3>\n    <p>{`An entire card can appear disabled. However, you'll still need to manually\ndisable its interactive elements to disallow user's interaction.`}</p>\n    <Playground __position={6} __code={'<Card disabled>\\n  <CardBody>Hello! I&apos;m a disabled card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" disabled />\\n  </CardFooter>\\n</Card>\\n<Card disabled raised>\\n  <CardBody>Hello! I&apos;m a disabled raised card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" disabled />\\n  </CardFooter>\\n</Card>\\n<Card variant=\\\"bordered\\\" disabled>\\n  <CardBody>Hello! I&apos;m a disabled bordered card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" disabled />\\n  </CardFooter>\\n</Card>\\n<Card type=\\\"success\\\" disabled>\\n  <CardBody>Hello! I&apos;m a disabled success variant of card.</CardBody>\\n  <CardFooter>\\n    <Button label=\\\"Read more\\\" priority=\\\"outline\\\" variant=\\\"success\\\" disabled />\\n  </CardFooter>\\n</Card>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Card,\n      CardBody,\n      CardFooter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Card disabled mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m a disabled card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" disabled mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n  <Card disabled raised mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m a disabled raised card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" disabled mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n  <Card variant=\"bordered\" disabled mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m a disabled bordered card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" disabled mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n  <Card type=\"success\" disabled mdxType=\"Card\">\n    <CardBody mdxType=\"CardBody\">\n      Hello! I&apos;m a disabled success variant of card.\n    </CardBody>\n    <CardFooter mdxType=\"CardFooter\">\n      <Button label=\"Read more\" priority=\"outline\" variant=\"success\" disabled mdxType=\"Button\" />\n    </CardFooter>\n  </Card>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <Props of={Card} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"cardbody\"\n    }}>{`CardBody`}</h2>\n    <p>{`CardBody is the only required element in a card. See\n`}<a parentName=\"p\" {...{\n        \"href\": \"#card-composition\"\n      }}>{`Card Composition`}</a>{` for all details.`}</p>\n    <Props of={CardBody} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"cardfooter\"\n    }}>{`CardFooter`}</h2>\n    <p>{`Separate your card actions with CardFooter. See\n`}<a parentName=\"p\" {...{\n        \"href\": \"#card-composition\"\n      }}>{`Card Composition`}</a>{` for all details.`}</p>\n    <Props of={CardFooter} mdxType=\"Props\" />\n    <hr></hr>\n    <p>{`Next: `}<a parentName=\"p\" {...{\n        \"href\": \"/components/ui/checkbox-field\"\n      }}>{`CheckboxField →`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}