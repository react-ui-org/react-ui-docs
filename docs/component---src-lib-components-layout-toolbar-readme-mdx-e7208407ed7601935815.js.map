{"version":3,"sources":["webpack:///../src/lib/components/layout/Toolbar/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Placeholder","CheckboxField","Button","ButtonGroup","Toolbar","ToolbarGroup","ToolbarItem","bordered","alignment","setAlignment","React","justification","setJustification","className","id","aria-labelledby","label","clickHandler","variant","align","justify","isGroupDense","setIsGroupDense","isToolbarDense","setIsToolbarDense","changeHandler","e","target","checked","dense","nowrap","of","isMDXComponent"],"mappings":"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","file":"component---src-lib-components-layout-toolbar-readme-mdx-e7208407ed7601935815.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-ui/react-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Placeholder } from '../../../../docs/_components/Placeholder/Placeholder';\nimport { CheckboxField } from '../../ui/CheckboxField/CheckboxField';\nimport { Button } from '../../ui/Button/Button';\nimport { ButtonGroup } from '../../ui/ButtonGroup/ButtonGroup';\nimport { Toolbar } from './Toolbar';\nimport { ToolbarGroup } from './ToolbarGroup';\nimport { ToolbarItem } from './ToolbarItem';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"toolbar\"\n    }}>{`Toolbar`}</h1>\n\n    <p>{`The responsive Toolbar layout is a versatile tool that allows spacing, grouping,\nand aligning inline items.`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <p>{`To use the Toolbar component, you need to import it first:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Toolbar, ToolbarItem } from '@react-ui-org/react-ui';\n`}</code></pre>\n    <p>{`And use it:`}</p>\n    <Playground __position={0} __code={'<Toolbar>\\n  <ToolbarItem>\\n    <Placeholder bordered>Toolbar item</Placeholder>\\n  </ToolbarItem>\\n  <ToolbarItem>\\n    <Placeholder bordered>Toolbar item</Placeholder>\\n  </ToolbarItem>\\n  <ToolbarItem>\\n    <Placeholder bordered>Toolbar item</Placeholder>\\n  </ToolbarItem>\\n</Toolbar>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Placeholder,\n      CheckboxField,\n      Button,\n      ButtonGroup,\n      Toolbar,\n      ToolbarGroup,\n      ToolbarItem,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Toolbar mdxType=\"Toolbar\">\n    <ToolbarItem mdxType=\"ToolbarItem\">\n      <Placeholder bordered mdxType=\"Placeholder\">Toolbar item</Placeholder>\n    </ToolbarItem>\n    <ToolbarItem mdxType=\"ToolbarItem\">\n      <Placeholder bordered mdxType=\"Placeholder\">Toolbar item</Placeholder>\n    </ToolbarItem>\n    <ToolbarItem mdxType=\"ToolbarItem\">\n      <Placeholder bordered mdxType=\"Placeholder\">Toolbar item</Placeholder>\n    </ToolbarItem>\n  </Toolbar>\n    </Playground>\n    <h2 {...{\n      \"id\": \"general-guidelines\"\n    }}>{`General Guidelines`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Wrap your items`}</strong>{` into the ToolbarItem component. This ensures your content\nis properly spaced and aligned with other Toolbar elements. Do `}<strong parentName=\"p\">{`not`}</strong>{` try to\nput any custom HTML or React components directly into the Toolbar layout\nwithout wrapping it with the ToolbarItem first.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use the Toolbar layout `}<strong parentName=\"p\">{`only for `}<a parentName=\"strong\" {...{\n              \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements\"\n            }}>{`inline elements`}</a></strong>{`\n(which includes inline blocks). For `}<a parentName=\"p\" {...{\n            \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements\"\n          }}>{`block-level element`}</a>{`\nlayouts, consider using rather `}<a parentName=\"p\" {...{\n            \"href\": \"/utilities/spacing\"\n          }}>{`spacing utilities`}</a>{` or the\n`}<a parentName=\"p\" {...{\n            \"href\": \"/components/layout/list\"\n          }}>{`List`}</a>{` layout.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"alignment\"\n    }}>{`Alignment`}</h2>\n    <p>{`You can tweak your Toolbar layout using rich alignment options, both in\nhorizontal and vertical direction.`}</p>\n    <p>{`👉 At the current stage of development, React UI is `}<strong parentName=\"p\">{`RTL aware`}</strong>{` so switching\nto a fully RTL-compatible behavior in the future should be painless. That's why\nthe alignment values are called rather `}<inlineCode parentName=\"p\">{`start`}</inlineCode>{` than `}<inlineCode parentName=\"p\">{`left`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`end`}</inlineCode>{` instead of\n`}<inlineCode parentName=\"p\">{`right`}</inlineCode>{`.`}</p>\n    <Playground __position={1} __code={'() => {\\n  const [alignment, setAlignment] = React.useState(\\'top\\')\\n  const [justification, setJustification] = React.useState(\\'start\\')\\n  return (\\n    <div>\\n      <div className=\\\"mb-2\\\">\\n        <span id=\\\"alignment-label\\\" className=\\\"mr-3\\\">\\n          Alignment:\\n        </span>\\n        <ButtonGroup aria-labelledby=\\\"#alignment-label\\\">\\n          <Button\\n            label=\\\"top\\\"\\n            clickHandler={() => setAlignment(\\'top\\')}\\n            variant={alignment === \\'top\\' ? \\'dark\\' : \\'primary\\'}\\n          />\\n          <Button\\n            label=\\\"middle\\\"\\n            clickHandler={() => setAlignment(\\'middle\\')}\\n            variant={alignment === \\'middle\\' ? \\'dark\\' : \\'primary\\'}\\n          />\\n          <Button\\n            label=\\\"bottom\\\"\\n            clickHandler={() => setAlignment(\\'bottom\\')}\\n            variant={alignment === \\'bottom\\' ? \\'dark\\' : \\'primary\\'}\\n          />\\n          <Button\\n            label=\\\"baseline\\\"\\n            clickHandler={() => setAlignment(\\'baseline\\')}\\n            variant={alignment === \\'baseline\\' ? \\'dark\\' : \\'primary\\'}\\n          />\\n        </ButtonGroup>\\n      </div>\\n      <div className=\\\"mb-5\\\">\\n        <span id=\\\"justification-label\\\" className=\\\"mr-3\\\">\\n          Justification:\\n        </span>\\n        <ButtonGroup aria-labelledby=\\\"#justification-label\\\">\\n          <Button\\n            label=\\\"start\\\"\\n            clickHandler={() => setJustification(\\'start\\')}\\n            variant={justification === \\'start\\' ? \\'dark\\' : \\'primary\\'}\\n          />\\n          <Button\\n            label=\\\"center\\\"\\n            clickHandler={() => setJustification(\\'center\\')}\\n            variant={justification === \\'center\\' ? \\'dark\\' : \\'primary\\'}\\n          />\\n          <Button\\n            label=\\\"end\\\"\\n            clickHandler={() => setJustification(\\'end\\')}\\n            variant={justification === \\'end\\' ? \\'dark\\' : \\'primary\\'}\\n          />\\n          <Button\\n            label=\\\"space-between\\\"\\n            clickHandler={() => setJustification(\\'space-between\\')}\\n            variant={justification === \\'space-between\\' ? \\'dark\\' : \\'primary\\'}\\n          />\\n        </ButtonGroup>\\n      </div>\\n      <Toolbar align={alignment} justify={justification}>\\n        <ToolbarItem>\\n          <Placeholder bordered>First item</Placeholder>\\n        </ToolbarItem>\\n        <ToolbarItem>\\n          <Placeholder bordered>\\n            Second item\\n            <br />\\n            is taller\\n          </Placeholder>\\n        </ToolbarItem>\\n        <ToolbarItem>\\n          <Placeholder bordered>Third item</Placeholder>\\n        </ToolbarItem>\\n      </Toolbar>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Placeholder,\n      CheckboxField,\n      Button,\n      ButtonGroup,\n      Toolbar,\n      ToolbarGroup,\n      ToolbarItem,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [alignment, setAlignment] = React.useState('top');\n        const [justification, setJustification] = React.useState('start');\n        return <div>\n        <div className=\"mb-2\">\n          <span id=\"alignment-label\" className=\"mr-3\">Alignment:</span>\n          <ButtonGroup aria-labelledby=\"#alignment-label\" mdxType=\"ButtonGroup\">\n            <Button label=\"top\" clickHandler={() => setAlignment('top')} variant={alignment === 'top' ? 'dark' : 'primary'} mdxType=\"Button\" />\n            <Button label=\"middle\" clickHandler={() => setAlignment('middle')} variant={alignment === 'middle' ? 'dark' : 'primary'} mdxType=\"Button\" />\n            <Button label=\"bottom\" clickHandler={() => setAlignment('bottom')} variant={alignment === 'bottom' ? 'dark' : 'primary'} mdxType=\"Button\" />\n            <Button label=\"baseline\" clickHandler={() => setAlignment('baseline')} variant={alignment === 'baseline' ? 'dark' : 'primary'} mdxType=\"Button\" />\n          </ButtonGroup>\n        </div>\n        <div className=\"mb-5\">\n          <span id=\"justification-label\" className=\"mr-3\">Justification:</span>\n          <ButtonGroup aria-labelledby=\"#justification-label\" mdxType=\"ButtonGroup\">\n            <Button label=\"start\" clickHandler={() => setJustification('start')} variant={justification === 'start' ? 'dark' : 'primary'} mdxType=\"Button\" />\n            <Button label=\"center\" clickHandler={() => setJustification('center')} variant={justification === 'center' ? 'dark' : 'primary'} mdxType=\"Button\" />\n            <Button label=\"end\" clickHandler={() => setJustification('end')} variant={justification === 'end' ? 'dark' : 'primary'} mdxType=\"Button\" />\n            <Button label=\"space-between\" clickHandler={() => setJustification('space-between')} variant={justification === 'space-between' ? 'dark' : 'primary'} mdxType=\"Button\" />\n          </ButtonGroup>\n        </div>\n        <Toolbar align={alignment} justify={justification} mdxType=\"Toolbar\">\n          <ToolbarItem mdxType=\"ToolbarItem\">\n            <Placeholder bordered mdxType=\"Placeholder\">First item</Placeholder>\n          </ToolbarItem>\n          <ToolbarItem mdxType=\"ToolbarItem\">\n            <Placeholder bordered mdxType=\"Placeholder\">\n              Second item<br />\n              is taller\n            </Placeholder>\n          </ToolbarItem>\n          <ToolbarItem mdxType=\"ToolbarItem\">\n            <Placeholder bordered mdxType=\"Placeholder\">Third item</Placeholder>\n          </ToolbarItem>\n        </Toolbar>\n      </div>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"groups\"\n    }}>{`Groups`}</h2>\n    <p>{`Toolbar items can be grouped which enables you aligning related items together.\nTo provide the best possible flexibility for building your layout, the\nToolbarGroup allows you to set many options similar to the Toolbar: vertical\nalignment, `}<a parentName=\"p\" {...{\n        \"href\": \"#dense-layout\"\n      }}>{`dense spacing`}</a>{`, or `}<a parentName=\"p\" {...{\n        \"href\": \"#wrapping\"\n      }}>{`disable wrapping`}</a>{`.`}</p>\n    <Playground __position={2} __code={'<Toolbar justify=\\\"space-between\\\">\\n  <ToolbarGroup>\\n    <ToolbarItem>\\n      <Placeholder bordered>Group A</Placeholder>\\n    </ToolbarItem>\\n    <ToolbarItem>\\n      <Placeholder bordered>Group A</Placeholder>\\n    </ToolbarItem>\\n  </ToolbarGroup>\\n  <ToolbarGroup align=\\\"middle\\\">\\n    <ToolbarItem>\\n      <Placeholder bordered>Group B</Placeholder>\\n    </ToolbarItem>\\n    <ToolbarItem>\\n      <Placeholder bordered>Group B</Placeholder>\\n    </ToolbarItem>\\n  </ToolbarGroup>\\n  <ToolbarItem>\\n    <Placeholder bordered>Item</Placeholder>\\n  </ToolbarItem>\\n</Toolbar>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Placeholder,\n      CheckboxField,\n      Button,\n      ButtonGroup,\n      Toolbar,\n      ToolbarGroup,\n      ToolbarItem,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Toolbar justify=\"space-between\" mdxType=\"Toolbar\">\n    <ToolbarGroup mdxType=\"ToolbarGroup\">\n      <ToolbarItem mdxType=\"ToolbarItem\">\n        <Placeholder bordered mdxType=\"Placeholder\">Group A</Placeholder>\n      </ToolbarItem>\n      <ToolbarItem mdxType=\"ToolbarItem\">\n        <Placeholder bordered mdxType=\"Placeholder\">Group A</Placeholder>\n      </ToolbarItem>\n    </ToolbarGroup>\n    <ToolbarGroup align=\"middle\" mdxType=\"ToolbarGroup\">\n      <ToolbarItem mdxType=\"ToolbarItem\">\n        <Placeholder bordered mdxType=\"Placeholder\">Group B</Placeholder>\n      </ToolbarItem>\n      <ToolbarItem mdxType=\"ToolbarItem\">\n        <Placeholder bordered mdxType=\"Placeholder\">Group B</Placeholder>\n      </ToolbarItem>\n    </ToolbarGroup>\n    <ToolbarItem mdxType=\"ToolbarItem\">\n      <Placeholder bordered mdxType=\"Placeholder\">Item</Placeholder>\n    </ToolbarItem>\n  </Toolbar>\n    </Playground>\n    <h2 {...{\n      \"id\": \"dense-layout\"\n    }}>{`Dense Layout`}</h2>\n    <p>{`Sometimes it's useful to get related items even closer together. This can be\neasily achieved through the `}<inlineCode parentName=\"p\">{`dense`}</inlineCode>{` option which can be applied on individual\ntoolbar groups, or on the entire toolbar.`}</p>\n    <Playground __position={3} __code={'() => {\\n  const [isGroupDense, setIsGroupDense] = React.useState(true)\\n  const [isToolbarDense, setIsToolbarDense] = React.useState(false)\\n  return (\\n    <div>\\n      <div className=\\\"mb-5\\\">\\n        <CheckboxField\\n          id=\\\"is-group-dense\\\"\\n          label=\\\"Dense ToolbarGroup\\\"\\n          changeHandler={e => setIsGroupDense(e.target.checked)}\\n          checked={isGroupDense}\\n        />\\n        <CheckboxField\\n          id=\\\"is-toolbar-dense\\\"\\n          label=\\\"Dense Toolbar\\\"\\n          changeHandler={e => setIsToolbarDense(e.target.checked)}\\n          checked={isToolbarDense}\\n        />\\n      </div>\\n      <Toolbar dense={isToolbarDense}>\\n        <ToolbarGroup dense={isGroupDense}>\\n          <ToolbarItem>\\n            <Placeholder bordered>Group item</Placeholder>\\n          </ToolbarItem>\\n          <ToolbarItem>\\n            <Placeholder bordered>Group item</Placeholder>\\n          </ToolbarItem>\\n        </ToolbarGroup>\\n        <ToolbarItem>\\n          <Placeholder bordered>Standalone item</Placeholder>\\n        </ToolbarItem>\\n        <ToolbarItem>\\n          <Placeholder bordered>Standalone item</Placeholder>\\n        </ToolbarItem>\\n      </Toolbar>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Placeholder,\n      CheckboxField,\n      Button,\n      ButtonGroup,\n      Toolbar,\n      ToolbarGroup,\n      ToolbarItem,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [isGroupDense, setIsGroupDense] = React.useState(true);\n        const [isToolbarDense, setIsToolbarDense] = React.useState(false);\n        return <div>\n        <div className=\"mb-5\">\n          <CheckboxField id=\"is-group-dense\" label=\"Dense ToolbarGroup\" changeHandler={e => setIsGroupDense(e.target.checked)} checked={isGroupDense} mdxType=\"CheckboxField\" />\n          <CheckboxField id=\"is-toolbar-dense\" label=\"Dense Toolbar\" changeHandler={e => setIsToolbarDense(e.target.checked)} checked={isToolbarDense} mdxType=\"CheckboxField\" />\n        </div>\n        <Toolbar dense={isToolbarDense} mdxType=\"Toolbar\">\n          <ToolbarGroup dense={isGroupDense} mdxType=\"ToolbarGroup\">\n            <ToolbarItem mdxType=\"ToolbarItem\">\n              <Placeholder bordered mdxType=\"Placeholder\">Group item</Placeholder>\n            </ToolbarItem>\n            <ToolbarItem mdxType=\"ToolbarItem\">\n              <Placeholder bordered mdxType=\"Placeholder\">Group item</Placeholder>\n            </ToolbarItem>\n          </ToolbarGroup>\n          <ToolbarItem mdxType=\"ToolbarItem\">\n            <Placeholder bordered mdxType=\"Placeholder\">Standalone item</Placeholder>\n          </ToolbarItem>\n          <ToolbarItem mdxType=\"ToolbarItem\">\n            <Placeholder bordered mdxType=\"Placeholder\">Standalone item</Placeholder>\n          </ToolbarItem>\n        </Toolbar>\n      </div>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"wrapping\"\n    }}>{`Wrapping`}</h2>\n    <p>{`By default, all toolbar items are queued up one after another in a row. The\nitems automatically wrap and create a new row. To prevent this behavior, just\nset the `}<inlineCode parentName=\"p\">{`nowrap`}</inlineCode>{` option on the Toolbar or on individual ToolbarGroups. Note that\nToolbarGroups can still wrap when the wrapping is disabled just on their parent\nToolbar.`}</p>\n    <p>{`Try resizing the playground below to see how it works.`}</p>\n    <Playground __position={4} __code={'<>\\n  <p>Disabled wrapping on entire toolbar:</p>\\n  <Toolbar justify=\\\"space-between\\\" nowrap>\\n    <ToolbarGroup>\\n      <ToolbarItem>\\n        <Placeholder bordered>Group A</Placeholder>\\n      </ToolbarItem>\\n      <ToolbarItem>\\n        <Placeholder bordered>Group A</Placeholder>\\n      </ToolbarItem>\\n    </ToolbarGroup>\\n    <ToolbarGroup>\\n      <ToolbarItem>\\n        <Placeholder bordered>Group B</Placeholder>\\n      </ToolbarItem>\\n      <ToolbarItem>\\n        <Placeholder bordered>Group B</Placeholder>\\n      </ToolbarItem>\\n    </ToolbarGroup>\\n    <ToolbarItem>\\n      <Placeholder bordered>Item</Placeholder>\\n    </ToolbarItem>\\n  </Toolbar>\\n  <p>Disabled wrapping on toolbar groups:</p>\\n  <Toolbar justify=\\\"space-between\\\">\\n    <ToolbarGroup nowrap>\\n      <ToolbarItem>\\n        <Placeholder bordered>Group A</Placeholder>\\n      </ToolbarItem>\\n      <ToolbarItem>\\n        <Placeholder bordered>Group A</Placeholder>\\n      </ToolbarItem>\\n    </ToolbarGroup>\\n    <ToolbarGroup nowrap>\\n      <ToolbarItem>\\n        <Placeholder bordered>Group B</Placeholder>\\n      </ToolbarItem>\\n      <ToolbarItem>\\n        <Placeholder bordered>Group B</Placeholder>\\n      </ToolbarItem>\\n    </ToolbarGroup>\\n    <ToolbarItem>\\n      <Placeholder bordered>Item</Placeholder>\\n    </ToolbarItem>\\n  </Toolbar>\\n</>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Placeholder,\n      CheckboxField,\n      Button,\n      ButtonGroup,\n      Toolbar,\n      ToolbarGroup,\n      ToolbarItem,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <>\n    <p>Disabled wrapping on entire toolbar:</p>\n    <Toolbar justify=\"space-between\" nowrap mdxType=\"Toolbar\">\n      <ToolbarGroup mdxType=\"ToolbarGroup\">\n        <ToolbarItem mdxType=\"ToolbarItem\">\n          <Placeholder bordered mdxType=\"Placeholder\">Group A</Placeholder>\n        </ToolbarItem>\n        <ToolbarItem mdxType=\"ToolbarItem\">\n          <Placeholder bordered mdxType=\"Placeholder\">Group A</Placeholder>\n        </ToolbarItem>\n      </ToolbarGroup>\n      <ToolbarGroup mdxType=\"ToolbarGroup\">\n        <ToolbarItem mdxType=\"ToolbarItem\">\n          <Placeholder bordered mdxType=\"Placeholder\">Group B</Placeholder>\n        </ToolbarItem>\n        <ToolbarItem mdxType=\"ToolbarItem\">\n          <Placeholder bordered mdxType=\"Placeholder\">Group B</Placeholder>\n        </ToolbarItem>\n      </ToolbarGroup>\n      <ToolbarItem mdxType=\"ToolbarItem\">\n        <Placeholder bordered mdxType=\"Placeholder\">Item</Placeholder>\n      </ToolbarItem>\n    </Toolbar>\n    <p>Disabled wrapping on toolbar groups:</p>\n    <Toolbar justify=\"space-between\" mdxType=\"Toolbar\">\n      <ToolbarGroup nowrap mdxType=\"ToolbarGroup\">\n        <ToolbarItem mdxType=\"ToolbarItem\">\n          <Placeholder bordered mdxType=\"Placeholder\">Group A</Placeholder>\n        </ToolbarItem>\n        <ToolbarItem mdxType=\"ToolbarItem\">\n          <Placeholder bordered mdxType=\"Placeholder\">Group A</Placeholder>\n        </ToolbarItem>\n      </ToolbarGroup>\n      <ToolbarGroup nowrap mdxType=\"ToolbarGroup\">\n        <ToolbarItem mdxType=\"ToolbarItem\">\n          <Placeholder bordered mdxType=\"Placeholder\">Group B</Placeholder>\n        </ToolbarItem>\n        <ToolbarItem mdxType=\"ToolbarItem\">\n          <Placeholder bordered mdxType=\"Placeholder\">Group B</Placeholder>\n        </ToolbarItem>\n      </ToolbarGroup>\n      <ToolbarItem mdxType=\"ToolbarItem\">\n        <Placeholder bordered mdxType=\"Placeholder\">Item</Placeholder>\n      </ToolbarItem>\n    </Toolbar>\n  </>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <Props of={Toolbar} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"toolbargroup\"\n    }}>{`ToolbarGroup`}</h2>\n    <p>{`A wrapper for grouping ToolbarItems together.`}</p>\n    <Props of={ToolbarGroup} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"toolbaritem\"\n    }}>{`ToolbarItem`}</h2>\n    <p>{`A wrapper for individual toolbar items.`}</p>\n    <Props of={ToolbarItem} mdxType=\"Props\" />\n    <hr></hr>\n    <p>{`Next: `}<a parentName=\"p\" {...{\n        \"href\": \"/helpers/animation\"\n      }}>{`Animation →`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}