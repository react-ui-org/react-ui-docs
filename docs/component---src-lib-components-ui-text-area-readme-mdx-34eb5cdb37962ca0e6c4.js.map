{"version":3,"sources":["webpack:///../src/lib/components/ui/TextArea/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","TextArea","id","label","variant","size","fullWidth","cols","rows","autoComplete","minLength","maxLength","isLabelVisible","placeholder","layout","helpText","validationState","validationText","changeHandler","value","required","disabled","of","isMDXComponent"],"mappings":"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","file":"component---src-lib-components-ui-text-area-readme-mdx-34eb5cdb37962ca0e6c4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-ui/react-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { TextArea } from './TextArea';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"textarea\"\n    }}>{`TextArea`}</h1>\n    <p>{`TextArea enables users to add longer text to a form.`}</p>\n\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <p>{`To implement the TextArea component, you need to import it first:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { TextArea } from '@react-ui-org/react-ui';\n`}</code></pre>\n    <p>{`And use it:`}</p>\n    <Playground __position={0} __code={'<TextArea id=\\\"my-text-area\\\" label=\\\"Your feedback\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextArea,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextArea id=\"my-text-area\" label=\"Your feedback\" mdxType=\"TextArea\" />\n    </Playground>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"#api\"\n      }}>{`API`}</a>{` for all available options.`}</p>\n    <h2 {...{\n      \"id\": \"general-guidelines\"\n    }}>{`General Guidelines`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use `}<strong parentName=\"p\">{`short and descriptive labels`}</strong>{`, ideally nouns rather than seemingly\npolite phrases like `}<em parentName=\"p\">{`Please enter your message`}</em>{`. Short labels will help your\nusers accomplish their task faster.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Only make the TextArea's label invisible when there is `}<strong parentName=\"p\">{`another visual\nclue`}</strong>{` to guide users through filling the input. Using the first option as\nlabel is not recommended either — it disappears once user makes their choice.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`When a short label is not enough, use `}<strong parentName=\"p\">{`help texts to guide users`}</strong>{` before\nthey enter anything.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Optionally you can `}<strong parentName=\"p\">{`pre-fill your text fields with a placeholder`}</strong>{` to give\nusers an example of what they're expected to fill in. Just remember the\nplaceholder disappears once a value is entered so don't put anything important\nthere. Usually, en example value starting with “Eg.” works best.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use `}<strong parentName=\"p\">{`clear, calm error messages`}</strong>{` when there's a problem with what they\nentered. Be positive and focus on solutions to make the error message helpful.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Ensure the height of a text area `}<strong parentName=\"p\">{`fits within mobile screen sizes.`}</strong></p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"design-variants\"\n    }}>{`Design Variants`}</h2>\n    <p>{`To satisfy the design requirements of your project, all input fields in React UI\ncome in `}<strong parentName=\"p\">{`two design variants`}</strong>{` to choose from: outline and filled. Both can be\nfurther `}<a parentName=\"p\" {...{\n        \"href\": \"/customize/theming\"\n      }}>{`customized`}</a>{` with CSS custom properties.`}</p>\n    <Playground __position={1} __code={'<TextArea id=\\\"my-text-area-outline\\\" label=\\\"Your feedback\\\" />\\n<TextArea id=\\\"my-text-area-filled\\\" label=\\\"Your feedback\\\" variant=\\\"filled\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextArea,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextArea id=\"my-text-area-outline\" label=\"Your feedback\" mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-filled\" label=\"Your feedback\" variant=\"filled\" mdxType=\"TextArea\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h2>\n    <p>{`Aside from the default (medium) size, two additional sizes are available: small\nand large.`}</p>\n    <Playground __position={2} __code={'<TextArea\\n  id=\\\"my-text-area-outline-small\\\"\\n  label=\\\"Your feedback\\\"\\n  size=\\\"small\\\"\\n/>\\n<TextArea id=\\\"my-text-area-outline-medium\\\" label=\\\"Your feedback\\\" />\\n<TextArea\\n  id=\\\"my-text-area-outline-large\\\"\\n  label=\\\"Your feedback\\\"\\n  size=\\\"large\\\"\\n/>\\n<TextArea\\n  id=\\\"my-text-area-filled-small\\\"\\n  label=\\\"Your feedback\\\"\\n  size=\\\"small\\\"\\n  variant=\\\"filled\\\"\\n/>\\n<TextArea\\n  id=\\\"my-text-area-filled-medium\\\"\\n  label=\\\"Your feedback\\\"\\n  variant=\\\"filled\\\"\\n/>\\n<TextArea\\n  id=\\\"my-text-area-filled-large\\\"\\n  label=\\\"Your feedback\\\"\\n  size=\\\"large\\\"\\n  variant=\\\"filled\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextArea,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextArea id=\"my-text-area-outline-small\" label=\"Your feedback\" size=\"small\" mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-outline-medium\" label=\"Your feedback\" mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-outline-large\" label=\"Your feedback\" size=\"large\" mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-filled-small\" label=\"Your feedback\" size=\"small\" variant=\"filled\" mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-filled-medium\" label=\"Your feedback\" variant=\"filled\" mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-filled-large\" label=\"Your feedback\" size=\"large\" variant=\"filled\" mdxType=\"TextArea\" />\n    </Playground>\n    <p>{`Full-width fields span the full width of a parent:`}</p>\n    <Playground __position={3} __code={'<TextArea\\n  id=\\\"my-text-area-outline-full-width\\\"\\n  label=\\\"Your feedback\\\"\\n  fullWidth\\n/>\\n<TextArea\\n  id=\\\"my-text-area-filled-full-width\\\"\\n  label=\\\"Your feedback\\\"\\n  variant=\\\"filled\\\"\\n  fullWidth\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextArea,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextArea id=\"my-text-area-outline-full-width\" label=\"Your feedback\" fullWidth mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-filled-full-width\" label=\"Your feedback\" variant=\"filled\" fullWidth mdxType=\"TextArea\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"input-size\"\n    }}>{`Input Size`}</h2>\n    <p>{`The default width of all inputs is 240 px, and it can be\n`}<a parentName=\"p\" {...{\n        \"href\": \"/customize/theming\"\n      }}>{`customized`}</a>{` with a CSS custom property. However, you\ncan also `}<strong parentName=\"p\">{`control the size of individual text areas`}</strong>{` using the `}<inlineCode parentName=\"p\">{`rows`}</inlineCode>{` and\n`}<inlineCode parentName=\"p\">{`cols`}</inlineCode>{` properties. Additionally, text areas are vertically resizable by users.`}</p>\n    <p>{`👉 Remember that the `}<inlineCode parentName=\"p\">{`cols`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`rows`}</inlineCode>{` HTML attributes `}<strong parentName=\"p\">{`do not limit on how\nmany characters`}</strong>{` the user can enter. Use the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#Min_and_max_length\"\n      }}><inlineCode parentName=\"a\">{`maxlength`}</inlineCode>{` attribute`}</a>{`\nto achieve that effect.`}</p>\n    <Playground __position={4} __code={'<TextArea\\n  id=\\\"my-text-area-outline-input-size\\\"\\n  label=\\\"Your feedback\\\"\\n  cols={50}\\n  rows={6}\\n/>\\n<TextArea\\n  id=\\\"my-text-area-filled-input-size\\\"\\n  label=\\\"Your feedback\\\"\\n  variant=\\\"filled\\\"\\n  cols={50}\\n  rows={6}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextArea,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextArea id=\"my-text-area-outline-input-size\" label=\"Your feedback\" cols={50} rows={6} mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-filled-input-size\" label=\"Your feedback\" variant=\"filled\" cols={50} rows={6} mdxType=\"TextArea\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"forwarding-html-attributes\"\n    }}>{`Forwarding HTML Attributes`}</h2>\n    <p>{`When you want to improve the accessibility of your text fields even further, you\ncan `}<strong parentName=\"p\">{`add whatever HTML attribute you like.`}</strong>{` All attributes that don't\ninterfere with `}<a parentName=\"p\" {...{\n        \"href\": \"#api\"\n      }}>{`component's API`}</a>{` are forwarded to the native HTML input.`}</p>\n    <Playground __position={5} __code={'<TextArea\\n  id=\\\"my-text-area-outline-forwarding\\\"\\n  label=\\\"Address\\\"\\n  autoComplete=\\\"street-address\\\"\\n  minLength={3}\\n  maxLength={80}\\n/>\\n<TextArea\\n  id=\\\"my-text-area-filled-forwarding\\\"\\n  label=\\\"Address\\\"\\n  variant=\\\"filled\\\"\\n  autoComplete=\\\"street-address\\\"\\n  minLength={3}\\n  maxLength={80}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextArea,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextArea id=\"my-text-area-outline-forwarding\" label=\"Address\" autoComplete=\"street-address\" minLength={3} maxLength={80} mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-filled-forwarding\" label=\"Address\" variant=\"filled\" autoComplete=\"street-address\" minLength={3} maxLength={80} mdxType=\"TextArea\" />\n    </Playground>\n    <p>{`👉 Refer to the MDN reference for the full list of\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#Attributes\"\n      }}>{`supported attributes`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"invisible-label\"\n    }}>{`Invisible Label`}</h2>\n    <p>{`In some cases, it may be convenient to visually hide the field label. The label\nremains accessible to assistive technologies.`}</p>\n    <p>{`While it may be acceptable for login screens with just a few fields or other\nsimple forms, it's dangerous to hide labels from users in most cases. Keep in\nmind you should `}<strong parentName=\"p\">{`provide another visual clue`}</strong>{` so users know what to fill into\nthe input.`}</p>\n    <Playground __position={6} __code={'<TextArea\\n  id=\\\"my-text-area-outline-hidden-label\\\"\\n  label=\\\"Feedback\\\"\\n  isLabelVisible={false}\\n  placeholder=\\\"Eg. What I liked the best was…\\\"\\n/>\\n<TextArea\\n  id=\\\"my-text-area-filled-hidden-label\\\"\\n  label=\\\"Feedback\\\"\\n  isLabelVisible={false}\\n  variant=\\\"filled\\\"\\n  placeholder=\\\"Eg. What I liked the best was…\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextArea,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextArea id=\"my-text-area-outline-hidden-label\" label=\"Feedback\" isLabelVisible={false} placeholder=\"Eg. What I liked the best was…\" mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-filled-hidden-label\" label=\"Feedback\" isLabelVisible={false} variant=\"filled\" placeholder=\"Eg. What I liked the best was…\" mdxType=\"TextArea\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"horizontal-layout\"\n    }}>{`Horizontal Layout`}</h2>\n    <p>{`The default vertical layout is very easy to use and work with. However, there\nare situations where horizontal layout suits better — and that's why React UI\nsupports this kind of layout as well.`}</p>\n    <Playground __position={7} __code={'<TextArea\\n  id=\\\"my-text-area-outline-horizontal\\\"\\n  label=\\\"Your feedback\\\"\\n  layout=\\\"horizontal\\\"\\n/>\\n<TextArea\\n  id=\\\"my-text-area-filled-horizontal\\\"\\n  label=\\\"Your feedback\\\"\\n  layout=\\\"horizontal\\\"\\n  variant=\\\"filled\\\"\\n/>\\n<TextArea\\n  id=\\\"my-text-area-outline-horizontal-full-width\\\"\\n  label=\\\"Your feedback\\\"\\n  layout=\\\"horizontal\\\"\\n  fullWidth\\n/>\\n<TextArea\\n  id=\\\"my-text-area-filled-horizontal-full-width\\\"\\n  label=\\\"Your feedback\\\"\\n  layout=\\\"horizontal\\\"\\n  variant=\\\"filled\\\"\\n  fullWidth\\n/>\\n<TextArea\\n  id=\\\"my-text-area-outline-horizontal-full-width-invisible-label\\\"\\n  isLabelVisible={false}\\n  label=\\\"Your feedback\\\"\\n  layout=\\\"horizontal\\\"\\n  placeholder=\\\"Your feedback\\\"\\n  fullWidth\\n/>\\n<TextArea\\n  id=\\\"my-text-area-filled-horizontal-full-width-invisible-label\\\"\\n  isLabelVisible={false}\\n  label=\\\"Your feedback\\\"\\n  layout=\\\"horizontal\\\"\\n  placeholder=\\\"Your feedback\\\"\\n  variant=\\\"filled\\\"\\n  fullWidth\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextArea,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextArea id=\"my-text-area-outline-horizontal\" label=\"Your feedback\" layout=\"horizontal\" mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-filled-horizontal\" label=\"Your feedback\" layout=\"horizontal\" variant=\"filled\" mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-outline-horizontal-full-width\" label=\"Your feedback\" layout=\"horizontal\" fullWidth mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-filled-horizontal-full-width\" label=\"Your feedback\" layout=\"horizontal\" variant=\"filled\" fullWidth mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-outline-horizontal-full-width-invisible-label\" isLabelVisible={false} label=\"Your feedback\" layout=\"horizontal\" placeholder=\"Your feedback\" fullWidth mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-filled-horizontal-full-width-invisible-label\" isLabelVisible={false} label=\"Your feedback\" layout=\"horizontal\" placeholder=\"Your feedback\" variant=\"filled\" fullWidth mdxType=\"TextArea\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"help-text\"\n    }}>{`Help Text`}</h2>\n    <p>{`You may provide an additional help text to clarify how the input should be\nfilled.`}</p>\n    <Playground __position={8} __code={'<TextArea\\n  id=\\\"my-text-area-outline-help-text\\\"\\n  label=\\\"Your feedback\\\"\\n  helpText=\\\"Why would you recommend us?\\\"\\n/>\\n<TextArea\\n  id=\\\"my-text-area-filled-help-text\\\"\\n  label=\\\"Your feedback\\\"\\n  variant=\\\"filled\\\"\\n  helpText=\\\"Why would you recommend us?\\\"\\n/>\\n<TextArea\\n  id=\\\"my-text-area-outline-help-text-horizontal\\\"\\n  label=\\\"Your feedback\\\"\\n  layout=\\\"horizontal\\\"\\n  helpText=\\\"Why would you recommend us?\\\"\\n/>\\n<TextArea\\n  id=\\\"my-text-area-filled-help-text-horizontal\\\"\\n  label=\\\"Your feedback\\\"\\n  layout=\\\"horizontal\\\"\\n  helpText=\\\"Why would you recommend us?\\\"\\n  variant=\\\"filled\\\"\\n/>\\n<TextArea\\n  id=\\\"my-text-area-outline-help-text-horizontal-full-width\\\"\\n  label=\\\"Your feedback\\\"\\n  layout=\\\"horizontal\\\"\\n  helpText=\\\"Why would you recommend us?\\\"\\n  fullWidth\\n/>\\n<TextArea\\n  id=\\\"my-text-area-filled-help-text-horizontal-full-width\\\"\\n  label=\\\"Your feedback\\\"\\n  layout=\\\"horizontal\\\"\\n  variant=\\\"filled\\\"\\n  helpText=\\\"Why would you recommend us?\\\"\\n  fullWidth\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextArea,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextArea id=\"my-text-area-outline-help-text\" label=\"Your feedback\" helpText=\"Why would you recommend us?\" mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-filled-help-text\" label=\"Your feedback\" variant=\"filled\" helpText=\"Why would you recommend us?\" mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-outline-help-text-horizontal\" label=\"Your feedback\" layout=\"horizontal\" helpText=\"Why would you recommend us?\" mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-filled-help-text-horizontal\" label=\"Your feedback\" layout=\"horizontal\" helpText=\"Why would you recommend us?\" variant=\"filled\" mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-outline-help-text-horizontal-full-width\" label=\"Your feedback\" layout=\"horizontal\" helpText=\"Why would you recommend us?\" fullWidth mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-filled-help-text-horizontal-full-width\" label=\"Your feedback\" layout=\"horizontal\" variant=\"filled\" helpText=\"Why would you recommend us?\" fullWidth mdxType=\"TextArea\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"states\"\n    }}>{`States`}</h2>\n    <h3 {...{\n      \"id\": \"validation-states\"\n    }}>{`Validation States`}</h3>\n    <p>{`Validation states visually present the result of validation of the input. You\nshould always `}<strong parentName=\"p\">{`provide a help text for states other than valid`}</strong>{` so users know\nwhat happened and what action they should take or what options they have.`}</p>\n    <Playground __position={9} __code={'<TextArea\\n  id=\\\"my-text-area-outline-success\\\"\\n  label=\\\"Your feedback\\\"\\n  validationState=\\\"valid\\\"\\n  validationText=\\\"Looks good!\\\"\\n  changeHandler={() => {}}\\n  value=\\\"Like that!\\\"\\n  required\\n/>\\n<TextArea\\n  id=\\\"my-text-area-outline-warning\\\"\\n  label=\\\"Your feedback\\\"\\n  validationState=\\\"warning\\\"\\n  validationText=\\\"The feedback should be at least 3 characters long.\\\"\\n  value=\\\"..\\\"\\n  changeHandler={() => {}}\\n  required\\n/>\\n<TextArea\\n  id=\\\"my-text-area-outline-error\\\"\\n  label=\\\"Your feedback\\\"\\n  validationState=\\\"invalid\\\"\\n  validationText=\\\"Please share your feedback with us.\\\"\\n  required\\n/>\\n<TextArea\\n  id=\\\"my-text-area-filled-success\\\"\\n  label=\\\"Your feedback\\\"\\n  validationState=\\\"valid\\\"\\n  validationText=\\\"Looks good!\\\"\\n  variant=\\\"filled\\\"\\n  changeHandler={() => {}}\\n  value=\\\"Like that!\\\"\\n  required\\n/>\\n<TextArea\\n  id=\\\"my-text-area-filled-warning\\\"\\n  label=\\\"Your feedback\\\"\\n  validationState=\\\"warning\\\"\\n  validationText=\\\"The feedback should be at least 3 characters long.\\\"\\n  variant=\\\"filled\\\"\\n  changeHandler={() => {}}\\n  value=\\\"..\\\"\\n  required\\n/>\\n<TextArea\\n  id=\\\"my-text-area-filled-error\\\"\\n  label=\\\"Your feedback\\\"\\n  validationState=\\\"invalid\\\"\\n  validationText=\\\"Please share your feedback with us.\\\"\\n  variant=\\\"filled\\\"\\n  required\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextArea,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextArea id=\"my-text-area-outline-success\" label=\"Your feedback\" validationState=\"valid\" validationText=\"Looks good!\" changeHandler={() => {}} value=\"Like that!\" required mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-outline-warning\" label=\"Your feedback\" validationState=\"warning\" validationText=\"The feedback should be at least 3 characters long.\" value=\"..\" changeHandler={() => {}} required mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-outline-error\" label=\"Your feedback\" validationState=\"invalid\" validationText=\"Please share your feedback with us.\" required mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-filled-success\" label=\"Your feedback\" validationState=\"valid\" validationText=\"Looks good!\" variant=\"filled\" changeHandler={() => {}} value=\"Like that!\" required mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-filled-warning\" label=\"Your feedback\" validationState=\"warning\" validationText=\"The feedback should be at least 3 characters long.\" variant=\"filled\" changeHandler={() => {}} value=\"..\" required mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-filled-error\" label=\"Your feedback\" validationState=\"invalid\" validationText=\"Please share your feedback with us.\" variant=\"filled\" required mdxType=\"TextArea\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"disabled-state\"\n    }}>{`Disabled State`}</h3>\n    <p>{`It's possible to disable the whole input.`}</p>\n    <Playground __position={10} __code={'<TextArea id=\\\"my-text-area-outline-disabled\\\" label=\\\"Your feedback\\\" disabled />\\n<TextArea\\n  id=\\\"my-text-area-filled-disabled\\\"\\n  label=\\\"Your feedback\\\"\\n  variant=\\\"filled\\\"\\n  disabled\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextArea,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextArea id=\"my-text-area-outline-disabled\" label=\"Your feedback\" disabled mdxType=\"TextArea\" />\n  <TextArea id=\"my-text-area-filled-disabled\" label=\"Your feedback\" variant=\"filled\" disabled mdxType=\"TextArea\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <p>{`In addition to the options below, you can add any custom attributes that do not\ninterfere with the API, and they will be passed to the `}<inlineCode parentName=\"p\">{`textarea`}</inlineCode>{` HTML element.\nThis is useful mainly to improve component's\n`}<a parentName=\"p\" {...{\n        \"href\": \"#forwarding-html-attributes\"\n      }}>{`accessibility`}</a>{`.`}</p>\n    <Props of={TextArea} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"theming\"\n    }}>{`Theming`}</h2>\n    <p>{`Head to `}<a parentName=\"p\" {...{\n        \"href\": \"/customize/theming#forms\"\n      }}>{`Forms Theming`}</a>{`.`}</p>\n    <hr></hr>\n    <p>{`Next: `}<a parentName=\"p\" {...{\n        \"href\": \"/components/ui/toggle\"\n      }}>{`Toggle →`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}