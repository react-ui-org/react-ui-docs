(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{"F/Fu":function(e,t,l){"use strict";l.r(t),l.d(t,"_frontmatter",(function(){return b})),l.d(t,"default",(function(){return c}));var a=l("Fcif"),n=l("dV/x"),i=(l("mXGw"),l("/FXl")),o=l("TjRS"),p=l("ZFoC"),s=l("nBnF");l("aD51");const r=["components"],b={};void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!Object.prototype.hasOwnProperty.call(b,"__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/lib/components/FileInputField/README.mdx"}});const d={_frontmatter:b},u=o.a;function c(e){let{components:t}=e,l=Object(n.a)(e,r);return Object(i.b)(u,Object(a.a)({},d,l,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"fileinputfield"},"FileInputField"),Object(i.b)("p",null,"FileInputField allows users to select files to upload."),Object(i.b)("h2",{id:"basic-usage"},"Basic Usage"),Object(i.b)("p",null,"To implement the FileInputField component, you need to import it first:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { FileInputField } from '@react-ui-org/react-ui';\n")),Object(i.b)("p",null,"And use it:"),Object(i.b)(p.c,{__position:0,__code:'<FileInputField label="Attachment" />',__scope:{props:l,DefaultLayout:o.a,Playground:p.c,Props:p.d,FileInputField:s.i,DefaultLayout:o.a,_frontmatter:b},mdxType:"Playground"},Object(i.b)(s.i,{label:"Attachment",mdxType:"FileInputField"})),Object(i.b)("p",null,"See ",Object(i.b)("a",{parentName:"p",href:"#api"},"API")," for all available options."),Object(i.b)("h2",{id:"general-guidelines"},"General Guidelines"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Apply ",Object(i.b)("a",{parentName:"p",href:"#forwarding-html-attributes"},"native HTML attributes")," to control ",Object(i.b)("strong",{parentName:"p"},"what\nand how many files")," users can select.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Use ",Object(i.b)("strong",{parentName:"p"},"short and descriptive labels"),", ideally nouns rather than seemingly\npolite phrases like ",Object(i.b)("em",{parentName:"p"},"Please attach your file here"),". Short labels will help\nyour users accomplish their task faster.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Only make the FileInputField's label invisible when there is ",Object(i.b)("strong",{parentName:"p"},"another visual\nclue")," to guide users through filling the input.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"When a short label is not enough, use ",Object(i.b)("strong",{parentName:"p"},"help texts to guide users")," before\nthey enter anything.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Use ",Object(i.b)("strong",{parentName:"p"},"clear, calm error messages")," when there's a problem with what they\nentered. Be positive and focus on solutions to make the error message helpful."))),Object(i.b)("p",null,"ðŸ‘‰ FileInputField implements native HTML ",Object(i.b)("inlineCode",{parentName:"p"},'input type="file"'),". Therefore, it is\nnot possible to affect neither its translations (they depend on a browser), nor\nappearance.\n",Object(i.b)("a",{parentName:"p",href:"https://github.com/react-ui-org/react-ui/issues/244"},"Custom translations and appearance"),"\nare considered to be implemented at some point in the future. However, from the\nlayout perspective, FileInputFields work just like any other form fields."),Object(i.b)("h2",{id:"sizes"},"Sizes"),Object(i.b)("p",null,"Full-width fields span the full width of a parent:"),Object(i.b)(p.c,{__position:1,__code:'<FileInputField fullWidth label="First name" />',__scope:{props:l,DefaultLayout:o.a,Playground:p.c,Props:p.d,FileInputField:s.i,DefaultLayout:o.a,_frontmatter:b},mdxType:"Playground"},Object(i.b)(s.i,{fullWidth:!0,label:"First name",mdxType:"FileInputField"})),Object(i.b)("h2",{id:"invisible-label"},"Invisible Label"),Object(i.b)("p",null,"In some cases, it may be convenient to visually hide the field label. The label\nremains accessible to assistive technologies."),Object(i.b)("p",null,"While it may be acceptable for simple forms with just a few fields, it's\ndangerous to hide labels from users in most cases. Keep in mind you should\n",Object(i.b)("strong",{parentName:"p"},"provide another visual clue")," so users know what to fill into the input."),Object(i.b)(p.c,{__position:2,__code:'<FileInputField isLabelVisible={false} label="Attachment" />',__scope:{props:l,DefaultLayout:o.a,Playground:p.c,Props:p.d,FileInputField:s.i,DefaultLayout:o.a,_frontmatter:b},mdxType:"Playground"},Object(i.b)(s.i,{isLabelVisible:!1,label:"Attachment",mdxType:"FileInputField"})),Object(i.b)("h2",{id:"horizontal-layout"},"Horizontal Layout"),Object(i.b)("p",null,"The default vertical layout is very easy to use and work with. However, there\nare situations where horizontal layout suits better â€” and that's why React UI\nsupports this kind of layout as well."),Object(i.b)(p.c,{__position:3,__code:'<FileInputField label="Attachment" layout="horizontal" />\n<FileInputField\n  fullWidth\n  isLabelVisible={false}\n  label="Attachment"\n  layout="horizontal"\n/>',__scope:{props:l,DefaultLayout:o.a,Playground:p.c,Props:p.d,FileInputField:s.i,DefaultLayout:o.a,_frontmatter:b},mdxType:"Playground"},Object(i.b)(s.i,{label:"Attachment",layout:"horizontal",mdxType:"FileInputField"}),Object(i.b)(s.i,{fullWidth:!0,isLabelVisible:!1,label:"Attachment",layout:"horizontal",mdxType:"FileInputField"})),Object(i.b)("h2",{id:"help-text"},"Help Text"),Object(i.b)("p",null,"You may provide an additional help text to clarify how the input should be\nfilled."),Object(i.b)(p.c,{__position:4,__code:'<FileInputField\n  helpText="Choose one or more files to upload."\n  label="Attachment"\n/>\n<FileInputField\n  helpText="Choose one or more files to upload."\n  label="Attachment"\n  layout="horizontal"\n/>\n<FileInputField\n  fullWidth\n  helpText="Choose one or more files to upload."\n  label="Attachment"\n  layout="horizontal"\n/>',__scope:{props:l,DefaultLayout:o.a,Playground:p.c,Props:p.d,FileInputField:s.i,DefaultLayout:o.a,_frontmatter:b},mdxType:"Playground"},Object(i.b)(s.i,{helpText:"Choose one or more files to upload.",label:"Attachment",mdxType:"FileInputField"}),Object(i.b)(s.i,{helpText:"Choose one or more files to upload.",label:"Attachment",layout:"horizontal",mdxType:"FileInputField"}),Object(i.b)(s.i,{fullWidth:!0,helpText:"Choose one or more files to upload.",label:"Attachment",layout:"horizontal",mdxType:"FileInputField"})),Object(i.b)("h2",{id:"states"},"States"),Object(i.b)("h3",{id:"validation-states"},"Validation States"),Object(i.b)("p",null,"Validation states visually present the result of validation of the input. You\nshould always ",Object(i.b)("strong",{parentName:"p"},"provide a validation message for states other than valid")," so\nusers know what happened and what action they should take or what options they\nhave."),Object(i.b)(p.c,{__position:5,__code:'<FileInputField\n  label="Attachment"\n  validationState="valid"\n  validationText="Looks good!"\n/>\n<FileInputField\n  label="Attachment"\n  validationState="invalid"\n  validationText="Your file is too big. Please select something smaller."\n/>\n<FileInputField\n  label="Attachment"\n  validationState="warning"\n  validationText={`\n    You selected more than 10 files.\n    It may take some time before we process them.\n  `}\n/>',__scope:{props:l,DefaultLayout:o.a,Playground:p.c,Props:p.d,FileInputField:s.i,DefaultLayout:o.a,_frontmatter:b},mdxType:"Playground"},Object(i.b)(s.i,{label:"Attachment",validationState:"valid",validationText:"Looks good!",mdxType:"FileInputField"}),Object(i.b)(s.i,{label:"Attachment",validationState:"invalid",validationText:"Your file is too big. Please select something smaller.",mdxType:"FileInputField"}),Object(i.b)(s.i,{label:"Attachment",validationState:"warning",validationText:"\n      You selected more than 10 files.\n      It may take some time before we process them.\n    ",mdxType:"FileInputField"})),Object(i.b)("h3",{id:"disabled-state"},"Disabled State"),Object(i.b)("p",null,"It's possible to disable the whole input."),Object(i.b)(p.c,{__position:6,__code:'<FileInputField disabled label="Attachment" />',__scope:{props:l,DefaultLayout:o.a,Playground:p.c,Props:p.d,FileInputField:s.i,DefaultLayout:o.a,_frontmatter:b},mdxType:"Playground"},Object(i.b)(s.i,{disabled:!0,label:"Attachment",mdxType:"FileInputField"})),Object(i.b)("h2",{id:"forwarding-html-attributes"},"Forwarding HTML Attributes"),Object(i.b)("p",null,"In addition to the options below in the ",Object(i.b)("a",{parentName:"p",href:"#api"},"component's API")," section, you\ncan specify ",Object(i.b)("a",{parentName:"p",href:"https://reactjs.org/docs/events.html"},"React synthetic events")," or you can ",Object(i.b)("strong",{parentName:"p"},"add whatever HTML attribute\nyou like.")," All attributes that don't interfere with the API are forwarded to\nthe native HTML ",Object(i.b)("inlineCode",{parentName:"p"},"<input>"),". This enables making the component interactive and\nhelps to improve its accessibility."),Object(i.b)(p.c,{__position:7,__code:'<FileInputField\n  accept=".pdf,.jpg,.jpeg,.png"\n  helpText={`\n    Choose up to 10 files. Allowed extensions are .pdf, .jpg, .jpeg, or .png.\n    Size limit is 10 MB.\n  `}\n  label="Attachment"\n  multiple\n/>',__scope:{props:l,DefaultLayout:o.a,Playground:p.c,Props:p.d,FileInputField:s.i,DefaultLayout:o.a,_frontmatter:b},mdxType:"Playground"},Object(i.b)(s.i,{accept:".pdf,.jpg,.jpeg,.png",helpText:"\n      Choose up to 10 files. Allowed extensions are .pdf, .jpg, .jpeg, or .png.\n      Size limit is 10 MB.\n    ",label:"Attachment",multiple:!0,mdxType:"FileInputField"})),Object(i.b)("p",null,"ðŸ‘‰ Refer to the MDN reference for the full list of supported attributes of the\n",Object(i.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#additional_attributes"},"file")," input type."),Object(i.b)("h2",{id:"forwarding-ref"},"Forwarding ref"),Object(i.b)("p",null,"If you provide ",Object(i.b)("a",{parentName:"p",href:"https://reactjs.org/docs/refs-and-the-dom.html"},"ref"),", it is forwarded to the native HTML ",Object(i.b)("inlineCode",{parentName:"p"},"<input>")," element."),Object(i.b)("h2",{id:"api"},"API"),Object(i.b)(p.d,{table:!0,of:s.i,mdxType:"Props"}),Object(i.b)("h2",{id:"theming"},"Theming"),Object(i.b)("p",null,"Head to ",Object(i.b)("a",{parentName:"p",href:"/customize/theming/forms"},"Forms Theming")," to see shared form theming\noptions."))}void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!Object.prototype.hasOwnProperty.call(c,"__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/lib/components/FileInputField/README.mdx"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-lib-components-file-input-field-readme-mdx-6e9e365705433214ace4.js.map