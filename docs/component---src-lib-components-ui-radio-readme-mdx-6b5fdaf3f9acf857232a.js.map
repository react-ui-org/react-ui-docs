{"version":3,"sources":["webpack:///../src/lib/components/ui/Radio/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Radio","id","label","options","value","isLabelVisible","changeHandler","description","validationState","required","error","disabled","of","isMDXComponent"],"mappings":"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","file":"component---src-lib-components-ui-radio-readme-mdx-6b5fdaf3f9acf857232a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-ui/react-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Radio } from './Radio';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"radio\"\n    }}>{`Radio`}</h1>\n    <p>{`Radio allows users to select one option from a set.`}</p>\n\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <p>{`To use the Radio component, you need to import it first:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Radio } from '@react-ui-org/react-ui';\n`}</code></pre>\n    <p>{`And use it:`}</p>\n    <Playground __position={0} __code={'<Radio\\n  id=\\\"my-radio\\\"\\n  label=\\\"Your favourite fruit\\\"\\n  options={[\\n    {\\n      label: \\'Apple\\',\\n      value: \\'apple\\',\\n    },\\n    {\\n      label: \\'Banana\\',\\n      value: \\'banana\\',\\n    },\\n    {\\n      label: \\'Grapefruit\\',\\n      value: \\'grapefruit\\',\\n    },\\n  ]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Radio,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Radio id=\"my-radio\" label=\"Your favourite fruit\" options={[{\n        label: 'Apple',\n        value: 'apple'\n      }, {\n        label: 'Banana',\n        value: 'banana'\n      }, {\n        label: 'Grapefruit',\n        value: 'grapefruit'\n      }]} mdxType=\"Radio\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"general-guidelines\"\n    }}>{`General Guidelines`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use Radio for `}<strong parentName=\"p\">{`just a few options`}</strong>{`. For larger sets of many options (say 4\nand more) consider using the `}<a parentName=\"p\" {...{\n            \"href\": \"/components/ui/select-field\"\n          }}>{`SelectField`}</a>{`\ncomponent. This will help keep your UI clean and uncluttered and prevent your\nusers from being overwhelmed by too many options.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Don't use for boolean`}</strong>{` (true/false) selection or to toggle things on and\noff. `}<a parentName=\"p\" {...{\n            \"href\": \"/components/ui/checkbox-field\"\n          }}>{`CheckboxField`}</a>{` and\n`}<a parentName=\"p\" {...{\n            \"href\": \"/components/ui/toggle\"\n          }}>{`Toggle`}</a>{` are more suitable for such cases.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use `}<strong parentName=\"p\">{`short and descriptive labels`}</strong>{`, ideally nouns rather than seemingly\npolite phrases like `}<em parentName=\"p\">{`Please select your favourite fruit`}</em>{`. Short labels will\nhelp your users accomplish their task faster.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Only make the Radio's label invisible when there is `}<strong parentName=\"p\">{`another visual\nclue`}</strong>{` to guide users through filling the input.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`When a short label is not enough, use `}<strong parentName=\"p\">{`help texts to guide users`}</strong>{` before\nthey enter anything.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use `}<strong parentName=\"p\">{`clear, calm error messages`}</strong>{` when there's a problem with what they\nentered.`}</p>\n      </li>\n    </ul>\n    <p>{`ðŸ“– `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/\"\n      }}>{`Read more about checkboxes and radios at Nielsen Norman Group.`}</a></p>\n    <h2 {...{\n      \"id\": \"invisible-label\"\n    }}>{`Invisible Label`}</h2>\n    <p>{`While it may be acceptable for login screens with just a few fields or for other\nsimple forms, it's dangerous to hide labels from users in most cases. Keep in\nmind you should `}<strong parentName=\"p\">{`provide another visual clue`}</strong>{` so users know what to fill into\nthe input.`}</p>\n    <Playground __position={1} __code={'<Radio\\n  id=\\\"my-radio-hidden-label\\\"\\n  label=\\\"Your favourite fruit\\\"\\n  isLabelVisible={false}\\n  options={[\\n    {\\n      label: \\'I want to subscribe to the weekly newsletter\\',\\n      value: \\'weekly\\',\\n    },\\n    {\\n      label: \\'I want to subscribe to the monthly newsletter\\',\\n      value: \\'monthly\\',\\n    },\\n    {\\n      label: \\\"I don\\'t wish to receive anything\\\",\\n      value: \\'never\\',\\n    },\\n  ]}\\n  changeHandler={() => {}}\\n  value=\\\"weekly\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Radio,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Radio id=\"my-radio-hidden-label\" label=\"Your favourite fruit\" isLabelVisible={false} options={[{\n        label: 'I want to subscribe to the weekly newsletter',\n        value: 'weekly'\n      }, {\n        label: 'I want to subscribe to the monthly newsletter',\n        value: 'monthly'\n      }, {\n        label: \"I don't wish to receive anything\",\n        value: 'never'\n      }]} changeHandler={() => {}} value=\"weekly\" mdxType=\"Radio\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"help-text\"\n    }}>{`Help Text`}</h2>\n    <p>{`You may provide an additional help text to clarify how the input should be\nfilled.`}</p>\n    <Playground __position={2} __code={'<Radio\\n  id=\\\"my-radio\\\"\\n  label=\\\"Your favourite fruit\\\"\\n  options={[\\n    {\\n      label: \\'Apple\\',\\n      value: \\'apple\\',\\n    },\\n    {\\n      label: \\'Banana\\',\\n      value: \\'banana\\',\\n    },\\n    {\\n      label: \\'Grapefruit\\',\\n      value: \\'grapefruit\\',\\n    },\\n  ]}\\n  changeHandler={() => {}}\\n  value=\\\"apple\\\"\\n  description=\\\"What do you prefer?\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Radio,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Radio id=\"my-radio\" label=\"Your favourite fruit\" options={[{\n        label: 'Apple',\n        value: 'apple'\n      }, {\n        label: 'Banana',\n        value: 'banana'\n      }, {\n        label: 'Grapefruit',\n        value: 'grapefruit'\n      }]} changeHandler={() => {}} value=\"apple\" description=\"What do you prefer?\" mdxType=\"Radio\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"states\"\n    }}>{`States`}</h2>\n    <h3 {...{\n      \"id\": \"validation-states\"\n    }}>{`Validation States`}</h3>\n    <p>{`Validation states visually present the result of validation of the input. You\nshould always `}<strong parentName=\"p\">{`provide a help text for states other than valid`}</strong>{` so users know\nwhat happened and what action they should take or what options they have.`}</p>\n    <Playground __position={3} __code={'() => {\\n  const options = [\\n    {\\n      label: \\'Apple\\',\\n      value: \\'apple\\',\\n    },\\n    {\\n      label: \\'Banana\\',\\n      value: \\'banana\\',\\n    },\\n    {\\n      label: \\'Grapefruit\\',\\n      value: \\'grapefruit\\',\\n    },\\n  ]\\n  return (\\n    <>\\n      <Radio\\n        id=\\\"my-radio-success\\\"\\n        label=\\\"Your favourite fruit\\\"\\n        options={options}\\n        validationState=\\\"valid\\\"\\n        value=\\\"apple\\\"\\n        description=\\\"Great, they\\'re in stock!\\\"\\n        changeHandler={() => {}}\\n        required\\n      />\\n      <Radio\\n        id=\\\"my-radio-warning\\\"\\n        label=\\\"Your favourite fruit\\\"\\n        options={options}\\n        validationState=\\\"warning\\\"\\n        value=\\\"grapefruit\\\"\\n        description=\\\"Oh, really?\\\"\\n        changeHandler={() => {}}\\n        required\\n      />\\n      <Radio\\n        id=\\\"my-radio-error\\\"\\n        label=\\\"Your favourite fruit\\\"\\n        options={options}\\n        validationState=\\\"invalid\\\"\\n        error=\\\"You must select one kind of fruit.\\\"\\n        required\\n      />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Radio,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const options = [{\n          label: 'Apple',\n          value: 'apple'\n        }, {\n          label: 'Banana',\n          value: 'banana'\n        }, {\n          label: 'Grapefruit',\n          value: 'grapefruit'\n        }];\n        return <>\n        <Radio id=\"my-radio-success\" label=\"Your favourite fruit\" options={options} validationState=\"valid\" value=\"apple\" description=\"Great, they're in stock!\" changeHandler={() => {}} required mdxType=\"Radio\" />\n        <Radio id=\"my-radio-warning\" label=\"Your favourite fruit\" options={options} validationState=\"warning\" value=\"grapefruit\" description=\"Oh, really?\" changeHandler={() => {}} required mdxType=\"Radio\" />\n        <Radio id=\"my-radio-error\" label=\"Your favourite fruit\" options={options} validationState=\"invalid\" error=\"You must select one kind of fruit.\" required mdxType=\"Radio\" />\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"disabled-state\"\n    }}>{`Disabled State`}</h3>\n    <p>{`It's possible to disable just some options or the whole set.`}</p>\n    <Playground __position={4} __code={'() => {\\n  const options = [\\n    {\\n      label: \\'Apple\\',\\n      value: \\'apple\\',\\n    },\\n    {\\n      label: \\'Banana\\',\\n      value: \\'banana\\',\\n    },\\n    {\\n      disabled: true,\\n      label: \\'Grapefruit\\',\\n      value: \\'grapefruit\\',\\n    },\\n  ]\\n  return (\\n    <>\\n      <Radio\\n        id=\\\"my-radio-disabled-option\\\"\\n        label=\\\"Your favourite fruit\\\"\\n        options={options}\\n        value=\\\"apple\\\"\\n        changeHandler={() => {}}\\n      />\\n      <Radio\\n        id=\\\"my-radio-disabled\\\"\\n        label=\\\"Your favourite fruit\\\"\\n        options={options}\\n        value=\\\"apple\\\"\\n        changeHandler={() => {}}\\n        disabled\\n      />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Radio,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const options = [{\n          label: 'Apple',\n          value: 'apple'\n        }, {\n          label: 'Banana',\n          value: 'banana'\n        }, {\n          disabled: true,\n          label: 'Grapefruit',\n          value: 'grapefruit'\n        }];\n        return <>\n        <Radio id=\"my-radio-disabled-option\" label=\"Your favourite fruit\" options={options} value=\"apple\" changeHandler={() => {}} mdxType=\"Radio\" />\n        <Radio id=\"my-radio-disabled\" label=\"Your favourite fruit\" options={options} value=\"apple\" changeHandler={() => {}} disabled mdxType=\"Radio\" />\n      </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <Props of={Radio} mdxType=\"Props\" />\n    <hr></hr>\n    <p>{`Next: `}<a parentName=\"p\" {...{\n        \"href\": \"/components/ui/scroll-view\"\n      }}>{`ScrollView â†’`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}