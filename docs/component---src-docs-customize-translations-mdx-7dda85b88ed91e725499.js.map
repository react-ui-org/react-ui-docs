{"version":3,"sources":["webpack:///../src/docs/customize/translations.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"kQAQO,MAAMA,EAAe,Q,qNAC5B,MAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,gBACH,gBACL,qBAAK,6JAEL,kBACE,GAAM,0BACH,0BACL,qBAAK,mDACP,0BAAYC,WAAW,KAAM,gCAA6C,6EAExE,sBACE,kBAAIA,WAAW,MAAO,eAAc,0BAAYA,WAAW,MAAO,eAA4B,iEAC9E,0BAAYA,WAAW,MAAO,eAA4B,OAAM,0BAAYA,WAAW,MAAO,gBAA6B,kIAG3I,kBAAIA,WAAW,MAAO,2DAA0D,0BAAYA,WAAW,MAAO,gBAA6B,+EAG7I,kBACE,GAAM,sBACH,sBACL,qBAAK,uCAAsC,0BAAYA,WAAW,KAAM,gBAA6B,wFAErG,qBAAK,oFACL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eACV,sDAEP,qBAAK,aAAY,0BAAYA,WAAW,KAAM,gBAA6B,iBAC3E,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBACV,oEAIP,kBACE,GAAM,uBACH,uBACL,qBAAK,uDAAsD,0BAAYA,WAAW,KAAM,eAA4B,WACpH,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eACV,4DAEP,qBAAK,4CAA2C,0BAAYA,WAAW,KAAM,eAA4B,SAAQ,0BAAYA,WAAW,KAAM,gBAA6B,iBAC3K,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBACV,0Q,mNAqBXJ,EAAWK,gBAAiB","file":"component---src-docs-customize-translations-mdx-7dda85b88ed91e725499.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-ui/react-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"translations\"\n    }}>{`Translations`}</h1>\n    <p>{`Some components may contain texts which improve components' accessibility.\nAll texts are in English by default and can be translated to other languages.`}</p>\n    <h2 {...{\n      \"id\": \"translation-approaches\"\n    }}>{`Translation Approaches`}</h2>\n    <p>{`Structure of translations can be found in file\n`}<inlineCode parentName=\"p\">{`src/lib/translations/en.json`}</inlineCode>{` or in a documentation of props of components\nthat support translations.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`You can use `}<inlineCode parentName=\"li\">{`RUIProvider`}</inlineCode>{` component and pass translated structure\nfrom this file into `}<inlineCode parentName=\"li\">{`RUIProvider`}</inlineCode>{` as `}<inlineCode parentName=\"li\">{`translations`}</inlineCode>{` prop to\noverwrite default translations. You have to define all translations for all\ncomponents, otherwise it will not work.`}</li>\n      <li parentName=\"ol\">{`Other option is to overwrite translations locally using `}<inlineCode parentName=\"li\">{`translations`}</inlineCode>{` prop\nof specific component. You have to define all translations as well.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"local-translations\"\n    }}>{`Local Translations`}</h3>\n    <p>{`If component supports translations, `}<inlineCode parentName=\"p\">{`translations`}</inlineCode>{` prop and its structure is\npresent in props documentation for a specific component.`}</p>\n    <p>{`To define translations locally, you need to import component first (e.g. Modal):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Modal } from '@react-ui-org/react-ui';\n`}</code></pre>\n    <p>{`Then pass `}<inlineCode parentName=\"p\">{`translations`}</inlineCode>{` prop object:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Modal translations={{ close: 'Close' }}>\n  // ...\n</Modal>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"global-translations\"\n    }}>{`Global Translations`}</h3>\n    <p>{`To define translations globally, you need to import `}<inlineCode parentName=\"p\">{`RUIProvider`}</inlineCode>{` first:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { RUIProvider } from '@react-ui-org/react-ui';\n`}</code></pre>\n    <p>{`Then wrap application (or its part) with `}<inlineCode parentName=\"p\">{`RUIProvider`}</inlineCode>{` with `}<inlineCode parentName=\"p\">{`translations`}</inlineCode>{` prop object.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<RUIProvider translations={{\n    Alert: {\n      close: 'Close',\n    },\n    Modal: {\n      close: 'Close',\n    },\n    ScrollView: {\n      next: 'Next',\n      previous: 'Previous',\n    },\n  }}>\n  <Modal>\n    // ...\n  </Modal>\n</RUIProvider>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}