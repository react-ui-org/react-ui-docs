(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{"0dXl":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return b})),n.d(t,"default",(function(){return y}));var o=n("Fcif"),l=n("dV/x"),a=n("mXGw"),i=n("/FXl"),d=n("TjRS"),r=n("ZFoC"),u=n("nBnF"),c=n("R5VZ");n("aD51");const s=["components"],b={};void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!Object.prototype.hasOwnProperty.call(b,"__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/lib/components/Modal/README.mdx"}});const p={_frontmatter:b},m=d.a;function y(e){let{components:t}=e,n=Object(l.a)(e,s);return Object(i.b)(m,Object(o.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"modal"},"Modal"),Object(i.b)("p",null,"Modal allows prompting users to take or complete an action."),Object(i.b)("h2",{id:"basic-usage"},"Basic Usage"),Object(i.b)("p",null,"To implement the Modal component, you need to import it first:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalTitle,\n} from '@react-ui-org/react-ui';\n")),Object(i.b)("p",null,"And use it:"),Object(i.b)(r.c,{__position:0,__code:'() => {\n  const [modalOpen, setModalOpen] = React.useState(false)\n  const modalPrimaryButtonRef = React.useRef()\n  const modalCloseButtonRef = React.useRef()\n  return (\n    <>\n      <Button\n        label="Launch modal"\n        onClick={() => setModalOpen(true)}\n        priority="outline"\n      />\n      <div>\n        {modalOpen && (\n          <Modal\n            closeButtonRef={modalCloseButtonRef}\n            primaryButtonRef={modalPrimaryButtonRef}\n          >\n            <ModalHeader>\n              <ModalTitle>Delete the user?</ModalTitle>\n              <ModalCloseButton onClick={() => setModalOpen(false)} />\n            </ModalHeader>\n            <ModalBody>\n              <ModalContent>\n                <p>\n                  Do you really want to delete the user <code>admin</code>?\n                  This cannot be undone.\n                </p>\n              </ModalContent>\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                color="danger"\n                label="Delete"\n                onClick={() => setModalOpen(false)}\n                ref={modalPrimaryButtonRef}\n              />\n              <Button\n                label="Close"\n                onClick={() => setModalOpen(false)}\n                priority="outline"\n                ref={modalCloseButtonRef}\n              />\n            </ModalFooter>\n          </Modal>\n        )}\n      </div>\n    </>\n  )\n}',__scope:{props:n,DefaultLayout:d.a,Playground:r.c,Props:r.d,Button:u.c,FormLayout:u.j,Modal:u.n,ModalBody:u.o,ModalCloseButton:u.p,ModalContent:u.q,ModalFooter:u.r,ModalHeader:u.s,ModalTitle:u.t,ScrollView:u.y,TextField:u.F,Toolbar:u.I,ToolbarGroup:u.J,ToolbarItem:u.K,Icon:c.a,DefaultLayout:d.a,_frontmatter:b},mdxType:"Playground"},()=>{const[e,t]=a.useState(!1),n=a.useRef(),o=a.useRef();return Object(i.b)(a.Fragment,null,Object(i.b)(u.c,{label:"Launch modal",onClick:()=>t(!0),priority:"outline",mdxType:"Button"}),Object(i.b)("div",null,e&&Object(i.b)(u.n,{closeButtonRef:o,primaryButtonRef:n,mdxType:"Modal"},Object(i.b)(u.s,{mdxType:"ModalHeader"},Object(i.b)(u.t,{mdxType:"ModalTitle"},"Delete the user?"),Object(i.b)(u.p,{onClick:()=>t(!1),mdxType:"ModalCloseButton"})),Object(i.b)(u.o,{mdxType:"ModalBody"},Object(i.b)(u.q,{mdxType:"ModalContent"},Object(i.b)("p",null,"Do you really want to delete the user ",Object(i.b)("code",null,"admin"),"? This cannot be undone."))),Object(i.b)(u.r,{mdxType:"ModalFooter"},Object(i.b)(u.c,{color:"danger",label:"Delete",onClick:()=>t(!1),ref:n,mdxType:"Button"}),Object(i.b)(u.c,{label:"Close",onClick:()=>t(!1),priority:"outline",ref:o,mdxType:"Button"})))))}),Object(i.b)("p",null,"See ",Object(i.b)("a",{parentName:"p",href:"#api"},"API")," for all available options."),Object(i.b)("h2",{id:"general-guidelines"},"General Guidelines"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Use modals to ",Object(i.b)("strong",{parentName:"p"},"confirm an action,")," display a ",Object(i.b)("strong",{parentName:"p"},"blocking alert"),", or reveal\n",Object(i.b)("strong",{parentName:"p"},"contextual options or settings")," that cannot be displayed in line with the\nparent content.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"The title")," should communicate the ",Object(i.b)("strong",{parentName:"p"},"purpose of the modal")," rather than a\ngeneric text. Eg. “Delete the user?” tells more than “Are you sure?” or\n“Warning”.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Modal actions")," should correspond to the modal purpose, too. E.g. “Delete”\ntells better what happens rather than “OK”.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Modal ",Object(i.b)("strong",{parentName:"p"},"automatically focuses the first form field")," by default which allows\nusers to confirm the modal by hitting the enter key. When no field is found\nthen the primary button (in the footer) is focused. To turn this feature off,\nset the ",Object(i.b)("inlineCode",{parentName:"p"},"autofocus")," prop to ",Object(i.b)("inlineCode",{parentName:"p"},"false"),".")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Avoid stacking")," of modals. While it may technically work, the modal is just\nnot designed for that."))),Object(i.b)("h2",{id:"composition"},"Composition"),Object(i.b)("p",null,"Modal is decomposed into the following components:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#api"},"Modal"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#modalheader-1"},"ModalHeader"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#modaltitle"},"ModalTitle")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#modalclosebutton"},"ModalCloseButton")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#modalbody-1"},"ModalBody"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#modalcontent"},"ModalContent"),"\n(may be wrapped with ",Object(i.b)("a",{parentName:"li",href:"/components/scroll-view"},"ScrollView"),")"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#modalfooter-1"},"ModalFooter"))))),Object(i.b)("p",null,"Using different combinations, you can compose different kinds of modals,\ne.g. dialog modal, blocking modal, scrollable modal, etc."),Object(i.b)(r.c,{__position:1,__code:'() => {\n  const [modalOpen, setModalOpen] = React.useState(null)\n  const modalPrimaryButtonRef = React.useRef()\n  const modalCloseButtonRef = React.useRef()\n  return (\n    <>\n      <Button\n        label="Launch blocking modal without title"\n        onClick={() => {\n          setModalOpen(1)\n          setTimeout(() => setModalOpen(null), 2500)\n        }}\n        priority="outline"\n      />\n      <Button\n        label="Launch blocking modal with title"\n        onClick={() => {\n          setModalOpen(2)\n          setTimeout(() => setModalOpen(null), 3500)\n        }}\n        priority="outline"\n      />\n      <Button\n        label="Launch modal as dialog"\n        onClick={() => setModalOpen(3)}\n        priority="outline"\n      />\n      <Button\n        label="Launch modal as form"\n        onClick={() => setModalOpen(4)}\n        priority="outline"\n      />\n      <div>\n        {modalOpen === 1 && (\n          <Modal>\n            <ModalBody>\n              <ModalContent>\n                <p className="text-center">\n                  Application is being loaded.\n                  <span className="d-inline-flex align-items-center animation-spin-counterclockwise">\n                    <Icon icon="loading" />\n                  </span>\n                </p>\n              </ModalContent>\n            </ModalBody>\n          </Modal>\n        )}\n        {modalOpen === 2 && (\n          <Modal>\n            <ModalHeader>\n              <ModalTitle>Action finished</ModalTitle>\n            </ModalHeader>\n            <ModalBody>\n              <ModalContent>\n                <p>\n                  Action has been successfully finished. You will be\n                  redirected within a few seconds.\n                </p>\n              </ModalContent>\n            </ModalBody>\n          </Modal>\n        )}\n        {modalOpen === 3 && (\n          <Modal\n            closeButtonRef={modalCloseButtonRef}\n            primaryButtonRef={modalPrimaryButtonRef}\n          >\n            <ModalHeader>\n              <ModalTitle>Delete the user?</ModalTitle>\n              <ModalCloseButton onClick={() => setModalOpen(false)} />\n            </ModalHeader>\n            <ModalBody>\n              <ModalContent>\n                <p>\n                  Do you really want to delete the user <code>admin</code>?\n                  This cannot be undone.\n                </p>\n              </ModalContent>\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                color="danger"\n                label="Delete"\n                onClick={() => setModalOpen(false)}\n                ref={modalPrimaryButtonRef}\n              />\n              <Button\n                label="Close"\n                onClick={() => setModalOpen(false)}\n                priority="outline"\n                ref={modalCloseButtonRef}\n              />\n            </ModalFooter>\n          </Modal>\n        )}\n        {modalOpen === 4 && (\n          <Modal\n            closeButtonRef={modalCloseButtonRef}\n            primaryButtonRef={modalPrimaryButtonRef}\n          >\n            <ModalHeader>\n              <ModalTitle>Add new user</ModalTitle>\n              <ModalCloseButton onClick={() => setModalOpen(false)} />\n            </ModalHeader>\n            <ModalBody>\n              <ModalContent>\n                <FormLayout fieldLayout="horizontal">\n                  <TextField label="Username" />\n                  <TextField label="Password" type="password" />\n                </FormLayout>\n              </ModalContent>\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                label="Save"\n                onClick={() => setModalOpen(false)}\n                ref={modalPrimaryButtonRef}\n              />\n              <Button\n                label="Close"\n                onClick={() => setModalOpen(false)}\n                priority="outline"\n                ref={modalCloseButtonRef}\n              />\n            </ModalFooter>\n          </Modal>\n        )}\n      </div>\n    </>\n  )\n}',__scope:{props:n,DefaultLayout:d.a,Playground:r.c,Props:r.d,Button:u.c,FormLayout:u.j,Modal:u.n,ModalBody:u.o,ModalCloseButton:u.p,ModalContent:u.q,ModalFooter:u.r,ModalHeader:u.s,ModalTitle:u.t,ScrollView:u.y,TextField:u.F,Toolbar:u.I,ToolbarGroup:u.J,ToolbarItem:u.K,Icon:c.a,DefaultLayout:d.a,_frontmatter:b},mdxType:"Playground"},()=>{const[e,t]=a.useState(null),n=a.useRef(),o=a.useRef();return Object(i.b)(a.Fragment,null,Object(i.b)(u.c,{label:"Launch blocking modal without title",onClick:()=>{t(1),setTimeout(()=>t(null),2500)},priority:"outline",mdxType:"Button"}),Object(i.b)(u.c,{label:"Launch blocking modal with title",onClick:()=>{t(2),setTimeout(()=>t(null),3500)},priority:"outline",mdxType:"Button"}),Object(i.b)(u.c,{label:"Launch modal as dialog",onClick:()=>t(3),priority:"outline",mdxType:"Button"}),Object(i.b)(u.c,{label:"Launch modal as form",onClick:()=>t(4),priority:"outline",mdxType:"Button"}),Object(i.b)("div",null,1===e&&Object(i.b)(u.n,{mdxType:"Modal"},Object(i.b)(u.o,{mdxType:"ModalBody"},Object(i.b)(u.q,{mdxType:"ModalContent"},Object(i.b)("p",{className:"text-center"},"Application is being loaded.",Object(i.b)("span",{className:"d-inline-flex align-items-center animation-spin-counterclockwise"},Object(i.b)(c.a,{icon:"loading",mdxType:"Icon"})))))),2===e&&Object(i.b)(u.n,{mdxType:"Modal"},Object(i.b)(u.s,{mdxType:"ModalHeader"},Object(i.b)(u.t,{mdxType:"ModalTitle"},"Action finished")),Object(i.b)(u.o,{mdxType:"ModalBody"},Object(i.b)(u.q,{mdxType:"ModalContent"},Object(i.b)("p",null,"Action has been successfully finished. You will be redirected within a few seconds.")))),3===e&&Object(i.b)(u.n,{closeButtonRef:o,primaryButtonRef:n,mdxType:"Modal"},Object(i.b)(u.s,{mdxType:"ModalHeader"},Object(i.b)(u.t,{mdxType:"ModalTitle"},"Delete the user?"),Object(i.b)(u.p,{onClick:()=>t(!1),mdxType:"ModalCloseButton"})),Object(i.b)(u.o,{mdxType:"ModalBody"},Object(i.b)(u.q,{mdxType:"ModalContent"},Object(i.b)("p",null,"Do you really want to delete the user ",Object(i.b)("code",null,"admin"),"? This cannot be undone."))),Object(i.b)(u.r,{mdxType:"ModalFooter"},Object(i.b)(u.c,{color:"danger",label:"Delete",onClick:()=>t(!1),ref:n,mdxType:"Button"}),Object(i.b)(u.c,{label:"Close",onClick:()=>t(!1),priority:"outline",ref:o,mdxType:"Button"}))),4===e&&Object(i.b)(u.n,{closeButtonRef:o,primaryButtonRef:n,mdxType:"Modal"},Object(i.b)(u.s,{mdxType:"ModalHeader"},Object(i.b)(u.t,{mdxType:"ModalTitle"},"Add new user"),Object(i.b)(u.p,{onClick:()=>t(!1),mdxType:"ModalCloseButton"})),Object(i.b)(u.o,{mdxType:"ModalBody"},Object(i.b)(u.q,{mdxType:"ModalContent"},Object(i.b)(u.j,{fieldLayout:"horizontal",mdxType:"FormLayout"},Object(i.b)(u.F,{label:"Username",mdxType:"TextField"}),Object(i.b)(u.F,{label:"Password",type:"password",mdxType:"TextField"})))),Object(i.b)(u.r,{mdxType:"ModalFooter"},Object(i.b)(u.c,{label:"Save",onClick:()=>t(!1),ref:n,mdxType:"Button"}),Object(i.b)(u.c,{label:"Close",onClick:()=>t(!1),priority:"outline",ref:o,mdxType:"Button"})))))}),Object(i.b)("h3",{id:"modalheader"},"ModalHeader"),Object(i.b)("p",null,"ModalHeader is an optional part of the Modal which allows you to display the title\nof the modal and its close button."),Object(i.b)("p",null,"It is recommended to compose ModalHeader from the following elements. For title,\nuse ModalTitle. For the close button, use ModalCloseButton, however it can\nbe omitted if a close button is part of ModalFooter."),Object(i.b)("p",null,"There are two ways how to position elements within the ModalHeader:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"You can use provided positioning. Place previously mentioned elements into\nthe ModalHeader and use ",Object(i.b)("inlineCode",{parentName:"li"},"justify")," prop to set up the positioning of those\nelements."),Object(i.b)("li",{parentName:"ol"},"You can customize positioning using another component (e.g.\n",Object(i.b)("a",{parentName:"li",href:"/components/toolbar"},"Toolbar"),"). In that case, set ",Object(i.b)("inlineCode",{parentName:"li"},"justify")," to ",Object(i.b)("inlineCode",{parentName:"li"},"stretch")," and\nposition elements on your own.")),Object(i.b)(r.c,{__position:2,__code:'() => {\n  const [modalOpen, setModalOpen] = React.useState(false)\n  const [variant, setVariant] = React.useState(null)\n  const modalPrimaryButtonRef = React.useRef()\n  const modalCloseButtonRef = React.useRef()\n  return (\n    <>\n      <Button\n        label="Launch with close button"\n        onClick={() => {\n          setModalOpen(true)\n          setVariant(1)\n        }}\n        priority="outline"\n      />\n      <Button\n        label="Launch without close button"\n        onClick={() => {\n          setModalOpen(true)\n          setVariant(2)\n        }}\n        priority="outline"\n      />\n      <Button\n        label="Launch without close button and with centered title"\n        onClick={() => {\n          setModalOpen(true)\n          setVariant(3)\n        }}\n        priority="outline"\n      />\n      <Button\n        label="Launch with custom layout"\n        onClick={() => {\n          setModalOpen(true)\n          setVariant(4)\n        }}\n        priority="outline"\n      />\n      <div>\n        {modalOpen && (\n          <Modal\n            closeButtonRef={modalCloseButtonRef}\n            primaryButtonRef={modalPrimaryButtonRef}\n          >\n            {variant === 1 && (\n              <ModalHeader>\n                <ModalTitle>Delete the user?</ModalTitle>\n                <ModalCloseButton onClick={() => setModalOpen(false)} />\n              </ModalHeader>\n            )}\n            {variant === 2 && (\n              <ModalHeader>\n                <ModalTitle>Delete the user?</ModalTitle>\n              </ModalHeader>\n            )}\n            {variant === 3 && (\n              <ModalHeader justify="center">\n                <ModalTitle>Delete the user?</ModalTitle>\n              </ModalHeader>\n            )}\n            {variant === 4 && (\n              <ModalHeader justify="stretch">\n                <Toolbar justify="space-between">\n                  <ToolbarItem>{\'\'}</ToolbarItem>\n                  <ToolbarItem>\n                    <ModalTitle>Delete the user?</ModalTitle>\n                  </ToolbarItem>\n                  <ToolbarItem>\n                    <ModalCloseButton onClick={() => setModalOpen(false)} />\n                  </ToolbarItem>\n                </Toolbar>\n              </ModalHeader>\n            )}\n            <ModalBody>\n              <ModalContent>\n                <p>\n                  Do you really want to delete the user <code>admin</code>?\n                  This cannot be undone.\n                </p>\n              </ModalContent>\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                color="danger"\n                label="Delete"\n                onClick={() => setModalOpen(false)}\n                ref={modalPrimaryButtonRef}\n              />\n              <Button\n                label="Close"\n                onClick={() => setModalOpen(false)}\n                priority="outline"\n                ref={modalCloseButtonRef}\n              />\n            </ModalFooter>\n          </Modal>\n        )}\n      </div>\n    </>\n  )\n}',__scope:{props:n,DefaultLayout:d.a,Playground:r.c,Props:r.d,Button:u.c,FormLayout:u.j,Modal:u.n,ModalBody:u.o,ModalCloseButton:u.p,ModalContent:u.q,ModalFooter:u.r,ModalHeader:u.s,ModalTitle:u.t,ScrollView:u.y,TextField:u.F,Toolbar:u.I,ToolbarGroup:u.J,ToolbarItem:u.K,Icon:c.a,DefaultLayout:d.a,_frontmatter:b},mdxType:"Playground"},()=>{const[e,t]=a.useState(!1),[n,o]=a.useState(null),l=a.useRef(),d=a.useRef();return Object(i.b)(a.Fragment,null,Object(i.b)(u.c,{label:"Launch with close button",onClick:()=>{t(!0),o(1)},priority:"outline",mdxType:"Button"}),Object(i.b)(u.c,{label:"Launch without close button",onClick:()=>{t(!0),o(2)},priority:"outline",mdxType:"Button"}),Object(i.b)(u.c,{label:"Launch without close button and with centered title",onClick:()=>{t(!0),o(3)},priority:"outline",mdxType:"Button"}),Object(i.b)(u.c,{label:"Launch with custom layout",onClick:()=>{t(!0),o(4)},priority:"outline",mdxType:"Button"}),Object(i.b)("div",null,e&&Object(i.b)(u.n,{closeButtonRef:d,primaryButtonRef:l,mdxType:"Modal"},1===n&&Object(i.b)(u.s,{mdxType:"ModalHeader"},Object(i.b)(u.t,{mdxType:"ModalTitle"},"Delete the user?"),Object(i.b)(u.p,{onClick:()=>t(!1),mdxType:"ModalCloseButton"})),2===n&&Object(i.b)(u.s,{mdxType:"ModalHeader"},Object(i.b)(u.t,{mdxType:"ModalTitle"},"Delete the user?")),3===n&&Object(i.b)(u.s,{justify:"center",mdxType:"ModalHeader"},Object(i.b)(u.t,{mdxType:"ModalTitle"},"Delete the user?")),4===n&&Object(i.b)(u.s,{justify:"stretch",mdxType:"ModalHeader"},Object(i.b)(u.I,{justify:"space-between",mdxType:"Toolbar"},Object(i.b)(u.K,{mdxType:"ToolbarItem"},""),Object(i.b)(u.K,{mdxType:"ToolbarItem"},Object(i.b)(u.t,{mdxType:"ModalTitle"},"Delete the user?")),Object(i.b)(u.K,{mdxType:"ToolbarItem"},Object(i.b)(u.p,{onClick:()=>t(!1),mdxType:"ModalCloseButton"})))),Object(i.b)(u.o,{mdxType:"ModalBody"},Object(i.b)(u.q,{mdxType:"ModalContent"},Object(i.b)("p",null,"Do you really want to delete the user ",Object(i.b)("code",null,"admin"),"? This cannot be undone."))),Object(i.b)(u.r,{mdxType:"ModalFooter"},Object(i.b)(u.c,{color:"danger",label:"Delete",onClick:()=>t(!1),ref:l,mdxType:"Button"}),Object(i.b)(u.c,{label:"Close",onClick:()=>t(!1),priority:"outline",ref:d,mdxType:"Button"})))))}),Object(i.b)("h3",{id:"modalbody"},"ModalBody"),Object(i.b)("p",null,"ModalBody is a mandatory part of the Modal which allows you to display the\ncontent of the Modal."),Object(i.b)("p",null,"Although the ModalBody allows you to display arbitrary content, you should not\nplace content directly into the ModalBody, but wrap it with ModalContent first."),Object(i.b)("p",null,"In case your content is expected to be long, consider wrapping ModalContent\nwith ScrollView. Check ",Object(i.b)("a",{parentName:"p",href:"#scrolling-long-content"},"Scrolling Long Content")," section\nbelow."),Object(i.b)("h3",{id:"modalfooter"},"ModalFooter"),Object(i.b)("p",null,"ModalFooter is an optional part of the Modal which allows you to display\nuser actions."),Object(i.b)("p",null,"There are two ways to position buttons within the ModalFooter:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"You can use provided positioning. Place Button component (or any arbitrary\nelement) and use ",Object(i.b)("inlineCode",{parentName:"li"},"justify")," prop to set up the positioning of those elements."),Object(i.b)("li",{parentName:"ol"},"You can customize positioning using another component (e.g.\n",Object(i.b)("a",{parentName:"li",href:"/components/toolbar"},"Toolbar"),"). In that case, set ",Object(i.b)("inlineCode",{parentName:"li"},"justify")," to ",Object(i.b)("inlineCode",{parentName:"li"},"stretch"),"\nand position elements on your own.")),Object(i.b)(r.c,{__position:3,__code:'() => {\n  const [modalOpen, setModalOpen] = React.useState(false)\n  const [modalJustify, setModalJustify] = React.useState(\'center\')\n  const modalPrimaryButtonRef = React.useRef()\n  const modalCloseButtonRef = React.useRef()\n  return (\n    <>\n      <Button\n        label="Launch with footer justified to start"\n        onClick={() => {\n          setModalOpen(true)\n          setModalJustify(\'start\')\n        }}\n        priority="outline"\n      />\n      <Button\n        label="Launch with footer justified to center"\n        onClick={() => {\n          setModalOpen(true)\n          setModalJustify(\'center\')\n        }}\n        priority="outline"\n      />\n      <Button\n        label="Launch with footer justified to end"\n        onClick={() => {\n          setModalOpen(true)\n          setModalJustify(\'end\')\n        }}\n        priority="outline"\n      />\n      <Button\n        label="Launch with footer justified with space between"\n        onClick={() => {\n          setModalOpen(true)\n          setModalJustify(\'space-between\')\n        }}\n        priority="outline"\n      />\n      <Button\n        label="Launch with footer with custom layout"\n        onClick={() => {\n          setModalOpen(true)\n          setModalJustify(\'stretch\')\n        }}\n        priority="outline"\n      />\n      <div>\n        {modalOpen && (\n          <Modal\n            closeButtonRef={modalCloseButtonRef}\n            primaryButtonRef={modalPrimaryButtonRef}\n          >\n            <ModalHeader>\n              <ModalTitle>Delete the user?</ModalTitle>\n              <ModalCloseButton onClick={() => setModalOpen(false)} />\n            </ModalHeader>\n            <ModalBody>\n              <ModalContent>\n                <p>\n                  Do you really want to delete the user <code>admin</code>?\n                  This cannot be undone.\n                </p>\n              </ModalContent>\n            </ModalBody>\n            <ModalFooter justify={modalJustify}>\n              {modalJustify === \'stretch\' ? (\n                <Toolbar justify="space-between">\n                  <ToolbarGroup>\n                    <ToolbarItem>\n                      <Button\n                        color="danger"\n                        label="Delete"\n                        onClick={() => setModalOpen(false)}\n                        ref={modalPrimaryButtonRef}\n                      />\n                    </ToolbarItem>\n                    <ToolbarItem>\n                      <Button\n                        color="warning"\n                        label="Archive"\n                        onClick={() => setModalOpen(false)}\n                        ref={modalPrimaryButtonRef}\n                      />\n                    </ToolbarItem>\n                  </ToolbarGroup>\n                  <ToolbarItem>\n                    <Button\n                      label="Close"\n                      onClick={() => setModalOpen(false)}\n                      priority="outline"\n                      ref={modalCloseButtonRef}\n                    />\n                  </ToolbarItem>\n                </Toolbar>\n              ) : (\n                <>\n                  <Button\n                    color="danger"\n                    label="Delete"\n                    onClick={() => setModalOpen(false)}\n                    ref={modalPrimaryButtonRef}\n                  />\n                  <Button\n                    label="Close"\n                    onClick={() => setModalOpen(false)}\n                    priority="outline"\n                    ref={modalCloseButtonRef}\n                  />\n                </>\n              )}\n            </ModalFooter>\n          </Modal>\n        )}\n      </div>\n    </>\n  )\n}',__scope:{props:n,DefaultLayout:d.a,Playground:r.c,Props:r.d,Button:u.c,FormLayout:u.j,Modal:u.n,ModalBody:u.o,ModalCloseButton:u.p,ModalContent:u.q,ModalFooter:u.r,ModalHeader:u.s,ModalTitle:u.t,ScrollView:u.y,TextField:u.F,Toolbar:u.I,ToolbarGroup:u.J,ToolbarItem:u.K,Icon:c.a,DefaultLayout:d.a,_frontmatter:b},mdxType:"Playground"},()=>{const[e,t]=a.useState(!1),[n,o]=a.useState("center"),l=a.useRef(),d=a.useRef();return Object(i.b)(a.Fragment,null,Object(i.b)(u.c,{label:"Launch with footer justified to start",onClick:()=>{t(!0),o("start")},priority:"outline",mdxType:"Button"}),Object(i.b)(u.c,{label:"Launch with footer justified to center",onClick:()=>{t(!0),o("center")},priority:"outline",mdxType:"Button"}),Object(i.b)(u.c,{label:"Launch with footer justified to end",onClick:()=>{t(!0),o("end")},priority:"outline",mdxType:"Button"}),Object(i.b)(u.c,{label:"Launch with footer justified with space between",onClick:()=>{t(!0),o("space-between")},priority:"outline",mdxType:"Button"}),Object(i.b)(u.c,{label:"Launch with footer with custom layout",onClick:()=>{t(!0),o("stretch")},priority:"outline",mdxType:"Button"}),Object(i.b)("div",null,e&&Object(i.b)(u.n,{closeButtonRef:d,primaryButtonRef:l,mdxType:"Modal"},Object(i.b)(u.s,{mdxType:"ModalHeader"},Object(i.b)(u.t,{mdxType:"ModalTitle"},"Delete the user?"),Object(i.b)(u.p,{onClick:()=>t(!1),mdxType:"ModalCloseButton"})),Object(i.b)(u.o,{mdxType:"ModalBody"},Object(i.b)(u.q,{mdxType:"ModalContent"},Object(i.b)("p",null,"Do you really want to delete the user ",Object(i.b)("code",null,"admin"),"? This cannot be undone."))),Object(i.b)(u.r,{justify:n,mdxType:"ModalFooter"},"stretch"===n?Object(i.b)(u.I,{justify:"space-between",mdxType:"Toolbar"},Object(i.b)(u.J,{mdxType:"ToolbarGroup"},Object(i.b)(u.K,{mdxType:"ToolbarItem"},Object(i.b)(u.c,{color:"danger",label:"Delete",onClick:()=>t(!1),ref:l,mdxType:"Button"})),Object(i.b)(u.K,{mdxType:"ToolbarItem"},Object(i.b)(u.c,{color:"warning",label:"Archive",onClick:()=>t(!1),ref:l,mdxType:"Button"}))),Object(i.b)(u.K,{mdxType:"ToolbarItem"},Object(i.b)(u.c,{label:"Close",onClick:()=>t(!1),priority:"outline",ref:d,mdxType:"Button"}))):Object(i.b)(a.Fragment,null,Object(i.b)(u.c,{color:"danger",label:"Delete",onClick:()=>t(!1),ref:l,mdxType:"Button"}),Object(i.b)(u.c,{label:"Close",onClick:()=>t(!1),priority:"outline",ref:d,mdxType:"Button"}))))))}),Object(i.b)("h2",{id:"sizes"},"Sizes"),Object(i.b)("p",null,"Modal is available in three fixed-width sizes: small, medium, large and fullscreen.\nModals of any size automatically shrink when they cannot fit the screen width."),Object(i.b)(r.c,{__position:4,__code:'() => {\n  const [modalOpen, setModalOpen] = React.useState(false)\n  const [modalSize, setModalSize] = React.useState(\'small\')\n  const modalPrimaryButtonRef = React.useRef()\n  const modalCloseButtonRef = React.useRef()\n  return (\n    <>\n      <Button\n        label="Launch small modal"\n        onClick={() => {\n          setModalSize(\'small\')\n          setModalOpen(true)\n        }}\n        priority="outline"\n      />\n      <Button\n        label="Launch medium modal"\n        onClick={() => {\n          setModalSize(\'medium\')\n          setModalOpen(true)\n        }}\n        priority="outline"\n      />\n      <Button\n        label="Launch large modal"\n        onClick={() => {\n          setModalSize(\'large\')\n          setModalOpen(true)\n        }}\n        priority="outline"\n      />\n      <Button\n        label="Launch fullscreen modal"\n        onClick={() => {\n          setModalSize(\'fullscreen\')\n          setModalOpen(true)\n        }}\n        priority="outline"\n      />\n      <div>\n        {modalOpen && (\n          <Modal\n            closeButtonRef={modalCloseButtonRef}\n            primaryButtonRef={modalPrimaryButtonRef}\n            size={modalSize}\n          >\n            <ModalHeader>\n              <ModalTitle>Delete the user?</ModalTitle>\n              <ModalCloseButton onClick={() => setModalOpen(false)} />\n            </ModalHeader>\n            <ModalBody>\n              <ModalContent>\n                <p>\n                  Do you really want to delete the user <code>admin</code>?\n                  This cannot be undone.\n                </p>\n              </ModalContent>\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                color="danger"\n                label="Delete"\n                onClick={() => setModalOpen(false)}\n                ref={modalPrimaryButtonRef}\n              />\n              <Button\n                label="Close"\n                onClick={() => setModalOpen(false)}\n                priority="outline"\n                ref={modalCloseButtonRef}\n              />\n            </ModalFooter>\n          </Modal>\n        )}\n      </div>\n    </>\n  )\n}',__scope:{props:n,DefaultLayout:d.a,Playground:r.c,Props:r.d,Button:u.c,FormLayout:u.j,Modal:u.n,ModalBody:u.o,ModalCloseButton:u.p,ModalContent:u.q,ModalFooter:u.r,ModalHeader:u.s,ModalTitle:u.t,ScrollView:u.y,TextField:u.F,Toolbar:u.I,ToolbarGroup:u.J,ToolbarItem:u.K,Icon:c.a,DefaultLayout:d.a,_frontmatter:b},mdxType:"Playground"},()=>{const[e,t]=a.useState(!1),[n,o]=a.useState("small"),l=a.useRef(),d=a.useRef();return Object(i.b)(a.Fragment,null,Object(i.b)(u.c,{label:"Launch small modal",onClick:()=>{o("small"),t(!0)},priority:"outline",mdxType:"Button"}),Object(i.b)(u.c,{label:"Launch medium modal",onClick:()=>{o("medium"),t(!0)},priority:"outline",mdxType:"Button"}),Object(i.b)(u.c,{label:"Launch large modal",onClick:()=>{o("large"),t(!0)},priority:"outline",mdxType:"Button"}),Object(i.b)(u.c,{label:"Launch fullscreen modal",onClick:()=>{o("fullscreen"),t(!0)},priority:"outline",mdxType:"Button"}),Object(i.b)("div",null,e&&Object(i.b)(u.n,{closeButtonRef:d,primaryButtonRef:l,size:n,mdxType:"Modal"},Object(i.b)(u.s,{mdxType:"ModalHeader"},Object(i.b)(u.t,{mdxType:"ModalTitle"},"Delete the user?"),Object(i.b)(u.p,{onClick:()=>t(!1),mdxType:"ModalCloseButton"})),Object(i.b)(u.o,{mdxType:"ModalBody"},Object(i.b)(u.q,{mdxType:"ModalContent"},Object(i.b)("p",null,"Do you really want to delete the user ",Object(i.b)("code",null,"admin"),"? This cannot be undone."))),Object(i.b)(u.r,{mdxType:"ModalFooter"},Object(i.b)(u.c,{color:"danger",label:"Delete",onClick:()=>t(!1),ref:l,mdxType:"Button"}),Object(i.b)(u.c,{label:"Close",onClick:()=>t(!1),priority:"outline",ref:d,mdxType:"Button"})))))}),Object(i.b)("p",null,"On top of that, the modal can adjust to the width of its content."),Object(i.b)(r.c,{__position:5,__code:'() => {\n  const [modalOpen, setModalOpen] = React.useState(false)\n  const modalPrimaryButtonRef = React.useRef()\n  const modalCloseButtonRef = React.useRef()\n  return (\n    <>\n      <Button\n        label="Launch auto-width modal"\n        onClick={() => setModalOpen(true)}\n        priority="outline"\n      />\n      <div>\n        {modalOpen && (\n          <Modal\n            closeButtonRef={modalCloseButtonRef}\n            primaryButtonRef={modalPrimaryButtonRef}\n            size="auto"\n          >\n            <ModalHeader>\n              <ModalTitle>Delete the user?</ModalTitle>\n              <ModalCloseButton onClick={() => setModalOpen(false)} />\n            </ModalHeader>\n            <ModalBody>\n              <ModalContent>\n                <p>\n                  Do you really want to delete the user <code>admin</code>?\n                  This cannot be undone.\n                </p>\n              </ModalContent>\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                color="danger"\n                label="Delete"\n                onClick={() => setModalOpen(false)}\n                ref={modalPrimaryButtonRef}\n              />\n              <Button\n                label="Close"\n                onClick={() => setModalOpen(false)}\n                priority="outline"\n                ref={modalCloseButtonRef}\n              />\n            </ModalFooter>\n          </Modal>\n        )}\n      </div>\n    </>\n  )\n}',__scope:{props:n,DefaultLayout:d.a,Playground:r.c,Props:r.d,Button:u.c,FormLayout:u.j,Modal:u.n,ModalBody:u.o,ModalCloseButton:u.p,ModalContent:u.q,ModalFooter:u.r,ModalHeader:u.s,ModalTitle:u.t,ScrollView:u.y,TextField:u.F,Toolbar:u.I,ToolbarGroup:u.J,ToolbarItem:u.K,Icon:c.a,DefaultLayout:d.a,_frontmatter:b},mdxType:"Playground"},()=>{const[e,t]=a.useState(!1),n=a.useRef(),o=a.useRef();return Object(i.b)(a.Fragment,null,Object(i.b)(u.c,{label:"Launch auto-width modal",onClick:()=>t(!0),priority:"outline",mdxType:"Button"}),Object(i.b)("div",null,e&&Object(i.b)(u.n,{closeButtonRef:o,primaryButtonRef:n,size:"auto",mdxType:"Modal"},Object(i.b)(u.s,{mdxType:"ModalHeader"},Object(i.b)(u.t,{mdxType:"ModalTitle"},"Delete the user?"),Object(i.b)(u.p,{onClick:()=>t(!1),mdxType:"ModalCloseButton"})),Object(i.b)(u.o,{mdxType:"ModalBody"},Object(i.b)(u.q,{mdxType:"ModalContent"},Object(i.b)("p",null,"Do you really want to delete the user ",Object(i.b)("code",null,"admin"),"? This cannot be undone."))),Object(i.b)(u.r,{mdxType:"ModalFooter"},Object(i.b)(u.c,{color:"danger",label:"Delete",onClick:()=>t(!1),ref:n,mdxType:"Button"}),Object(i.b)(u.c,{label:"Close",onClick:()=>t(!1),priority:"outline",ref:o,mdxType:"Button"})))))}),Object(i.b)("p",null,"👉 Please note the auto width may not function correctly in combination with\nother auto-layout mechanisms, e.g. the auto-width\n",Object(i.b)("a",{parentName:"p",href:"/components/form-layout#label-width"},"FormLayout"),". It's just too much\nmagic that doesn't work together (yet?) 🎩."),Object(i.b)("p",null,"👉 Beware of horizontal FormLayout inside ",Object(i.b)("inlineCode",{parentName:"p"},"small")," modals. While automatic\noverflow handling comes to the rescue in this kind of scenario, you will be\nbetter off with the combination of auto-sized modal and horizontal FormLayout\nwith a fixed label width (i.e. any other than ",Object(i.b)("inlineCode",{parentName:"p"},"auto"),", see the previous note)."),Object(i.b)(r.c,{__position:6,__code:'() => {\n  const [modalOpen, setModalOpen] = React.useState(false)\n  const modalPrimaryButtonRef = React.useRef()\n  const modalCloseButtonRef = React.useRef()\n  return (\n    <>\n      <Button\n        label="Launch auto-with modal with a form"\n        onClick={() => setModalOpen(true)}\n        priority="outline"\n      />\n      <div>\n        {modalOpen && (\n          <Modal\n            closeButtonRef={modalCloseButtonRef}\n            primaryButtonRef={modalPrimaryButtonRef}\n            size="auto"\n          >\n            <ModalHeader>\n              <ModalTitle>Form inside modal</ModalTitle>\n              <ModalCloseButton onClick={() => setModalOpen(false)} />\n            </ModalHeader>\n            <ModalBody>\n              <ModalContent>\n                <FormLayout fieldLayout="horizontal">\n                  <TextField label="A form element" />\n                  <TextField label="Another form element" />\n                  <TextField label="Yet another one" />\n                </FormLayout>\n              </ModalContent>\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                color="primary"\n                label="Save"\n                onClick={() => setModalOpen(false)}\n                ref={modalPrimaryButtonRef}\n              />\n              <Button\n                label="Cancel"\n                onClick={() => setModalOpen(false)}\n                priority="outline"\n                ref={modalCloseButtonRef}\n              />\n            </ModalFooter>\n          </Modal>\n        )}\n      </div>\n    </>\n  )\n}',__scope:{props:n,DefaultLayout:d.a,Playground:r.c,Props:r.d,Button:u.c,FormLayout:u.j,Modal:u.n,ModalBody:u.o,ModalCloseButton:u.p,ModalContent:u.q,ModalFooter:u.r,ModalHeader:u.s,ModalTitle:u.t,ScrollView:u.y,TextField:u.F,Toolbar:u.I,ToolbarGroup:u.J,ToolbarItem:u.K,Icon:c.a,DefaultLayout:d.a,_frontmatter:b},mdxType:"Playground"},()=>{const[e,t]=a.useState(!1),n=a.useRef(),o=a.useRef();return Object(i.b)(a.Fragment,null,Object(i.b)(u.c,{label:"Launch auto-with modal with a form",onClick:()=>t(!0),priority:"outline",mdxType:"Button"}),Object(i.b)("div",null,e&&Object(i.b)(u.n,{closeButtonRef:o,primaryButtonRef:n,size:"auto",mdxType:"Modal"},Object(i.b)(u.s,{mdxType:"ModalHeader"},Object(i.b)(u.t,{mdxType:"ModalTitle"},"Form inside modal"),Object(i.b)(u.p,{onClick:()=>t(!1),mdxType:"ModalCloseButton"})),Object(i.b)(u.o,{mdxType:"ModalBody"},Object(i.b)(u.q,{mdxType:"ModalContent"},Object(i.b)(u.j,{fieldLayout:"horizontal",mdxType:"FormLayout"},Object(i.b)(u.F,{label:"A form element",mdxType:"TextField"}),Object(i.b)(u.F,{label:"Another form element",mdxType:"TextField"}),Object(i.b)(u.F,{label:"Yet another one",mdxType:"TextField"})))),Object(i.b)(u.r,{mdxType:"ModalFooter"},Object(i.b)(u.c,{color:"primary",label:"Save",onClick:()=>t(!1),ref:n,mdxType:"Button"}),Object(i.b)(u.c,{label:"Cancel",onClick:()=>t(!1),priority:"outline",ref:o,mdxType:"Button"})))))}),Object(i.b)("h2",{id:"position"},"Position"),Object(i.b)("p",null,"Modal can be aligned either to the top or center of the screen."),Object(i.b)(r.c,{__position:7,__code:'() => {\n  const [modalOpen, setModalOpen] = React.useState(false)\n  const [modalPosition, setModalPosition] = React.useState(\'center\')\n  const modalPrimaryButtonRef = React.useRef()\n  const modalCloseButtonRef = React.useRef()\n  return (\n    <>\n      <Button\n        label="Launch modal at center"\n        onClick={() => {\n          setModalPosition(\'center\')\n          setModalOpen(true)\n        }}\n        priority="outline"\n      />\n      <Button\n        label="Launch modal at top"\n        onClick={() => {\n          setModalPosition(\'top\')\n          setModalOpen(true)\n        }}\n        priority="outline"\n      />\n      <div>\n        {modalOpen && (\n          <Modal\n            closeButtonRef={modalCloseButtonRef}\n            position={modalPosition}\n            primaryButtonRef={modalPrimaryButtonRef}\n          >\n            <ModalHeader>\n              <ModalTitle>Delete the user?</ModalTitle>\n              <ModalCloseButton onClick={() => setModalOpen(false)} />\n            </ModalHeader>\n            <ModalBody>\n              <ModalContent>\n                <p>\n                  Do you really want to delete the user <code>admin</code>?\n                  This cannot be undone.\n                </p>\n              </ModalContent>\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                color="danger"\n                label="Delete"\n                onClick={() => setModalOpen(false)}\n                ref={modalPrimaryButtonRef}\n              />\n              <Button\n                label="Close"\n                onClick={() => setModalOpen(false)}\n                priority="outline"\n                ref={modalCloseButtonRef}\n              />\n            </ModalFooter>\n          </Modal>\n        )}\n      </div>\n    </>\n  )\n}',__scope:{props:n,DefaultLayout:d.a,Playground:r.c,Props:r.d,Button:u.c,FormLayout:u.j,Modal:u.n,ModalBody:u.o,ModalCloseButton:u.p,ModalContent:u.q,ModalFooter:u.r,ModalHeader:u.s,ModalTitle:u.t,ScrollView:u.y,TextField:u.F,Toolbar:u.I,ToolbarGroup:u.J,ToolbarItem:u.K,Icon:c.a,DefaultLayout:d.a,_frontmatter:b},mdxType:"Playground"},()=>{const[e,t]=a.useState(!1),[n,o]=a.useState("center"),l=a.useRef(),d=a.useRef();return Object(i.b)(a.Fragment,null,Object(i.b)(u.c,{label:"Launch modal at center",onClick:()=>{o("center"),t(!0)},priority:"outline",mdxType:"Button"}),Object(i.b)(u.c,{label:"Launch modal at top",onClick:()=>{o("top"),t(!0)},priority:"outline",mdxType:"Button"}),Object(i.b)("div",null,e&&Object(i.b)(u.n,{closeButtonRef:d,position:n,primaryButtonRef:l,mdxType:"Modal"},Object(i.b)(u.s,{mdxType:"ModalHeader"},Object(i.b)(u.t,{mdxType:"ModalTitle"},"Delete the user?"),Object(i.b)(u.p,{onClick:()=>t(!1),mdxType:"ModalCloseButton"})),Object(i.b)(u.o,{mdxType:"ModalBody"},Object(i.b)(u.q,{mdxType:"ModalContent"},Object(i.b)("p",null,"Do you really want to delete the user ",Object(i.b)("code",null,"admin"),"? This cannot be undone."))),Object(i.b)(u.r,{mdxType:"ModalFooter"},Object(i.b)(u.c,{color:"danger",label:"Delete",onClick:()=>t(!1),ref:l,mdxType:"Button"}),Object(i.b)(u.c,{label:"Close",onClick:()=>t(!1),priority:"outline",ref:d,mdxType:"Button"})))))}),Object(i.b)("h2",{id:"keyboard-control"},"Keyboard Control"),Object(i.b)("p",null,"Modal can be controlled either by mouse or keyboard. To enhance user\nexperience, primary action can be fired by pressing ",Object(i.b)("inlineCode",{parentName:"p"},"Enter")," key and the modal\ncan be closed by pressing the ",Object(i.b)("inlineCode",{parentName:"p"},"Escape")," key."),Object(i.b)("p",null,"To enable it, you just need to pass a reference to the buttons using\n",Object(i.b)("inlineCode",{parentName:"p"},"primaryButtonRef")," and ",Object(i.b)("inlineCode",{parentName:"p"},"closeButtonRef")," props on Modal. The advantage of passing\na reference to the button is that if the button is disabled, the key press will\nnot fire the event."),Object(i.b)("p",null,"👉 We strongly recommend using this feature together with Autofocus for a better\nuser experience."),Object(i.b)("h2",{id:"autofocus"},"Autofocus"),Object(i.b)("p",null,"Autofocus is implemented to enhance the user experience by automatically\nfocussing an element within the modal."),Object(i.b)("p",null,"How does it work? It tries to find ",Object(i.b)("inlineCode",{parentName:"p"},"input"),", ",Object(i.b)("inlineCode",{parentName:"p"},"textarea"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"select")," elements\ninside of Modal and moves focus into the first found. If none is found and the\n",Object(i.b)("inlineCode",{parentName:"p"},"primaryButtonRef")," prop on Modal is set, then the primary button is focused."),Object(i.b)("p",null,"Autofocus is enabled by default, so if you want to control the focus of\nelements manually, set the ",Object(i.b)("inlineCode",{parentName:"p"},"autoFocus")," prop on Modal to ",Object(i.b)("inlineCode",{parentName:"p"},"false"),"."),Object(i.b)("h2",{id:"scrolling-long-content"},"Scrolling Long Content"),Object(i.b)("p",null,"When modals become too long for the user's viewport or device, they scroll\nindependent of the page itself. This can be done in three ways using the\n",Object(i.b)("inlineCode",{parentName:"p"},"scrolling")," option of the ModalBody component:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"auto")," (default) — ModalBody is responsible for scrolling,"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"custom")," — you must provide a custom component to handle scrolling,\ntypically an instance of ",Object(i.b)("a",{parentName:"li",href:"/components/scroll-view"},"ScrollView")," wrapping\nModalContent,"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"none")," — entire Modal is responsible for scrolling.")),Object(i.b)(r.c,{__position:8,__code:'() => {\n  const [modalOpen, setModalOpen] = React.useState(false)\n  const [modalScrolling, setModalScrolling] = React.useState(\'auto\')\n  const modalCloseButtonRef = React.useRef()\n  const modalPrimaryButtonRef = React.useRef()\n  const modalContent = (\n    <ModalContent>\n      <p>\n        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\n        commodo ligula eget dolor. Aenean massa.\n      </p>\n      <p>\n        Cum sociis natoque penatibus et magnis dis parturient montes, nascetur\n        ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu,\n        pretium quis, sem.\n      </p>\n      <p>\n        Nulla consequat massa quis enim. Donec pede justo, fringilla vel,\n        aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut,\n        imperdiet a, venenatis vitae, justo.\n      </p>\n      <p>\n        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\n        commodo ligula eget dolor. Aenean massa.\n      </p>\n      <p>\n        Cum sociis natoque penatibus et magnis dis parturient montes, nascetur\n        ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu,\n        pretium quis, sem.\n      </p>\n      <p>\n        Nulla consequat massa quis enim. Donec pede justo, fringilla vel,\n        aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut,\n        imperdiet a, venenatis vitae, justo.\n      </p>\n      <p>\n        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\n        commodo ligula eget dolor. Aenean massa.\n      </p>\n      <p>\n        Cum sociis natoque penatibus et magnis dis parturient montes, nascetur\n        ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu,\n        pretium quis, sem.\n      </p>\n      <p>\n        Nulla consequat massa quis enim. Donec pede justo, fringilla vel,\n        aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut,\n        imperdiet a, venenatis vitae, justo.\n      </p>\n      <p>\n        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\n        commodo ligula eget dolor. Aenean massa.\n      </p>\n      <p>\n        Cum sociis natoque penatibus et magnis dis parturient montes, nascetur\n        ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu,\n        pretium quis, sem.\n      </p>\n      <p>\n        Nulla consequat massa quis enim. Donec pede justo, fringilla vel,\n        aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut,\n        imperdiet a, venenatis vitae, justo.\n      </p>\n      <p>\n        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\n        commodo ligula eget dolor. Aenean massa.\n      </p>\n      <p>\n        Cum sociis natoque penatibus et magnis dis parturient montes, nascetur\n        ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu,\n        pretium quis, sem.\n      </p>\n      <p>\n        Nulla consequat massa quis enim. Donec pede justo, fringilla vel,\n        aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut,\n        imperdiet a, venenatis vitae, justo.\n      </p>\n    </ModalContent>\n  )\n  return (\n    <>\n      <Button\n        label="Launch modal with scrolling body"\n        onClick={() => {\n          setModalScrolling(\'auto\')\n          setModalOpen(true)\n        }}\n        priority="outline"\n      />\n      <Button\n        label="Launch modal with ScrollView"\n        onClick={() => {\n          setModalScrolling(\'custom\')\n          setModalOpen(true)\n        }}\n        priority="outline"\n      />\n      <Button\n        label="Launch modal with non-scrolling body"\n        onClick={() => {\n          setModalScrolling(\'none\')\n          setModalOpen(true)\n        }}\n        priority="outline"\n      />\n      <div>\n        {modalOpen && (\n          <Modal\n            autoFocus={false}\n            closeButtonRef={modalCloseButtonRef}\n            primaryButtonRef={modalPrimaryButtonRef}\n            size="small"\n          >\n            <ModalHeader>\n              <ModalTitle>Modal with long content</ModalTitle>\n              <ModalCloseButton onClick={() => setModalOpen(false)} />\n            </ModalHeader>\n            <ModalBody scrolling={modalScrolling}>\n              {modalScrolling === \'custom\' ? (\n                <ScrollView>{modalContent}</ScrollView>\n              ) : (\n                modalContent\n              )}\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                label="OK"\n                onClick={() => setModalOpen(false)}\n                ref={modalPrimaryButtonRef}\n              />\n              <Button\n                label="Close"\n                onClick={() => setModalOpen(false)}\n                priority="outline"\n                ref={modalCloseButtonRef}\n              />\n            </ModalFooter>\n          </Modal>\n        )}\n      </div>\n    </>\n  )\n}',__scope:{props:n,DefaultLayout:d.a,Playground:r.c,Props:r.d,Button:u.c,FormLayout:u.j,Modal:u.n,ModalBody:u.o,ModalCloseButton:u.p,ModalContent:u.q,ModalFooter:u.r,ModalHeader:u.s,ModalTitle:u.t,ScrollView:u.y,TextField:u.F,Toolbar:u.I,ToolbarGroup:u.J,ToolbarItem:u.K,Icon:c.a,DefaultLayout:d.a,_frontmatter:b},mdxType:"Playground"},()=>{const[e,t]=a.useState(!1),[n,o]=a.useState("auto"),l=a.useRef(),d=a.useRef(),r=Object(i.b)(u.q,{mdxType:"ModalContent"},Object(i.b)("p",null,"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa."),Object(i.b)("p",null,"Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem."),Object(i.b)("p",null,"Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo."),Object(i.b)("p",null,"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa."),Object(i.b)("p",null,"Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem."),Object(i.b)("p",null,"Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo."),Object(i.b)("p",null,"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa."),Object(i.b)("p",null,"Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem."),Object(i.b)("p",null,"Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo."),Object(i.b)("p",null,"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa."),Object(i.b)("p",null,"Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem."),Object(i.b)("p",null,"Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo."),Object(i.b)("p",null,"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa."),Object(i.b)("p",null,"Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem."),Object(i.b)("p",null,"Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo."));return Object(i.b)(a.Fragment,null,Object(i.b)(u.c,{label:"Launch modal with scrolling body",onClick:()=>{o("auto"),t(!0)},priority:"outline",mdxType:"Button"}),Object(i.b)(u.c,{label:"Launch modal with ScrollView",onClick:()=>{o("custom"),t(!0)},priority:"outline",mdxType:"Button"}),Object(i.b)(u.c,{label:"Launch modal with non-scrolling body",onClick:()=>{o("none"),t(!0)},priority:"outline",mdxType:"Button"}),Object(i.b)("div",null,e&&Object(i.b)(u.n,{autoFocus:!1,closeButtonRef:l,primaryButtonRef:d,size:"small",mdxType:"Modal"},Object(i.b)(u.s,{mdxType:"ModalHeader"},Object(i.b)(u.t,{mdxType:"ModalTitle"},"Modal with long content"),Object(i.b)(u.p,{onClick:()=>t(!1),mdxType:"ModalCloseButton"})),Object(i.b)(u.o,{scrolling:n,mdxType:"ModalBody"},"custom"===n?Object(i.b)(u.y,{mdxType:"ScrollView"},r):r),Object(i.b)(u.r,{mdxType:"ModalFooter"},Object(i.b)(u.c,{label:"OK",onClick:()=>t(!1),ref:d,mdxType:"Button"}),Object(i.b)(u.c,{label:"Close",onClick:()=>t(!1),priority:"outline",ref:l,mdxType:"Button"})))))}),Object(i.b)("h3",{id:"long-content-and-autofocus"},"Long Content and Autofocus"),Object(i.b)("p",null,"👉 If you wrap ModalContent with ScrollView, you may want to turn ",Object(i.b)("inlineCode",{parentName:"p"},"autoFocus"),"\noff to prevent the modal from scrolling to the end immediately after being\nopened."),Object(i.b)("h2",{id:"api"},"API"),Object(i.b)(r.d,{table:!0,of:u.n,mdxType:"Props"}),Object(i.b)("h3",{id:"modalheader-1"},"ModalHeader"),Object(i.b)(r.d,{table:!0,of:u.s,mdxType:"Props"}),Object(i.b)("h3",{id:"modaltitle"},"ModalTitle"),Object(i.b)(r.d,{table:!0,of:u.t,mdxType:"Props"}),Object(i.b)("h3",{id:"modalclosebutton"},"ModalCloseButton"),Object(i.b)(r.d,{table:!0,of:u.p,mdxType:"Props"}),Object(i.b)("h3",{id:"modalbody-1"},"ModalBody"),Object(i.b)(r.d,{table:!0,of:u.o,mdxType:"Props"}),Object(i.b)("h3",{id:"modalcontent"},"ModalContent"),Object(i.b)(r.d,{table:!0,of:u.q,mdxType:"Props"}),Object(i.b)("h3",{id:"modalfooter-1"},"ModalFooter"),Object(i.b)(r.d,{table:!0,of:u.r,mdxType:"Props"}),Object(i.b)("h2",{id:"theming"},"Theming"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Custom Property"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal__padding-x")),Object(i.b)("td",{parentName:"tr",align:null},"Inline padding of individual modal components")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal__padding-y")),Object(i.b)("td",{parentName:"tr",align:null},"Block padding of individual modal components")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal__background")),Object(i.b)("td",{parentName:"tr",align:null},"Modal background (including ",Object(i.b)("inlineCode",{parentName:"td"},"url()")," or gradient)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal__box-shadow")),Object(i.b)("td",{parentName:"tr",align:null},"Modal box shadow")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal__separator__width")),Object(i.b)("td",{parentName:"tr",align:null},"Width of separator between modal header, body, and footer")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal__separator__color")),Object(i.b)("td",{parentName:"tr",align:null},"Color of separator between modal header, body, and footer")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal__outer-spacing-xs")),Object(i.b)("td",{parentName:"tr",align:null},"Spacing around modal, ",Object(i.b)("inlineCode",{parentName:"td"},"xs")," screen size")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal__outer-spacing-sm")),Object(i.b)("td",{parentName:"tr",align:null},"Spacing around modal, ",Object(i.b)("inlineCode",{parentName:"td"},"sm")," screen size and bigger")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal__header__gap")),Object(i.b)("td",{parentName:"tr",align:null},"Modal header gap between children")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal__footer__background")),Object(i.b)("td",{parentName:"tr",align:null},"Modal footer background (including ",Object(i.b)("inlineCode",{parentName:"td"},"url()")," or gradient)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal__footer__gap")),Object(i.b)("td",{parentName:"tr",align:null},"Modal footer gap between children")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal__backdrop__background")),Object(i.b)("td",{parentName:"tr",align:null},"Modal backdrop background (including ",Object(i.b)("inlineCode",{parentName:"td"},"url()")," or gradient)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal--auto__min-width")),Object(i.b)("td",{parentName:"tr",align:null},"Min width of auto-sized modal (when enough screen estate)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal--auto__max-width")),Object(i.b)("td",{parentName:"tr",align:null},"Max width of auto-sized modal (when enough screen estate)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal--small__width")),Object(i.b)("td",{parentName:"tr",align:null},"Width of small modal")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal--medium__width")),Object(i.b)("td",{parentName:"tr",align:null},"Width of medium modal")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal--large__width")),Object(i.b)("td",{parentName:"tr",align:null},"Width of large modal")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal--fullscreen__width")),Object(i.b)("td",{parentName:"tr",align:null},"Width of fullscreen modal")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"--rui-Modal--fullscreen__height")),Object(i.b)("td",{parentName:"tr",align:null},"Height of fullscreen modal")))))}void 0!==y&&y&&y===Object(y)&&Object.isExtensible(y)&&!Object.prototype.hasOwnProperty.call(y,"__filemeta")&&Object.defineProperty(y,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/lib/components/Modal/README.mdx"}}),y.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-lib-components-modal-readme-mdx-ac8a03d4d2455a9b4b2f.js.map