(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{Ejz6:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return p})),n.d(t,"default",(function(){return O}));var o=n("Fcif"),a=n("dV/x"),l=(n("mXGw"),n("/FXl")),i=n("TjRS"),b=n("ZFoC"),r=n("R5VZ"),c=n("hK9s"),d=n("uQiE"),u=n("QIWs");n("aD51");const s=["components"],p={};void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!Object.prototype.hasOwnProperty.call(p,"__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/lib/components/Button/README.mdx"}});const m={_frontmatter:p},y=i.a;function O(e){let{components:t}=e,n=Object(a.a)(e,s);return Object(l.b)(y,Object(o.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"button"},"Button"),Object(l.b)("p",null,"Buttons allow users to take actions."),Object(l.b)("h2",{id:"basic-usage"},"Basic Usage"),Object(l.b)("p",null,"To implement the Button component, you need to import it first:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"import { Button } from '@react-ui-org/react-ui';\n")),Object(l.b)("p",null,"And use it:"),Object(l.b)(b.c,{__position:0,__code:'<Button label="My button" />',__scope:{props:n,DefaultLayout:i.a,Playground:b.c,Props:b.d,Icon:r.a,Placeholder:c.a,Badge:d.a,Button:u.a,DefaultLayout:i.a,_frontmatter:p},mdxType:"Playground"},Object(l.b)(u.a,{label:"My button",mdxType:"Button"})),Object(l.b)("p",null,"See ",Object(l.b)("a",{parentName:"p",href:"#api"},"API")," for all available options."),Object(l.b)("h2",{id:"general-guidelines"},"General Guidelines"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Use ",Object(l.b)("strong",{parentName:"p"},"short yet comprehensible labels")," to make buttons fit small screens.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Since buttons are there to take actions, ",Object(l.b)("strong",{parentName:"p"},"use a verb")," to make it obvious\nwhat your buttons do.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Don't overwhelm your UI")," with too many high-emphasis actions. There should\nalways be one but chances are that having more of them is not necessary."))),Object(l.b)("h2",{id:"priorities"},"Priorities"),Object(l.b)("p",null,"There are three ",Object(l.b)("strong",{parentName:"p"},"visual priorities")," of buttons to choose from, from highest to\nlowest:"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"filled"),Object(l.b)("li",{parentName:"ol"},"outline"),Object(l.b)("li",{parentName:"ol"},"flat")),Object(l.b)("p",null,"All priorities come in supported\n",Object(l.b)("a",{parentName:"p",href:"/foundation/colors#component-colors"},"component colors"),"."),Object(l.b)("h3",{id:"filled"},"Filled"),Object(l.b)("p",null,"The default, high-emphasis priority should be used for primary actions of your\napp. Use it sparingly but remember there should always be one on a screen."),Object(l.b)(b.c,{__position:1,__code:'<Button label="Primary" />\n<Button label="Secondary" color="secondary" />\n<Button label="Success" color="success" />\n<Button label="Warning" color="warning" />\n<Button label="Danger" color="danger" />\n<Button label="Help" color="help" />\n<Button label="Info" color="info" />\n<Button label="Note" color="note" />\n<Placeholder dark inline>\n  <Button label="Light" color="light" />\n</Placeholder>\n<Button label="Dark" color="dark" />',__scope:{props:n,DefaultLayout:i.a,Playground:b.c,Props:b.d,Icon:r.a,Placeholder:c.a,Badge:d.a,Button:u.a,DefaultLayout:i.a,_frontmatter:p},mdxType:"Playground"},Object(l.b)(u.a,{label:"Primary",mdxType:"Button"}),Object(l.b)(u.a,{label:"Secondary",color:"secondary",mdxType:"Button"}),Object(l.b)(u.a,{label:"Success",color:"success",mdxType:"Button"}),Object(l.b)(u.a,{label:"Warning",color:"warning",mdxType:"Button"}),Object(l.b)(u.a,{label:"Danger",color:"danger",mdxType:"Button"}),Object(l.b)(u.a,{label:"Help",color:"help",mdxType:"Button"}),Object(l.b)(u.a,{label:"Info",color:"info",mdxType:"Button"}),Object(l.b)(u.a,{label:"Note",color:"note",mdxType:"Button"}),Object(l.b)(c.a,{dark:!0,inline:!0,mdxType:"Placeholder"},Object(l.b)(u.a,{label:"Light",color:"light",mdxType:"Button"})),Object(l.b)(u.a,{label:"Dark",color:"dark",mdxType:"Button"})),Object(l.b)("p",null,"Default, unconfigured button comes in ",Object(l.b)("strong",{parentName:"p"},"medium")," size, ",Object(l.b)("strong",{parentName:"p"},"filled")," visual\npriority, and ",Object(l.b)("strong",{parentName:"p"},"primary")," color variant."),Object(l.b)("h3",{id:"outline"},"Outline"),Object(l.b)("p",null,"Medium-emphasis buttons. They are designed to contain actions that are\nimportant but not primary in your app."),Object(l.b)(b.c,{__position:2,__code:'<Button priority="outline" label="Primary" />\n<Button priority="outline" label="Secondary" color="secondary" />\n<Button priority="outline" label="Success" color="success" />\n<Button priority="outline" label="Warning" color="warning" />\n<Button priority="outline" label="Danger" color="danger" />\n<Button priority="outline" label="Help" color="help" />\n<Button priority="outline" label="Info" color="info" />\n<Button priority="outline" label="Note" color="note" />\n<Placeholder dark inline>\n  <Button priority="outline" label="Light" color="light" />\n</Placeholder>\n<Button priority="outline" label="Dark" color="dark" />',__scope:{props:n,DefaultLayout:i.a,Playground:b.c,Props:b.d,Icon:r.a,Placeholder:c.a,Badge:d.a,Button:u.a,DefaultLayout:i.a,_frontmatter:p},mdxType:"Playground"},Object(l.b)(u.a,{priority:"outline",label:"Primary",mdxType:"Button"}),Object(l.b)(u.a,{priority:"outline",label:"Secondary",color:"secondary",mdxType:"Button"}),Object(l.b)(u.a,{priority:"outline",label:"Success",color:"success",mdxType:"Button"}),Object(l.b)(u.a,{priority:"outline",label:"Warning",color:"warning",mdxType:"Button"}),Object(l.b)(u.a,{priority:"outline",label:"Danger",color:"danger",mdxType:"Button"}),Object(l.b)(u.a,{priority:"outline",label:"Help",color:"help",mdxType:"Button"}),Object(l.b)(u.a,{priority:"outline",label:"Info",color:"info",mdxType:"Button"}),Object(l.b)(u.a,{priority:"outline",label:"Note",color:"note",mdxType:"Button"}),Object(l.b)(c.a,{dark:!0,inline:!0,mdxType:"Placeholder"},Object(l.b)(u.a,{priority:"outline",label:"Light",color:"light",mdxType:"Button"})),Object(l.b)(u.a,{priority:"outline",label:"Dark",color:"dark",mdxType:"Button"})),Object(l.b)("h3",{id:"flat"},"Flat"),Object(l.b)("p",null,"Flat buttons are designed for less pronounced actions to help maintain focus on\nthe content."),Object(l.b)(b.c,{__position:3,__code:'<Button priority="flat" label="Primary" />\n<Button priority="flat" label="Secondary" color="secondary" />\n<Button priority="flat" label="Success" color="success" />\n<Button priority="flat" label="Warning" color="warning" />\n<Button priority="flat" label="Danger" color="danger" />\n<Button priority="flat" label="Help" color="help" />\n<Button priority="flat" label="Info" color="info" />\n<Button priority="flat" label="Note" color="note" />\n<Placeholder dark inline>\n  <Button priority="flat" label="Light" color="light" />\n</Placeholder>\n<Button priority="flat" label="Dark" color="dark" />',__scope:{props:n,DefaultLayout:i.a,Playground:b.c,Props:b.d,Icon:r.a,Placeholder:c.a,Badge:d.a,Button:u.a,DefaultLayout:i.a,_frontmatter:p},mdxType:"Playground"},Object(l.b)(u.a,{priority:"flat",label:"Primary",mdxType:"Button"}),Object(l.b)(u.a,{priority:"flat",label:"Secondary",color:"secondary",mdxType:"Button"}),Object(l.b)(u.a,{priority:"flat",label:"Success",color:"success",mdxType:"Button"}),Object(l.b)(u.a,{priority:"flat",label:"Warning",color:"warning",mdxType:"Button"}),Object(l.b)(u.a,{priority:"flat",label:"Danger",color:"danger",mdxType:"Button"}),Object(l.b)(u.a,{priority:"flat",label:"Help",color:"help",mdxType:"Button"}),Object(l.b)(u.a,{priority:"flat",label:"Info",color:"info",mdxType:"Button"}),Object(l.b)(u.a,{priority:"flat",label:"Note",color:"note",mdxType:"Button"}),Object(l.b)(c.a,{dark:!0,inline:!0,mdxType:"Placeholder"},Object(l.b)(u.a,{priority:"flat",label:"Light",color:"light",mdxType:"Button"})),Object(l.b)(u.a,{priority:"flat",label:"Dark",color:"dark",mdxType:"Button"})),Object(l.b)("h2",{id:"sizes"},"Sizes"),Object(l.b)("p",null,"Aside from the default (medium) size, two additional sizes are available: small\nand large."),Object(l.b)(b.c,{__position:4,__code:'<Button label="Small" size="small" />\n<Button label="Medium" />\n<Button label="Large" size="large" />',__scope:{props:n,DefaultLayout:i.a,Playground:b.c,Props:b.d,Icon:r.a,Placeholder:c.a,Badge:d.a,Button:u.a,DefaultLayout:i.a,_frontmatter:p},mdxType:"Playground"},Object(l.b)(u.a,{label:"Small",size:"small",mdxType:"Button"}),Object(l.b)(u.a,{label:"Medium",mdxType:"Button"}),Object(l.b)(u.a,{label:"Large",size:"large",mdxType:"Button"})),Object(l.b)("p",null,"Block buttons span the full width of a parent:"),Object(l.b)(b.c,{__position:5,__code:'<Button label="Block button" block />',__scope:{props:n,DefaultLayout:i.a,Playground:b.c,Props:b.d,Icon:r.a,Placeholder:c.a,Badge:d.a,Button:u.a,DefaultLayout:i.a,_frontmatter:p},mdxType:"Playground"},Object(l.b)(u.a,{label:"Block button",block:!0,mdxType:"Button"})),Object(l.b)("h2",{id:"buttons-with-icons"},"Buttons with Icons"),Object(l.b)("p",null,"To improve clarity or to draw attention to the action, icons can be added\nbefore or after the button's label."),Object(l.b)("p",null,"👉 Please note there are no icons pre-packed in React UI. Visit\n",Object(l.b)("a",{parentName:"p",href:"/foundation/icons"},"Icons")," to see how to include them."),Object(l.b)(b.c,{__position:6,__code:'<Button label="Icon before label" beforeLabel={<Icon icon="star" />} />\n<Button label="Icon after label" afterLabel={<Icon icon="star" />} />',__scope:{props:n,DefaultLayout:i.a,Playground:b.c,Props:b.d,Icon:r.a,Placeholder:c.a,Badge:d.a,Button:u.a,DefaultLayout:i.a,_frontmatter:p},mdxType:"Playground"},Object(l.b)(u.a,{label:"Icon before label",beforeLabel:Object(l.b)(r.a,{icon:"star",mdxType:"Icon"}),mdxType:"Button"}),Object(l.b)(u.a,{label:"Icon after label",afterLabel:Object(l.b)(r.a,{icon:"star",mdxType:"Icon"}),mdxType:"Button"})),Object(l.b)("h3",{id:"icon-buttons"},"Icon Buttons"),Object(l.b)("p",null,"For clear and simple actions, buttons can visually consist just of an icon.\nLabel remains mandatory to keep the button accessible."),Object(l.b)(b.c,{__position:7,__code:'<Button\n  label="Icon button"\n  labelVisibility="none"\n  beforeLabel={<Icon icon="pencil" />}\n/>',__scope:{props:n,DefaultLayout:i.a,Playground:b.c,Props:b.d,Icon:r.a,Placeholder:c.a,Badge:d.a,Button:u.a,DefaultLayout:i.a,_frontmatter:p},mdxType:"Playground"},Object(l.b)(u.a,{label:"Icon button",labelVisibility:"none",beforeLabel:Object(l.b)(r.a,{icon:"pencil",mdxType:"Icon"}),mdxType:"Button"})),Object(l.b)("p",null,"Icon buttons can optionally enhance on a ",Object(l.b)("a",{parentName:"p",href:"/foundation/breakpoints"},"breakpoint"),"\nof your choice and display label once you know there is enough room for it."),Object(l.b)("p",null,"📐 Try resizing your browser to see how label visibility changes."),Object(l.b)(b.c,{__position:8,__code:'<Button\n  label="Label visible from sm up"\n  labelVisibility="sm"\n  beforeLabel={<Icon icon="pencil" />}\n/>\n<Button\n  label="Label visible from md up"\n  labelVisibility="md"\n  beforeLabel={<Icon icon="pencil" />}\n/>\n<Button\n  label="Label visible from lg up"\n  labelVisibility="lg"\n  beforeLabel={<Icon icon="pencil" />}\n/>\n<Button\n  label="Label visible from xl up"\n  labelVisibility="xl"\n  beforeLabel={<Icon icon="pencil" />}\n/>\n<Button\n  label="Label visible from x2l up"\n  labelVisibility="x2l"\n  beforeLabel={<Icon icon="pencil" />}\n/>\n<Button\n  label="Label visible from x3l up"\n  labelVisibility="x3l"\n  beforeLabel={<Icon icon="pencil" />}\n/>',__scope:{props:n,DefaultLayout:i.a,Playground:b.c,Props:b.d,Icon:r.a,Placeholder:c.a,Badge:d.a,Button:u.a,DefaultLayout:i.a,_frontmatter:p},mdxType:"Playground"},Object(l.b)(u.a,{label:"Label visible from sm up",labelVisibility:"sm",beforeLabel:Object(l.b)(r.a,{icon:"pencil",mdxType:"Icon"}),mdxType:"Button"}),Object(l.b)(u.a,{label:"Label visible from md up",labelVisibility:"md",beforeLabel:Object(l.b)(r.a,{icon:"pencil",mdxType:"Icon"}),mdxType:"Button"}),Object(l.b)(u.a,{label:"Label visible from lg up",labelVisibility:"lg",beforeLabel:Object(l.b)(r.a,{icon:"pencil",mdxType:"Icon"}),mdxType:"Button"}),Object(l.b)(u.a,{label:"Label visible from xl up",labelVisibility:"xl",beforeLabel:Object(l.b)(r.a,{icon:"pencil",mdxType:"Icon"}),mdxType:"Button"}),Object(l.b)(u.a,{label:"Label visible from x2l up",labelVisibility:"x2l",beforeLabel:Object(l.b)(r.a,{icon:"pencil",mdxType:"Icon"}),mdxType:"Button"}),Object(l.b)(u.a,{label:"Label visible from x3l up",labelVisibility:"x3l",beforeLabel:Object(l.b)(r.a,{icon:"pencil",mdxType:"Icon"}),mdxType:"Button"})),Object(l.b)("h2",{id:"buttons-with-badges"},"Buttons with Badges"),Object(l.b)("p",null,"A ",Object(l.b)("a",{parentName:"p",href:"/components/badge"},"Badge")," can be added to buttons to provide additional\ninformation or to draw user's attention."),Object(l.b)(b.c,{__position:9,__code:'<Button\n  label="Badge before"\n  beforeLabel={<Badge label={3} priority="outline" color="light" />}\n/>\n<Button label="Badge before, on top" startCorner={<Badge label={3} />} />\n<Button\n  label="Badge after, on top"\n  endCorner={<Badge label={3} />}\n  priority="outline"\n/>\n<Button\n  label="Badge after"\n  afterLabel={<Badge label="new" color="warning" />}\n  priority="outline"\n/>',__scope:{props:n,DefaultLayout:i.a,Playground:b.c,Props:b.d,Icon:r.a,Placeholder:c.a,Badge:d.a,Button:u.a,DefaultLayout:i.a,_frontmatter:p},mdxType:"Playground"},Object(l.b)(u.a,{label:"Badge before",beforeLabel:Object(l.b)(d.a,{label:3,priority:"outline",color:"light",mdxType:"Badge"}),mdxType:"Button"}),Object(l.b)(u.a,{label:"Badge before, on top",startCorner:Object(l.b)(d.a,{label:3,mdxType:"Badge"}),mdxType:"Button"}),Object(l.b)(u.a,{label:"Badge after, on top",endCorner:Object(l.b)(d.a,{label:3,mdxType:"Badge"}),priority:"outline",mdxType:"Button"}),Object(l.b)(u.a,{label:"Badge after",afterLabel:Object(l.b)(d.a,{label:"new",color:"warning",mdxType:"Badge"}),priority:"outline",mdxType:"Button"})),Object(l.b)("h3",{id:"icon-buttons-with-a-badge"},"Icon Buttons with a Badge"),Object(l.b)("p",null,"Badges play nicely with icon buttons, too:"),Object(l.b)(b.c,{__position:10,__code:'<Button\n  label="Icon button with badge"\n  labelVisibility="none"\n  priority="outline"\n  beforeLabel={<Icon icon="warning-sign" />}\n  startCorner={<Badge label={3} color="warning" />}\n/>\n<Button\n  label="Icon button with badge"\n  labelVisibility="md"\n  priority="outline"\n  beforeLabel={<Icon icon="warning-sign" />}\n  startCorner={<Badge label={3} color="danger" />}\n/>',__scope:{props:n,DefaultLayout:i.a,Playground:b.c,Props:b.d,Icon:r.a,Placeholder:c.a,Badge:d.a,Button:u.a,DefaultLayout:i.a,_frontmatter:p},mdxType:"Playground"},Object(l.b)(u.a,{label:"Icon button with badge",labelVisibility:"none",priority:"outline",beforeLabel:Object(l.b)(r.a,{icon:"warning-sign",mdxType:"Icon"}),startCorner:Object(l.b)(d.a,{label:3,color:"warning",mdxType:"Badge"}),mdxType:"Button"}),Object(l.b)(u.a,{label:"Icon button with badge",labelVisibility:"md",priority:"outline",beforeLabel:Object(l.b)(r.a,{icon:"warning-sign",mdxType:"Icon"}),startCorner:Object(l.b)(d.a,{label:3,color:"danger",mdxType:"Badge"}),mdxType:"Button"})),Object(l.b)("h2",{id:"states"},"States"),Object(l.b)("h3",{id:"disabled-state"},"Disabled State"),Object(l.b)("p",null,"Disabled state makes the action unavailable."),Object(l.b)(b.c,{__position:11,__code:'<Button label="Disabled filled button" disabled />\n<Button label="Disabled outline button" priority="outline" disabled />\n<Button label="Disabled flat button" priority="flat" disabled />',__scope:{props:n,DefaultLayout:i.a,Playground:b.c,Props:b.d,Icon:r.a,Placeholder:c.a,Badge:d.a,Button:u.a,DefaultLayout:i.a,_frontmatter:p},mdxType:"Playground"},Object(l.b)(u.a,{label:"Disabled filled button",disabled:!0,mdxType:"Button"}),Object(l.b)(u.a,{label:"Disabled outline button",priority:"outline",disabled:!0,mdxType:"Button"}),Object(l.b)(u.a,{label:"Disabled flat button",priority:"flat",disabled:!0,mdxType:"Button"})),Object(l.b)("h3",{id:"feedback-state"},"Feedback State"),Object(l.b)("p",null,"When user's action triggers an asynchronous process on background, the button's\nfeedback state can be indicated by showing an icon. The icon replaces button's\nlabel while retaining original dimensions of the button. Buttons in feedback\nstate are automatically disabled to prevent unwanted interaction."),Object(l.b)("p",null,"Filled buttons in feedback state:"),Object(l.b)(b.c,{__position:12,__code:'<Button\n  label="Success"\n  color="success"\n  feedbackIcon={<Icon icon="success" />}\n/>\n<Button\n  label="Success"\n  labelVisibility="none"\n  color="success"\n  feedbackIcon={<Icon icon="success" />}\n  endCorner={<Badge color="danger" label={3} />}\n/>\n<Placeholder dark inline>\n  <Button\n    label="Light"\n    color="light"\n    feedbackIcon={<Icon icon="success" />}\n  />\n</Placeholder>\n<Button label="Dark" color="dark" feedbackIcon={<Icon icon="success" />} />\n<Button\n  label="Primary"\n  feedbackIcon={\n    <span className="d-inline-flex animation-spin-counterclockwise">\n      <Icon icon="loading" />\n    </span>\n  }\n/>',__scope:{props:n,DefaultLayout:i.a,Playground:b.c,Props:b.d,Icon:r.a,Placeholder:c.a,Badge:d.a,Button:u.a,DefaultLayout:i.a,_frontmatter:p},mdxType:"Playground"},Object(l.b)(u.a,{label:"Success",color:"success",feedbackIcon:Object(l.b)(r.a,{icon:"success",mdxType:"Icon"}),mdxType:"Button"}),Object(l.b)(u.a,{label:"Success",labelVisibility:"none",color:"success",feedbackIcon:Object(l.b)(r.a,{icon:"success",mdxType:"Icon"}),endCorner:Object(l.b)(d.a,{color:"danger",label:3,mdxType:"Badge"}),mdxType:"Button"}),Object(l.b)(c.a,{dark:!0,inline:!0,mdxType:"Placeholder"},Object(l.b)(u.a,{label:"Light",color:"light",feedbackIcon:Object(l.b)(r.a,{icon:"success",mdxType:"Icon"}),mdxType:"Button"})),Object(l.b)(u.a,{label:"Dark",color:"dark",feedbackIcon:Object(l.b)(r.a,{icon:"success",mdxType:"Icon"}),mdxType:"Button"}),Object(l.b)(u.a,{label:"Primary",feedbackIcon:Object(l.b)("span",{className:"d-inline-flex animation-spin-counterclockwise"},Object(l.b)(r.a,{icon:"loading",mdxType:"Icon"})),mdxType:"Button"})),Object(l.b)("p",null,"Outline buttons in feedback state:"),Object(l.b)(b.c,{__position:13,__code:'<Button\n  label="Success"\n  priority="outline"\n  color="success"\n  feedbackIcon={<Icon icon="success" />}\n/>\n<Button\n  label="Success"\n  labelVisibility="none"\n  priority="outline"\n  color="success"\n  feedbackIcon={<Icon icon="success" />}\n  endCorner={<Badge color="danger" label={3} />}\n/>\n<Placeholder dark inline>\n  <Button\n    label="Light"\n    priority="outline"\n    color="light"\n    feedbackIcon={<Icon icon="success" />}\n  />\n</Placeholder>\n<Button\n  label="Dark"\n  priority="outline"\n  color="dark"\n  feedbackIcon={<Icon icon="success" />}\n/>\n<Button\n  label="Primary"\n  priority="outline"\n  feedbackIcon={\n    <span className="d-inline-flex animation-spin-counterclockwise">\n      <Icon icon="loading" />\n    </span>\n  }\n/>',__scope:{props:n,DefaultLayout:i.a,Playground:b.c,Props:b.d,Icon:r.a,Placeholder:c.a,Badge:d.a,Button:u.a,DefaultLayout:i.a,_frontmatter:p},mdxType:"Playground"},Object(l.b)(u.a,{label:"Success",priority:"outline",color:"success",feedbackIcon:Object(l.b)(r.a,{icon:"success",mdxType:"Icon"}),mdxType:"Button"}),Object(l.b)(u.a,{label:"Success",labelVisibility:"none",priority:"outline",color:"success",feedbackIcon:Object(l.b)(r.a,{icon:"success",mdxType:"Icon"}),endCorner:Object(l.b)(d.a,{color:"danger",label:3,mdxType:"Badge"}),mdxType:"Button"}),Object(l.b)(c.a,{dark:!0,inline:!0,mdxType:"Placeholder"},Object(l.b)(u.a,{label:"Light",priority:"outline",color:"light",feedbackIcon:Object(l.b)(r.a,{icon:"success",mdxType:"Icon"}),mdxType:"Button"})),Object(l.b)(u.a,{label:"Dark",priority:"outline",color:"dark",feedbackIcon:Object(l.b)(r.a,{icon:"success",mdxType:"Icon"}),mdxType:"Button"}),Object(l.b)(u.a,{label:"Primary",priority:"outline",feedbackIcon:Object(l.b)("span",{className:"d-inline-flex animation-spin-counterclockwise"},Object(l.b)(r.a,{icon:"loading",mdxType:"Icon"})),mdxType:"Button"})),Object(l.b)("p",null,"Flat buttons in feedback state:"),Object(l.b)(b.c,{__position:14,__code:'<Button\n  label="Success"\n  priority="flat"\n  color="success"\n  feedbackIcon={<Icon icon="success" />}\n/>\n<Button\n  label="Success"\n  labelVisibility="none"\n  priority="flat"\n  color="success"\n  feedbackIcon={<Icon icon="success" />}\n  endCorner={<Badge color="danger" label={3} />}\n/>\n<Placeholder dark inline>\n  <Button\n    label="Light"\n    priority="flat"\n    color="light"\n    feedbackIcon={<Icon icon="success" />}\n  />\n</Placeholder>\n<Button\n  label="Dark"\n  priority="flat"\n  color="dark"\n  feedbackIcon={<Icon icon="success" />}\n/>\n<Button\n  label="Primary"\n  priority="flat"\n  feedbackIcon={\n    <span className="d-inline-flex animation-spin-counterclockwise">\n      <Icon icon="loading" />\n    </span>\n  }\n/>',__scope:{props:n,DefaultLayout:i.a,Playground:b.c,Props:b.d,Icon:r.a,Placeholder:c.a,Badge:d.a,Button:u.a,DefaultLayout:i.a,_frontmatter:p},mdxType:"Playground"},Object(l.b)(u.a,{label:"Success",priority:"flat",color:"success",feedbackIcon:Object(l.b)(r.a,{icon:"success",mdxType:"Icon"}),mdxType:"Button"}),Object(l.b)(u.a,{label:"Success",labelVisibility:"none",priority:"flat",color:"success",feedbackIcon:Object(l.b)(r.a,{icon:"success",mdxType:"Icon"}),endCorner:Object(l.b)(d.a,{color:"danger",label:3,mdxType:"Badge"}),mdxType:"Button"}),Object(l.b)(c.a,{dark:!0,inline:!0,mdxType:"Placeholder"},Object(l.b)(u.a,{label:"Light",priority:"flat",color:"light",feedbackIcon:Object(l.b)(r.a,{icon:"success",mdxType:"Icon"}),mdxType:"Button"})),Object(l.b)(u.a,{label:"Dark",priority:"flat",color:"dark",feedbackIcon:Object(l.b)(r.a,{icon:"success",mdxType:"Icon"}),mdxType:"Button"}),Object(l.b)(u.a,{label:"Primary",priority:"flat",feedbackIcon:Object(l.b)("span",{className:"d-inline-flex animation-spin-counterclockwise"},Object(l.b)(r.a,{icon:"loading",mdxType:"Icon"})),mdxType:"Button"})),Object(l.b)("p",null,"👉 Visit the ",Object(l.b)("a",{parentName:"p",href:"/css-helpers/animation"},"CSS Helpers")," section to see how the icon\nanimation is made."),Object(l.b)("h2",{id:"api"},"API"),Object(l.b)("p",null,"In addition to the options below, you can specify ",Object(l.b)("a",{parentName:"p",href:"https://reactjs.org/docs/events.html"},"React synthetic events")," or\nany custom HTML attributes that do not interfere with the API, and they will be\npassed to the ",Object(l.b)("inlineCode",{parentName:"p"},"<button>")," HTML element. This enables making the component\ninteractive and helps improve its accessibility."),Object(l.b)(b.d,{table:!0,of:u.a,mdxType:"Props"}),Object(l.b)("h2",{id:"theming"},"Theming"),Object(l.b)("h3",{id:"common-theming-options"},"Common Theming Options"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Custom Property"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-Button__font-weight")),Object(l.b)("td",{parentName:"tr",align:null},"Font weight")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-Button__text-transform")),Object(l.b)("td",{parentName:"tr",align:null},"Text transform, e.g. uppercase or small-caps")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-Button__letter-spacing")),Object(l.b)("td",{parentName:"tr",align:null},"Spacing between letters")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-Button__border-width")),Object(l.b)("td",{parentName:"tr",align:null},"Border width")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-Button__border-radius")),Object(l.b)("td",{parentName:"tr",align:null},"Corner radius")))),Object(l.b)("h3",{id:"theming-priorities-and-color-variants"},"Theming Priorities and Color Variants"),Object(l.b)("p",null,"It's possible to adjust the theme for specific priority, color variant, and\nstate. Naming convention looks as follows:"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"--rui-Button--<PRIORITY>--<COLOR>--<INTERACTION STATE>__<PROPERTY>")),Object(l.b)("p",null,"Where:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"<PRIORITY>")," is one of ",Object(l.b)("inlineCode",{parentName:"li"},"filled"),", ",Object(l.b)("inlineCode",{parentName:"li"},"outline"),", or ",Object(l.b)("inlineCode",{parentName:"li"},"flat")," (see\n",Object(l.b)("a",{parentName:"li",href:"#priorities"},"Priorities")," and ",Object(l.b)("a",{parentName:"li",href:"#api"},"API"),"),"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"<COLOR>")," is one of supported\n",Object(l.b)("a",{parentName:"li",href:"/foundation/colors#component-colors"},"component colors"),"\n(see color variants of ",Object(l.b)("a",{parentName:"li",href:"#priorities"},"each priority")," and ",Object(l.b)("a",{parentName:"li",href:"#api"},"API"),"),"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"<INTERACTION STATE>")," is one of ",Object(l.b)("inlineCode",{parentName:"li"},"default"),", ",Object(l.b)("inlineCode",{parentName:"li"},"hover"),", ",Object(l.b)("inlineCode",{parentName:"li"},"active"),", or ",Object(l.b)("inlineCode",{parentName:"li"},"disabled"),"\n(the last one being optional),"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"<PROPERTY>")," is one of:",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"color"),", ",Object(l.b)("inlineCode",{parentName:"li"},"border-color"),", ",Object(l.b)("inlineCode",{parentName:"li"},"background"),", or ",Object(l.b)("inlineCode",{parentName:"li"},"box-shadow")," for the ",Object(l.b)("inlineCode",{parentName:"li"},"filled"),"\npriority,"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"color"),", ",Object(l.b)("inlineCode",{parentName:"li"},"border-color"),", or ",Object(l.b)("inlineCode",{parentName:"li"},"background")," for the ",Object(l.b)("inlineCode",{parentName:"li"},"outline")," priority,"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"color")," or ",Object(l.b)("inlineCode",{parentName:"li"},"background")," for the ",Object(l.b)("inlineCode",{parentName:"li"},"flat")," priority.")))),Object(l.b)("h3",{id:"theming-sizes"},"Theming Sizes"),Object(l.b)("p",null,"Available sizes can be adjusted as follows:"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"--rui-Button--<SIZE>__<PROPERTY>")),Object(l.b)("p",null,"Where:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"<SIZE>")," is one of ",Object(l.b)("inlineCode",{parentName:"li"},"small"),", ",Object(l.b)("inlineCode",{parentName:"li"},"medium"),", or ",Object(l.b)("inlineCode",{parentName:"li"},"large")," (see ",Object(l.b)("a",{parentName:"li",href:"#sizes"},"Sizes")," and\n",Object(l.b)("a",{parentName:"li",href:"#api"},"API"),")"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"<PROPERTY>")," is one of ",Object(l.b)("inlineCode",{parentName:"li"},"height"),", ",Object(l.b)("inlineCode",{parentName:"li"},"padding-x"),", ",Object(l.b)("inlineCode",{parentName:"li"},"padding-y"),", or ",Object(l.b)("inlineCode",{parentName:"li"},"font-size"))),Object(l.b)("p",null,"👉 Button sizes are linked to\n",Object(l.b)("a",{parentName:"p",href:"/customize/theming/forms#box-field-sizes"},"box field sizes")," sizes so they align\nnicely when placed in row."),Object(l.b)("h3",{id:"example-theme"},"Example Theme"),Object(l.b)(b.c,{__position:16,__code:'<style type="text/css">\n  {`\n    .example--themed-buttons {\n      --rui-Button__font-weight: bold;\n      --rui-Button__letter-spacing: 0.05em;\n      --rui-Button__text-transform: uppercase;\n      --rui-Button__border-radius: 0;\n      --rui-Button--filled--primary--default__box-shadow:\n        0.1em 0.1em 0.5em rgba(0, 0, 0, 0.3);\n      --rui-Button--medium__height: 3rem;\n      --rui-Button--medium__padding-x: 1.25rem;\n      --rui-Button--medium__padding-y: 0.25rem;\n    }\n  `}\n</style>\n<Button label="Default filled button" />\n<Button label="Default outline button" priority="outline" />\n<div className="example example--themed-buttons">\n  <Button label="Themed filled button" />\n  <Button label="Themed outline button" priority="outline" />\n</div>',__scope:{props:n,DefaultLayout:i.a,Playground:b.c,Props:b.d,Icon:r.a,Placeholder:c.a,Badge:d.a,Button:u.a,DefaultLayout:i.a,_frontmatter:p},mdxType:"Playground"},Object(l.b)("style",{type:"text/css"},"\n      .example--themed-buttons {\n        --rui-Button__font-weight: bold;\n        --rui-Button__letter-spacing: 0.05em;\n        --rui-Button__text-transform: uppercase;\n        --rui-Button__border-radius: 0;\n        --rui-Button--filled--primary--default__box-shadow:\n          0.1em 0.1em 0.5em rgba(0, 0, 0, 0.3);\n        --rui-Button--medium__height: 3rem;\n        --rui-Button--medium__padding-x: 1.25rem;\n        --rui-Button--medium__padding-y: 0.25rem;\n      }\n    "),Object(l.b)(u.a,{label:"Default filled button",mdxType:"Button"}),Object(l.b)(u.a,{label:"Default outline button",priority:"outline",mdxType:"Button"}),Object(l.b)("div",{className:"example example--themed-buttons"},Object(l.b)(u.a,{label:"Themed filled button",mdxType:"Button"}),Object(l.b)(u.a,{label:"Themed outline button",priority:"outline",mdxType:"Button"}))),Object(l.b)("h3",{id:"theming-disabled-state"},"Theming Disabled State"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"disabled")," state offers a bit more of design flexibility compared to other\ninteraction states. Firstly, there are a few common options for this state:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Custom Property"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-Button--disabled__opacity")),Object(l.b)("td",{parentName:"tr",align:null},"Opacity of disabled buttons")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-Button--disabled__cursor")),Object(l.b)("td",{parentName:"tr",align:null},"Cursor to show on hovering disabled buttons")))),Object(l.b)("p",null,"Secondly, it can be further adjusted using priority and color variant specific\noptions for the disabled state:"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"--rui-Button--<PRIORITY>--<COLOR>--disabled__<PROPERTY>")),Object(l.b)("p",null,"Undefined theming options are inherited from the ",Object(l.b)("inlineCode",{parentName:"p"},"default")," interaction state."),Object(l.b)("p",null,"Example:"),Object(l.b)(b.c,{__position:17,__code:'<style type="text/css">\n  {`\n    .example--themed-disabled-buttons {\n      --rui-Button__border-radius: 0;\n      --rui-Button--disabled__opacity: 0.4;\n      --rui-Button--disabled__cursor: default;\n      --rui-Button--filled--primary--disabled__color: slate;\n      --rui-Button--filled--primary--disabled__border-color: silver;\n      --rui-Button--filled--primary--disabled__background: silver;\n      --rui-Button--filled--success--disabled__color: slate;\n      --rui-Button--filled--success--disabled__border-color: silver;\n      --rui-Button--filled--success--disabled__background: silver;\n      --rui-Button--outline--primary--disabled__color: slate;\n      --rui-Button--outline--primary--disabled__border-color: silver;\n    }\n  `}\n</style>\n<Button label="Default filled primary button, disabled" disabled />\n<Button\n  label="Default filled success button, disabled"\n  color="success"\n  disabled\n/>\n<Button\n  label="Default outline primary button, disabled"\n  priority="outline"\n  disabled\n/>\n<div className="example example--themed-disabled-buttons">\n  <Button label="Themed filled primary button, disabled" disabled />\n  <Button\n    label="Themed filled success button, disabled"\n    color="success"\n    disabled\n  />\n  <Button\n    label="Themed outline primary button, disabled"\n    priority="outline"\n    disabled\n  />\n</div>',__scope:{props:n,DefaultLayout:i.a,Playground:b.c,Props:b.d,Icon:r.a,Placeholder:c.a,Badge:d.a,Button:u.a,DefaultLayout:i.a,_frontmatter:p},mdxType:"Playground"},Object(l.b)("style",{type:"text/css"},"\n      .example--themed-disabled-buttons {\n        --rui-Button__border-radius: 0;\n        --rui-Button--disabled__opacity: 0.4;\n        --rui-Button--disabled__cursor: default;\n        --rui-Button--filled--primary--disabled__color: slate;\n        --rui-Button--filled--primary--disabled__border-color: silver;\n        --rui-Button--filled--primary--disabled__background: silver;\n        --rui-Button--filled--success--disabled__color: slate;\n        --rui-Button--filled--success--disabled__border-color: silver;\n        --rui-Button--filled--success--disabled__background: silver;\n        --rui-Button--outline--primary--disabled__color: slate;\n        --rui-Button--outline--primary--disabled__border-color: silver;\n      }\n    "),Object(l.b)(u.a,{label:"Default filled primary button, disabled",disabled:!0,mdxType:"Button"}),Object(l.b)(u.a,{label:"Default filled success button, disabled",color:"success",disabled:!0,mdxType:"Button"}),Object(l.b)(u.a,{label:"Default outline primary button, disabled",priority:"outline",disabled:!0,mdxType:"Button"}),Object(l.b)("div",{className:"example example--themed-disabled-buttons"},Object(l.b)(u.a,{label:"Themed filled primary button, disabled",disabled:!0,mdxType:"Button"}),Object(l.b)(u.a,{label:"Themed filled success button, disabled",color:"success",disabled:!0,mdxType:"Button"}),Object(l.b)(u.a,{label:"Themed outline primary button, disabled",priority:"outline",disabled:!0,mdxType:"Button"}))),Object(l.b)("h3",{id:"theming-feedback-state"},"Theming Feedback State"),Object(l.b)("p",null,"Similarly to disabled state, opacity and cursor can be set for buttons in\nfeedback state."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Custom Property"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-Button--feedback__opacity")),Object(l.b)("td",{parentName:"tr",align:null},"Opacity of buttons in feedback state")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-Button--feedback__cursor")),Object(l.b)("td",{parentName:"tr",align:null},"Cursor to show on hovering buttons in feedback state")))))}void 0!==O&&O&&O===Object(O)&&Object.isExtensible(O)&&!Object.prototype.hasOwnProperty.call(O,"__filemeta")&&Object.defineProperty(O,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/lib/components/Button/README.mdx"}}),O.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-lib-components-button-readme-mdx-10e9c50e7a9a1622de40.js.map