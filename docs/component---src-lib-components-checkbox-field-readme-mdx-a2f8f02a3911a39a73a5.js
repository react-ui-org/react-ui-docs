(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{B4up:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return d})),a.d(t,"default",(function(){return u}));var n=a("Fcif"),o=a("dV/x"),i=a("mXGw"),l=a("/FXl"),c=a("TjRS"),r=a("ZFoC"),b=a("YBnK");a("aD51");const s=["components"],d={};void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/lib/components/CheckboxField/README.mdx"}});const h={_frontmatter:d},p=c.a;function u(e){let{components:t}=e,a=Object(o.a)(e,s);return Object(l.b)(p,Object(n.a)({},h,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"checkboxfield"},"CheckboxField"),Object(l.b)("p",null,"CheckboxField allows users to select one or more options from a set."),Object(l.b)("h2",{id:"basic-usage"},"Basic Usage"),Object(l.b)("p",null,"To implement the CheckboxField component, you need to import it first:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"import { CheckboxField } from '@react-ui-org/react-ui';\n")),Object(l.b)("p",null,"And use it:"),Object(l.b)(r.c,{__position:0,__code:'() => {\n  const [agree, setAgree] = React.useState(true)\n  return (\n    <CheckboxField\n      checked={agree}\n      label="I agree"\n      onChange={() => setAgree(!agree)}\n    />\n  )\n}',__scope:{props:a,DefaultLayout:c.a,Playground:r.c,Props:r.d,CheckboxField:b.a,DefaultLayout:c.a,_frontmatter:d},mdxType:"Playground"},()=>{const[e,t]=i.useState(!0);return Object(l.b)(b.a,{checked:e,label:"I agree",onChange:()=>t(!e),mdxType:"CheckboxField"})}),Object(l.b)("p",null,"See ",Object(l.b)("a",{parentName:"p",href:"#api"},"API")," for all available options."),Object(l.b)("h2",{id:"general-guidelines"},"General Guidelines"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Use the CheckboxField when there are lists of options and the user may\n",Object(l.b)("strong",{parentName:"p"},"select any number of choices,")," including zero, one, or several. For\nselecting just a single option from the list, use either the\n",Object(l.b)("a",{parentName:"p",href:"/components/ui/radio"},"Radio")," or ",Object(l.b)("a",{parentName:"p",href:"/components/ui/select-field"},"SelectField"),"\ncomponent.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Use the CheckboxField for boolean (true/false) input ",Object(l.b)("strong",{parentName:"p"},"in forms that require\nto be confirmed")," by a button to become active. To toggle things on or off\nwith an immediate effect (without confirmation), use rather the\n",Object(l.b)("a",{parentName:"p",href:"/components/ui/toggle"},"Toggle")," component.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Use positive wording for the checkbox label,")," so that it's clear what will\nhappen when the user turns on the checkbox. Avoid negations such as “Don't\nsend me any emails” which would mean that the user needs to turn the\ncheckbox ",Object(l.b)("strong",{parentName:"p"},"on")," in order for something ",Object(l.b)("strong",{parentName:"p"},"not")," to happen.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Only make the CheckboxField's label invisible when there is ",Object(l.b)("strong",{parentName:"p"},"another visual\nclue")," to guide users through toggling the input.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"When a short label is not enough, use ",Object(l.b)("strong",{parentName:"p"},"help texts to guide users")," before\nthey enter anything.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Use ",Object(l.b)("strong",{parentName:"p"},"clear, calm error messages")," when there's a problem with what they\nentered.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Visually present groups of choices as groups,")," and clearly separate them\nfrom other groups on the same page."))),Object(l.b)("p",null,"📖 ",Object(l.b)("a",{parentName:"p",href:"https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/"},"Read more about checkboxes and radios at Nielsen Norman Group.")),Object(l.b)("h2",{id:"help-text"},"Help Text"),Object(l.b)("p",null,"You may provide an additional help text to clarify what will be the impact of\nturning the checkbox on or off."),Object(l.b)(r.c,{__position:1,__code:'() => {\n  const [getNewsletter, setGetNewsletter] = React.useState(true)\n  return (\n    <CheckboxField\n      checked={getNewsletter}\n      helpText="We will not bother you more than once a month, we promise!"\n      label="Send me newsletter"\n      onChange={() => setGetNewsletter(!getNewsletter)}\n    />\n  )\n}',__scope:{props:a,DefaultLayout:c.a,Playground:r.c,Props:r.d,CheckboxField:b.a,DefaultLayout:c.a,_frontmatter:d},mdxType:"Playground"},()=>{const[e,t]=i.useState(!0);return Object(l.b)(b.a,{checked:e,helpText:"We will not bother you more than once a month, we promise!",label:"Send me newsletter",onChange:()=>t(!e),mdxType:"CheckboxField"})}),Object(l.b)("h2",{id:"label-options"},"Label Options"),Object(l.b)("p",null,"In some cases, it may be convenient to visually hide the checkbox label. The\nlabel remains accessible to assistive technologies."),Object(l.b)(r.c,{__position:2,__code:'() => {\n  const [checked, setChecked] = React.useState(true)\n  return (\n    <CheckboxField\n      checked={checked}\n      isLabelVisible={false}\n      label="You cannot see this"\n      onChange={() => setChecked(!checked)}\n    />\n  )\n}',__scope:{props:a,DefaultLayout:c.a,Playground:r.c,Props:r.d,CheckboxField:b.a,DefaultLayout:c.a,_frontmatter:d},mdxType:"Playground"},()=>{const[e,t]=i.useState(!0);return Object(l.b)(b.a,{checked:e,isLabelVisible:!1,label:"You cannot see this",onChange:()=>t(!e),mdxType:"CheckboxField"})}),Object(l.b)("p",null,"It's also possible to display label before input:"),Object(l.b)(r.c,{__position:3,__code:'() => {\n  const [checked, setChecked] = React.useState(true)\n  return (\n    <CheckboxField\n      checked={checked}\n      label="Label precedes input"\n      labelPosition="before"\n      onChange={() => setChecked(!checked)}\n    />\n  )\n}',__scope:{props:a,DefaultLayout:c.a,Playground:r.c,Props:r.d,CheckboxField:b.a,DefaultLayout:c.a,_frontmatter:d},mdxType:"Playground"},()=>{const[e,t]=i.useState(!0);return Object(l.b)(b.a,{checked:e,label:"Label precedes input",labelPosition:"before",onChange:()=>t(!e),mdxType:"CheckboxField"})}),Object(l.b)("h2",{id:"states"},"States"),Object(l.b)("h3",{id:"validation-states"},"Validation States"),Object(l.b)("p",null,"Validation states visually present the result of validation of the input. You\nshould always ",Object(l.b)("strong",{parentName:"p"},"provide validation message for states other than valid")," so\nusers know what happened and what action they should take or what options they\nhave."),Object(l.b)(r.c,{__position:4,__code:'() => {\n  const [agree, setAgree] = React.useState(true)\n  return (\n    <>\n      <CheckboxField\n        checked={agree}\n        label="I have read and agree with terms and conditions"\n        onChange={() => setAgree(!agree)}\n        validationState="valid"\n      />\n      <CheckboxField\n        checked={agree}\n        label="I have read and agree with terms and conditions"\n        onChange={() => setAgree(!agree)}\n        validationState="warning"\n        validationText="Please wait 10 minutes until we verify your data."\n      />\n      <CheckboxField\n        checked={agree}\n        label="I have read and agree with terms and conditions"\n        onChange={() => setAgree(!agree)}\n        required\n        validationState="invalid"\n        validationText="You must agree to be able to proceed."\n      />\n    </>\n  )\n}',__scope:{props:a,DefaultLayout:c.a,Playground:r.c,Props:r.d,CheckboxField:b.a,DefaultLayout:c.a,_frontmatter:d},mdxType:"Playground"},()=>{const[e,t]=i.useState(!0);return Object(l.b)(i.Fragment,null,Object(l.b)(b.a,{checked:e,label:"I have read and agree with terms and conditions",onChange:()=>t(!e),validationState:"valid",mdxType:"CheckboxField"}),Object(l.b)(b.a,{checked:e,label:"I have read and agree with terms and conditions",onChange:()=>t(!e),validationState:"warning",validationText:"Please wait 10 minutes until we verify your data.",mdxType:"CheckboxField"}),Object(l.b)(b.a,{checked:e,label:"I have read and agree with terms and conditions",onChange:()=>t(!e),required:!0,validationState:"invalid",validationText:"You must agree to be able to proceed.",mdxType:"CheckboxField"}))}),Object(l.b)("h3",{id:"disabled-state"},"Disabled State"),Object(l.b)("p",null,"Disabled state makes the input unavailable."),Object(l.b)(r.c,{__position:5,__code:'<CheckboxField disabled label="Disabled checkbox" />\n<CheckboxField checked disabled label="Disabled checkbox, checked" />',__scope:{props:a,DefaultLayout:c.a,Playground:r.c,Props:r.d,CheckboxField:b.a,DefaultLayout:c.a,_frontmatter:d},mdxType:"Playground"},Object(l.b)(b.a,{disabled:!0,label:"Disabled checkbox",mdxType:"CheckboxField"}),Object(l.b)(b.a,{checked:!0,disabled:!0,label:"Disabled checkbox, checked",mdxType:"CheckboxField"})),Object(l.b)("h2",{id:"api"},"API"),Object(l.b)("p",null,"In addition to the options below, you can specify ",Object(l.b)("a",{parentName:"p",href:"https://reactjs.org/docs/events.html"},"React synthetic events")," or\nany custom HTML attributes that do not interfere with the API, and they will be\npassed to the ",Object(l.b)("inlineCode",{parentName:"p"},"input")," HTML element. This enables making the component\ninteractive and helps improve its accessibility."),Object(l.b)(r.d,{table:!0,of:b.a,mdxType:"Props"}),Object(l.b)("h2",{id:"theming"},"Theming"),Object(l.b)("p",null,"Head to ",Object(l.b)("a",{parentName:"p",href:"/customize/theming/forms"},"Forms Theming")," to see shared form theming\noptions. On top of that, the following options are available for CheckboxField."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Custom Property"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-FormField--check__input--checkbox__border-radius")),Object(l.b)("td",{parentName:"tr",align:null},"Input corner radius")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-FormField--check__input--checkbox--checked__background-image")),Object(l.b)("td",{parentName:"tr",align:null},"Background image of checked input")))))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/lib/components/CheckboxField/README.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-lib-components-checkbox-field-readme-mdx-a2f8f02a3911a39a73a5.js.map