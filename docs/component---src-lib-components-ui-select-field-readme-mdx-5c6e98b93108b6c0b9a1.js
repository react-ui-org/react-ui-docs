(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{dit0:function(e,l,t){"use strict";t.r(l),t.d(l,"_frontmatter",(function(){return s})),t.d(l,"default",(function(){return b}));var n=t("k0FJ"),i=t("yHgN"),a=t("mXGw"),o=t("/FXl"),r=t("TjRS"),u=t("ZFoC"),d=t("XZkq");t("aD51");const s={};void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/lib/components/ui/SelectField/README.mdx"}});const p={_frontmatter:s},f=r.a;function b(e){let{components:l}=e,t=Object(i.a)(e,["components"]);return Object(o.b)(f,Object(n.a)({},p,t,{components:l,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"selectfield"},"SelectField"),Object(o.b)("p",null,"SelectField allows users to select one option from a set."),Object(o.b)("h2",{id:"basic-usage"},"Basic Usage"),Object(o.b)("p",null,"To use the SelectField component, you need to import it first:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"import { SelectField } from '@react-ui-org/react-ui';\n")),Object(o.b)("p",null,"And use it:"),Object(o.b)(u.c,{__position:0,__code:"<SelectField\n  id=\"my-select-field\"\n  label=\"Your favourite fruit\"\n  options={[\n    {\n      label: 'Apple',\n      value: 'apple',\n    },\n    {\n      label: 'Banana',\n      value: 'banana',\n    },\n    {\n      label: 'Grapefruit',\n      value: 'grapefruit',\n    },\n  ]}\n/>",__scope:{props:t,DefaultLayout:r.a,Playground:u.c,Props:u.d,SelectField:d.a,DefaultLayout:r.a,_frontmatter:s},mdxType:"Playground"},Object(o.b)(d.a,{id:"my-select-field",label:"Your favourite fruit",options:[{label:"Apple",value:"apple"},{label:"Banana",value:"banana"},{label:"Grapefruit",value:"grapefruit"}],mdxType:"SelectField"})),Object(o.b)("h2",{id:"general-guidelines"},"General Guidelines"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Use SelectField for ",Object(o.b)("strong",{parentName:"p"},"many options"),". For sets of just a few options\n(say 3 at maximum) consider using the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/components/ui/radio"}),"Radio")," component.\nThis will help keep your UI clean and uncluttered and prevent your users from\nbeing overwhelmed by too many options.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Don't use for boolean")," (true/false) selection or to toggle things on and\noff. ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/components/ui/checkbox-field"}),"CheckboxField")," and\n",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/components/ui/toggle"}),"Toggle")," are more suitable for such cases.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Use ",Object(o.b)("strong",{parentName:"p"},"short and descriptive labels"),", ideally nouns rather than seemingly\npolite phrases like ",Object(o.b)("em",{parentName:"p"},"Please select your favourite fruit"),". Short labels will\nhelp your users accomplish their task faster.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Only make the SelectField's label invisible when there is ",Object(o.b)("strong",{parentName:"p"},"another visual\nclue")," to guide users through filling the input. Using the first option as\nlabel is not recommended either â€” it disappears once user makes their choice.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"When a short label is not enough, use ",Object(o.b)("strong",{parentName:"p"},"help texts to guide users")," before\nthey enter anything.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Use ",Object(o.b)("strong",{parentName:"p"},"clear, calm error messages")," when there's a problem with what they\nentered.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"In case of a large amount of options, consider ",Object(o.b)("strong",{parentName:"p"},"grouping related items\ntogether")," by nesting them (implements the ",Object(o.b)("inlineCode",{parentName:"p"},"optgroup")," HTML element)."))),Object(o.b)("p",null,"ðŸ‘‰ We use the ",Object(o.b)("strong",{parentName:"p"},"native ",Object(o.b)("inlineCode",{parentName:"strong"},"select"))," HTML element to improve user experience on\nmobile devices by using the native select of the platform."),Object(o.b)("h2",{id:"design-variants"},"Design Variants"),Object(o.b)("p",null,"To satisfy the design requirements of your project, all input fields in React UI\ncome in two design variants to choose from: outline and filled. Both can be\nfurther ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/getting-started/theming"}),"customized")," with CSS custom properties."),Object(o.b)(u.c,{__position:1,__code:"() => {\n  const options = [\n    {\n      label: 'Apple',\n      value: 'apple',\n    },\n    {\n      label: 'Banana',\n      value: 'banana',\n    },\n    {\n      label: 'Grapefruit',\n      value: 'grapefruit',\n    },\n  ]\n  return (\n    <>\n      <SelectField\n        id=\"my-select-field-outline\"\n        label=\"Your favourite fruit\"\n        options={options}\n      />\n      <SelectField\n        id=\"my-select-field-filled\"\n        label=\"Your favourite fruit\"\n        options={options}\n        variant=\"filled\"\n      />\n    </>\n  )\n}",__scope:{props:t,DefaultLayout:r.a,Playground:u.c,Props:u.d,SelectField:d.a,DefaultLayout:r.a,_frontmatter:s},mdxType:"Playground"},()=>{const e=[{label:"Apple",value:"apple"},{label:"Banana",value:"banana"},{label:"Grapefruit",value:"grapefruit"}];return Object(o.b)(a.Fragment,null,Object(o.b)(d.a,{id:"my-select-field-outline",label:"Your favourite fruit",options:e,mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-filled",label:"Your favourite fruit",options:e,variant:"filled",mdxType:"SelectField"}))}),Object(o.b)("h2",{id:"sizes"},"Sizes"),Object(o.b)("p",null,"Aside from the default (medium) size, two additional sizes are available: small\nand large."),Object(o.b)(u.c,{__position:2,__code:'() => {\n  const options = [\n    {\n      label: \'Apple\',\n      value: \'apple\',\n    },\n    {\n      label: \'Banana\',\n      value: \'banana\',\n    },\n    {\n      label: \'Grapefruit\',\n      value: \'grapefruit\',\n    },\n  ]\n  return (\n    <>\n      <SelectField\n        id="my-select-field-outline-small"\n        label="Your favourite fruit"\n        options={options}\n        size="small"\n      />\n      <SelectField\n        id="my-select-field-outline-medium"\n        label="Your favourite fruit"\n        options={options}\n      />\n      <SelectField\n        id="my-select-field-outline-large"\n        label="Your favourite fruit"\n        options={options}\n        size="large"\n      />\n      <SelectField\n        id="my-select-field-filled-small"\n        label="Your favourite fruit"\n        options={options}\n        size="small"\n        variant="filled"\n      />\n      <SelectField\n        id="my-select-field-filled-medium"\n        label="Your favourite fruit"\n        options={options}\n        variant="filled"\n      />\n      <SelectField\n        id="my-select-field-filled-large"\n        label="Your favourite fruit"\n        options={options}\n        size="large"\n        variant="filled"\n      />\n    </>\n  )\n}',__scope:{props:t,DefaultLayout:r.a,Playground:u.c,Props:u.d,SelectField:d.a,DefaultLayout:r.a,_frontmatter:s},mdxType:"Playground"},()=>{const e=[{label:"Apple",value:"apple"},{label:"Banana",value:"banana"},{label:"Grapefruit",value:"grapefruit"}];return Object(o.b)(a.Fragment,null,Object(o.b)(d.a,{id:"my-select-field-outline-small",label:"Your favourite fruit",options:e,size:"small",mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-outline-medium",label:"Your favourite fruit",options:e,mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-outline-large",label:"Your favourite fruit",options:e,size:"large",mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-filled-small",label:"Your favourite fruit",options:e,size:"small",variant:"filled",mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-filled-medium",label:"Your favourite fruit",options:e,variant:"filled",mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-filled-large",label:"Your favourite fruit",options:e,size:"large",variant:"filled",mdxType:"SelectField"}))}),Object(o.b)("p",null,"Full-width fields span the full width of a parent:"),Object(o.b)(u.c,{__position:3,__code:"() => {\n  const options = [\n    {\n      label: 'Apple',\n      value: 'apple',\n    },\n    {\n      label: 'Banana',\n      value: 'banana',\n    },\n    {\n      label: 'Grapefruit',\n      value: 'grapefruit',\n    },\n  ]\n  return (\n    <>\n      <SelectField\n        id=\"my-select-field-outline-full-width\"\n        label=\"Your favourite fruit\"\n        options={options}\n        fullWidth\n      />\n      <SelectField\n        id=\"my-select-field-filled-full-width\"\n        label=\"Your favourite fruit\"\n        options={options}\n        variant=\"filled\"\n        fullWidth\n      />\n    </>\n  )\n}",__scope:{props:t,DefaultLayout:r.a,Playground:u.c,Props:u.d,SelectField:d.a,DefaultLayout:r.a,_frontmatter:s},mdxType:"Playground"},()=>{const e=[{label:"Apple",value:"apple"},{label:"Banana",value:"banana"},{label:"Grapefruit",value:"grapefruit"}];return Object(o.b)(a.Fragment,null,Object(o.b)(d.a,{id:"my-select-field-outline-full-width",label:"Your favourite fruit",options:e,fullWidth:!0,mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-filled-full-width",label:"Your favourite fruit",options:e,variant:"filled",fullWidth:!0,mdxType:"SelectField"}))}),Object(o.b)("h2",{id:"invisible-label"},"Invisible Label"),Object(o.b)("p",null,"While it may be acceptable for login screens with just a few fields or for other\nsimple forms, it's dangerous to hide labels from users in most cases. Keep in\nmind you should ",Object(o.b)("strong",{parentName:"p"},"provide another visual clue")," so users know what to fill into\nthe input."),Object(o.b)(u.c,{__position:4,__code:"() => {\n  const options = [\n    {\n      label: 'Apple',\n      value: 'apple',\n    },\n    {\n      label: 'Banana',\n      value: 'banana',\n    },\n    {\n      label: 'Grapefruit',\n      value: 'grapefruit',\n    },\n  ]\n  return (\n    <>\n      <SelectField\n        id=\"my-select-field-outline-hidden-label\"\n        label=\"Your favourite fruit\"\n        isLabelVisible={false}\n        options={options}\n      />\n      <SelectField\n        id=\"my-select-field-filled-hidden-label\"\n        label=\"Your favourite fruit\"\n        isLabelVisible={false}\n        options={options}\n        variant=\"filled\"\n      />\n    </>\n  )\n}",__scope:{props:t,DefaultLayout:r.a,Playground:u.c,Props:u.d,SelectField:d.a,DefaultLayout:r.a,_frontmatter:s},mdxType:"Playground"},()=>{const e=[{label:"Apple",value:"apple"},{label:"Banana",value:"banana"},{label:"Grapefruit",value:"grapefruit"}];return Object(o.b)(a.Fragment,null,Object(o.b)(d.a,{id:"my-select-field-outline-hidden-label",label:"Your favourite fruit",isLabelVisible:!1,options:e,mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-filled-hidden-label",label:"Your favourite fruit",isLabelVisible:!1,options:e,variant:"filled",mdxType:"SelectField"}))}),Object(o.b)("h2",{id:"horizontal-layout"},"Horizontal Layout"),Object(o.b)("p",null,"The default vertical layout is very easy to use and work with. However, there\nare situations where horizontal layout suits better â€” and that's why React UI\nsupports this kind of layout as well."),Object(o.b)(u.c,{__position:5,__code:'() => {\n  const options = [\n    {\n      label: \'Apple\',\n      value: \'apple\',\n    },\n    {\n      label: \'Banana\',\n      value: \'banana\',\n    },\n    {\n      label: \'Grapefruit\',\n      value: \'grapefruit\',\n    },\n  ]\n  return (\n    <>\n      <SelectField\n        id="my-select-field-outline-horizontal"\n        label="Your favourite fruit"\n        layout="horizontal"\n        options={options}\n      />\n      <SelectField\n        id="my-select-field-filled-horizontal"\n        label="Your favourite fruit"\n        layout="horizontal"\n        options={options}\n        variant="filled"\n      />\n      <SelectField\n        id="my-select-field-outline-horizontal-full-width"\n        label="Your favourite fruit"\n        layout="horizontal"\n        options={options}\n        fullWidth\n      />\n      <SelectField\n        id="my-select-field-filled-horizontal-full-width"\n        label="Your favourite fruit"\n        layout="horizontal"\n        options={options}\n        variant="filled"\n        fullWidth\n      />\n      <SelectField\n        id="my-select-field-outline-horizontal-full-width-invisible-label"\n        isLabelVisible={false}\n        label="Your favourite fruit"\n        layout="horizontal"\n        options={options}\n        fullWidth\n      />\n      <SelectField\n        id="my-select-field-filled-horizontal-full-width-invisible-label"\n        isLabelVisible={false}\n        label="Your favourite fruit"\n        layout="horizontal"\n        options={options}\n        variant="filled"\n        fullWidth\n      />\n    </>\n  )\n}',__scope:{props:t,DefaultLayout:r.a,Playground:u.c,Props:u.d,SelectField:d.a,DefaultLayout:r.a,_frontmatter:s},mdxType:"Playground"},()=>{const e=[{label:"Apple",value:"apple"},{label:"Banana",value:"banana"},{label:"Grapefruit",value:"grapefruit"}];return Object(o.b)(a.Fragment,null,Object(o.b)(d.a,{id:"my-select-field-outline-horizontal",label:"Your favourite fruit",layout:"horizontal",options:e,mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-filled-horizontal",label:"Your favourite fruit",layout:"horizontal",options:e,variant:"filled",mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-outline-horizontal-full-width",label:"Your favourite fruit",layout:"horizontal",options:e,fullWidth:!0,mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-filled-horizontal-full-width",label:"Your favourite fruit",layout:"horizontal",options:e,variant:"filled",fullWidth:!0,mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-outline-horizontal-full-width-invisible-label",isLabelVisible:!1,label:"Your favourite fruit",layout:"horizontal",options:e,fullWidth:!0,mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-filled-horizontal-full-width-invisible-label",isLabelVisible:!1,label:"Your favourite fruit",layout:"horizontal",options:e,variant:"filled",fullWidth:!0,mdxType:"SelectField"}))}),Object(o.b)("h2",{id:"help-text"},"Help Text"),Object(o.b)("p",null,"You may provide an additional help text to clarify how the input should be\nfilled."),Object(o.b)(u.c,{__position:6,__code:'() => {\n  const options = [\n    {\n      label: \'Apple\',\n      value: \'apple\',\n    },\n    {\n      label: \'Banana\',\n      value: \'banana\',\n    },\n    {\n      label: \'Grapefruit\',\n      value: \'grapefruit\',\n    },\n  ]\n  return (\n    <>\n      <SelectField\n        id="my-select-field-outline-help-text"\n        label="Your favourite fruit"\n        options={options}\n        helperText="Choose one or more kinds of fruit to feel happy."\n      />\n      <SelectField\n        id="my-select-field-filled-help-text"\n        label="Your favourite fruit"\n        options={options}\n        variant="filled"\n        helperText="Choose one or more kinds of fruit to feel happy."\n      />\n      <SelectField\n        id="my-select-field-outline-help-text-horizontal"\n        label="Your favourite fruit"\n        layout="horizontal"\n        options={options}\n        helperText="Choose one or more kinds of fruit to feel happy."\n      />\n      <SelectField\n        id="my-select-field-filled-help-text-horizontal"\n        label="Your favourite fruit"\n        layout="horizontal"\n        options={options}\n        helperText="Choose one or more kinds of fruit to feel happy."\n        variant="filled"\n      />\n      <SelectField\n        id="my-select-field-outline-help-text-horizontal-full-width"\n        label="Your favourite fruit"\n        layout="horizontal"\n        options={options}\n        helperText="Choose one or more kinds of fruit to feel happy."\n        fullWidth\n      />\n      <SelectField\n        id="my-select-field-filled-help-text-horizontal-full-width"\n        label="Your favourite fruit"\n        layout="horizontal"\n        options={options}\n        variant="filled"\n        helperText="Choose one or more kinds of fruit to feel happy."\n        fullWidth\n      />\n    </>\n  )\n}',__scope:{props:t,DefaultLayout:r.a,Playground:u.c,Props:u.d,SelectField:d.a,DefaultLayout:r.a,_frontmatter:s},mdxType:"Playground"},()=>{const e=[{label:"Apple",value:"apple"},{label:"Banana",value:"banana"},{label:"Grapefruit",value:"grapefruit"}];return Object(o.b)(a.Fragment,null,Object(o.b)(d.a,{id:"my-select-field-outline-help-text",label:"Your favourite fruit",options:e,helperText:"Choose one or more kinds of fruit to feel happy.",mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-filled-help-text",label:"Your favourite fruit",options:e,variant:"filled",helperText:"Choose one or more kinds of fruit to feel happy.",mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-outline-help-text-horizontal",label:"Your favourite fruit",layout:"horizontal",options:e,helperText:"Choose one or more kinds of fruit to feel happy.",mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-filled-help-text-horizontal",label:"Your favourite fruit",layout:"horizontal",options:e,helperText:"Choose one or more kinds of fruit to feel happy.",variant:"filled",mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-outline-help-text-horizontal-full-width",label:"Your favourite fruit",layout:"horizontal",options:e,helperText:"Choose one or more kinds of fruit to feel happy.",fullWidth:!0,mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-filled-help-text-horizontal-full-width",label:"Your favourite fruit",layout:"horizontal",options:e,variant:"filled",helperText:"Choose one or more kinds of fruit to feel happy.",fullWidth:!0,mdxType:"SelectField"}))}),Object(o.b)("h2",{id:"states"},"States"),Object(o.b)("h3",{id:"validation-states"},"Validation States"),Object(o.b)("p",null,"Validation states visually present the result of validation of the input. You\nshould always ",Object(o.b)("strong",{parentName:"p"},"provide a help text for states other than valid")," so users know\nwhat happened and what action they should take or what options they have."),Object(o.b)(u.c,{__position:7,__code:'() => {\n  const options = [\n    {\n      label: \'Apple\',\n      value: \'apple\',\n    },\n    {\n      label: \'Banana\',\n      value: \'banana\',\n    },\n    {\n      label: \'Grapefruit\',\n      value: \'grapefruit\',\n    },\n  ]\n  return (\n    <>\n      <SelectField\n        id="my-select-field-outline-success"\n        label="Your favourite fruit"\n        options={options}\n        validationState="valid"\n        value="apple"\n        helperText="Great, they\'re in stock!"\n        changeHandler={() => {}}\n        required\n      />\n      <SelectField\n        id="my-select-field-outline-warning"\n        label="Your favourite fruit"\n        options={options}\n        validationState="warning"\n        value="grapefruit"\n        helperText="Oh, really?"\n        changeHandler={() => {}}\n        required\n      />\n      <SelectField\n        id="my-select-field-outline-error"\n        label="Your favourite fruit"\n        options={options}\n        validationState="invalid"\n        helperText="You must select at least one kind of fruit."\n        required\n      />\n      <SelectField\n        id="my-select-field-filled-success"\n        label="Your favourite fruit"\n        options={options}\n        validationState="valid"\n        value="apple"\n        variant="filled"\n        helperText="Great, they\'re in stock!"\n        changeHandler={() => {}}\n        required\n      />\n      <SelectField\n        id="my-select-field-filled-warning"\n        label="Your favourite fruit"\n        options={options}\n        validationState="warning"\n        value="grapefruit"\n        variant="filled"\n        helperText="Oh, really?"\n        changeHandler={() => {}}\n        required\n      />\n      <SelectField\n        id="my-select-field-filled-error"\n        label="Your favourite fruit"\n        options={options}\n        validationState="invalid"\n        variant="filled"\n        helperText="You must select at least one kind of fruit."\n        required\n      />\n    </>\n  )\n}',__scope:{props:t,DefaultLayout:r.a,Playground:u.c,Props:u.d,SelectField:d.a,DefaultLayout:r.a,_frontmatter:s},mdxType:"Playground"},()=>{const e=[{label:"Apple",value:"apple"},{label:"Banana",value:"banana"},{label:"Grapefruit",value:"grapefruit"}];return Object(o.b)(a.Fragment,null,Object(o.b)(d.a,{id:"my-select-field-outline-success",label:"Your favourite fruit",options:e,validationState:"valid",value:"apple",helperText:"Great, they're in stock!",changeHandler:()=>{},required:!0,mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-outline-warning",label:"Your favourite fruit",options:e,validationState:"warning",value:"grapefruit",helperText:"Oh, really?",changeHandler:()=>{},required:!0,mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-outline-error",label:"Your favourite fruit",options:e,validationState:"invalid",helperText:"You must select at least one kind of fruit.",required:!0,mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-filled-success",label:"Your favourite fruit",options:e,validationState:"valid",value:"apple",variant:"filled",helperText:"Great, they're in stock!",changeHandler:()=>{},required:!0,mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-filled-warning",label:"Your favourite fruit",options:e,validationState:"warning",value:"grapefruit",variant:"filled",helperText:"Oh, really?",changeHandler:()=>{},required:!0,mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-filled-error",label:"Your favourite fruit",options:e,validationState:"invalid",variant:"filled",helperText:"You must select at least one kind of fruit.",required:!0,mdxType:"SelectField"}))}),Object(o.b)("h3",{id:"disabled-state"},"Disabled State"),Object(o.b)("p",null,"It's possible to disable just some options or the whole input."),Object(o.b)(u.c,{__position:8,__code:'() => {\n  const options = [\n    {\n      label: \'Apple\',\n      value: \'apple\',\n    },\n    {\n      disabled: true,\n      label: \'Banana\',\n      value: \'banana\',\n    },\n    {\n      label: \'Grapefruit\',\n      value: \'grapefruit\',\n    },\n  ]\n  return (\n    <>\n      <SelectField\n        id="my-select-field-outline-disabled-option"\n        label="Your favourite fruit"\n        options={options}\n        value="apple"\n        changeHandler={() => {}}\n      />\n      <SelectField\n        id="my-select-field-filled-disabled-option"\n        label="Your favourite fruit"\n        options={options}\n        value="apple"\n        changeHandler={() => {}}\n        variant="filled"\n      />\n      <SelectField\n        id="my-select-field-outline-disabled"\n        label="Your favourite fruit"\n        options={options}\n        value="apple"\n        changeHandler={() => {}}\n        disabled\n      />\n      <SelectField\n        id="my-select-field-filled-disabled"\n        label="Your favourite fruit"\n        options={options}\n        value="apple"\n        changeHandler={() => {}}\n        variant="filled"\n        disabled\n      />\n    </>\n  )\n}',__scope:{props:t,DefaultLayout:r.a,Playground:u.c,Props:u.d,SelectField:d.a,DefaultLayout:r.a,_frontmatter:s},mdxType:"Playground"},()=>{const e=[{label:"Apple",value:"apple"},{disabled:!0,label:"Banana",value:"banana"},{label:"Grapefruit",value:"grapefruit"}];return Object(o.b)(a.Fragment,null,Object(o.b)(d.a,{id:"my-select-field-outline-disabled-option",label:"Your favourite fruit",options:e,value:"apple",changeHandler:()=>{},mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-filled-disabled-option",label:"Your favourite fruit",options:e,value:"apple",changeHandler:()=>{},variant:"filled",mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-outline-disabled",label:"Your favourite fruit",options:e,value:"apple",changeHandler:()=>{},disabled:!0,mdxType:"SelectField"}),Object(o.b)(d.a,{id:"my-select-field-filled-disabled",label:"Your favourite fruit",options:e,value:"apple",changeHandler:()=>{},variant:"filled",disabled:!0,mdxType:"SelectField"}))}),Object(o.b)("h2",{id:"api"},"API"),Object(o.b)(u.d,{of:d.a,mdxType:"Props"}),Object(o.b)("hr",null),Object(o.b)("p",null,"Next: ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/components/ui/table"}),"Table â†’")))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/lib/components/ui/SelectField/README.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-lib-components-ui-select-field-readme-mdx-5c6e98b93108b6c0b9a1.js.map