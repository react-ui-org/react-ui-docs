(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{RJhb:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return p})),t.d(a,"default",(function(){return C}));var r=t("k0FJ"),o=t("yHgN"),d=(t("mXGw"),t("/FXl")),n=t("TjRS"),i=t("ZFoC"),l=t("8X2u"),c=t("HcOX"),s=t("3DVT"),b=t("Zdvd"),u=t("NH5+");t("aD51");const p={};void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/lib/components/ui/Card/README.mdx"}});const m={_frontmatter:p},y=n.a;function C(e){let{components:a}=e,t=Object(o.a)(e,["components"]);return Object(d.b)(y,Object(r.a)({},m,t,{components:a,mdxType:"MDXLayout"}),Object(d.b)("h1",{id:"card"},"Card"),Object(d.b)("p",null,"Cards contain content and actions about a single subject."),Object(d.b)("h2",{id:"basic-usage"},"Basic Usage"),Object(d.b)("p",null,"To implement the Card component, you need to import at least Card and\n",Object(d.b)("a",Object(r.a)({parentName:"p"},{href:"#cardbody"}),"CardBody")," components:"),Object(d.b)("pre",null,Object(d.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import { Card, CardBody } from '@react-ui-org/react-ui';\n")),Object(d.b)("p",null,"And use it:"),Object(d.b)(i.c,{__position:0,__code:"<Card>\n  <CardBody>Hello!</CardBody>\n</Card>",__scope:{props:t,DefaultLayout:n.a,Playground:i.c,Props:i.d,Button:l.a,ScrollView:c.a,Card:s.a,CardBody:b.a,CardFooter:u.a,DefaultLayout:n.a,_frontmatter:p},mdxType:"Playground"},Object(d.b)(s.a,{mdxType:"Card"},Object(d.b)(b.a,{mdxType:"CardBody"},"Hello!"))),Object(d.b)("p",null,"See ",Object(d.b)("a",Object(r.a)({parentName:"p"},{href:"#api"}),"API")," for all available options."),Object(d.b)("h2",{id:"general-guidelines"},"General Guidelines"),Object(d.b)("ul",null,Object(d.b)("li",{parentName:"ul"},Object(d.b)("p",{parentName:"li"},"The default (flat) card is ",Object(d.b)("strong",{parentName:"p"},"designed for a non-white background.")," You may\nwant to either use a different ",Object(d.b)("a",Object(r.a)({parentName:"p"},{href:"#variants"}),"variant")," or\n",Object(d.b)("a",Object(r.a)({parentName:"p"},{href:"/customize/theming"}),"customize")," the default appearance to make it stand\nout on white surfaces.")),Object(d.b)("li",{parentName:"ul"},Object(d.b)("p",{parentName:"li"},"Use options ",Object(d.b)("a",Object(r.a)({parentName:"p"},{href:"#cardbody"}),"CardBody")," and ",Object(d.b)("a",Object(r.a)({parentName:"p"},{href:"#cardfooter"}),"CardFooter")," components to\nprovide your content with expected spacing.")),Object(d.b)("li",{parentName:"ul"},Object(d.b)("p",{parentName:"li"},"Use ",Object(d.b)("strong",{parentName:"p"},"medium or low-emphasis buttons")," when there are more cards, eg. in a\ngrid. It will help you keep the UI clean and easy to scan."))),Object(d.b)("h2",{id:"card-composition"},"Card Composition"),Object(d.b)("p",null,"Aside from the ",Object(d.b)("a",Object(r.a)({parentName:"p"},{href:"#cardbody"}),"CardBody")," element, you can add a\n",Object(d.b)("a",Object(r.a)({parentName:"p"},{href:"#cardfooter"}),"CardFooter")," to better separate your card's actions from the rest\nof the content."),Object(d.b)("p",null,"Import all necessary components:"),Object(d.b)("pre",null,Object(d.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import { Card, CardBody, CardFooter } from '@react-ui-org/react-ui';\n")),Object(d.b)("p",null,"And use them:"),Object(d.b)(i.c,{__position:1,__code:'<Card>\n  <CardBody>Hello! I&apos;m card with footer.</CardBody>\n  <CardFooter>\n    <Button label="Read more" priority="outline" />\n  </CardFooter>\n</Card>',__scope:{props:t,DefaultLayout:n.a,Playground:i.c,Props:i.d,Button:l.a,ScrollView:c.a,Card:s.a,CardBody:b.a,CardFooter:u.a,DefaultLayout:n.a,_frontmatter:p},mdxType:"Playground"},Object(d.b)(s.a,{mdxType:"Card"},Object(d.b)(b.a,{mdxType:"CardBody"},"Hello! I'm card with footer."),Object(d.b)(u.a,{mdxType:"CardFooter"},Object(d.b)(l.a,{label:"Read more",priority:"outline",mdxType:"Button"})))),Object(d.b)("p",null,"ðŸ‘‰ CardFooter is required in case you need to align the actions of multiple\ncards with varying height of content."),Object(d.b)("h2",{id:"raised-card"},"Raised Card"),Object(d.b)("p",null,"Add optional shadow to lift the card above surface."),Object(d.b)(i.c,{__position:2,__code:'<Card raised>\n  <CardBody>Hello! I&apos;m raised card with footer.</CardBody>\n  <CardFooter>\n    <Button label="Read more" priority="outline" />\n  </CardFooter>\n</Card>',__scope:{props:t,DefaultLayout:n.a,Playground:i.c,Props:i.d,Button:l.a,ScrollView:c.a,Card:s.a,CardBody:b.a,CardFooter:u.a,DefaultLayout:n.a,_frontmatter:p},mdxType:"Playground"},Object(d.b)(s.a,{raised:!0,mdxType:"Card"},Object(d.b)(b.a,{mdxType:"CardBody"},"Hello! I'm raised card with footer."),Object(d.b)(u.a,{mdxType:"CardFooter"},Object(d.b)(l.a,{label:"Read more",priority:"outline",mdxType:"Button"})))),Object(d.b)("h2",{id:"bordered-card"},"Bordered Card"),Object(d.b)("p",null,"Use a border when you need to visually separate the card from its background."),Object(d.b)(i.c,{__position:3,__code:'<Card variant="bordered">\n  <CardBody>Hello! I&apos;m card with border and footer.</CardBody>\n  <CardFooter>\n    <Button label="Read more" priority="outline" />\n  </CardFooter>\n</Card>\n<Card variant="bordered" raised>\n  <CardBody>Hello! I&apos;m raised card with border and footer.</CardBody>\n  <CardFooter>\n    <Button label="Read more" priority="outline" />\n  </CardFooter>\n</Card>',__scope:{props:t,DefaultLayout:n.a,Playground:i.c,Props:i.d,Button:l.a,ScrollView:c.a,Card:s.a,CardBody:b.a,CardFooter:u.a,DefaultLayout:n.a,_frontmatter:p},mdxType:"Playground"},Object(d.b)(s.a,{variant:"bordered",mdxType:"Card"},Object(d.b)(b.a,{mdxType:"CardBody"},"Hello! I'm card with border and footer."),Object(d.b)(u.a,{mdxType:"CardFooter"},Object(d.b)(l.a,{label:"Read more",priority:"outline",mdxType:"Button"}))),Object(d.b)(s.a,{variant:"bordered",raised:!0,mdxType:"Card"},Object(d.b)(b.a,{mdxType:"CardBody"},"Hello! I'm raised card with border and footer."),Object(d.b)(u.a,{mdxType:"CardFooter"},Object(d.b)(l.a,{label:"Read more",priority:"outline",mdxType:"Button"})))),Object(d.b)("h2",{id:"dense-card"},"Dense Card"),Object(d.b)("p",null,"Use a dense card when you need to save space on screen. Other elements in the\ncard should be also smaller to keep the card contained and easy to scan."),Object(d.b)(i.c,{__position:4,__code:'<Card dense raised>\n  <CardBody>\n    <small>Hello! I&apos;m dense card. Everything is smaller here.</small>\n  </CardBody>\n  <CardFooter>\n    <Button label="Read more" priority="outline" size="small" />\n  </CardFooter>\n</Card>',__scope:{props:t,DefaultLayout:n.a,Playground:i.c,Props:i.d,Button:l.a,ScrollView:c.a,Card:s.a,CardBody:b.a,CardFooter:u.a,DefaultLayout:n.a,_frontmatter:p},mdxType:"Playground"},Object(d.b)(s.a,{dense:!0,raised:!0,mdxType:"Card"},Object(d.b)(b.a,{mdxType:"CardBody"},Object(d.b)("small",null,"Hello! I'm dense card. Everything is smaller here.")),Object(d.b)(u.a,{mdxType:"CardFooter"},Object(d.b)(l.a,{label:"Read more",priority:"outline",size:"small",mdxType:"Button"})))),Object(d.b)("h2",{id:"scrollable-card"},"Scrollable Card"),Object(d.b)("p",null,"Combine Card with ",Object(d.b)("a",Object(r.a)({parentName:"p"},{href:"/components/ui/scroll-view"}),"ScrollView")," to enable scrolling\nfor card content."),Object(d.b)(i.c,{__position:5,__code:"<div\n  style={{\n    display: 'flex',\n    height: '200px',\n  }}\n>\n  <Card raised>\n    <ScrollView>\n      <CardBody>\n        Hello! I&apos;m scrollable card. Lorem ipsum dolor sit amet,\n        consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean\n        massa. Cum sociis natoque penatibus et magnis dis parturient montes,\n        nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque\n        eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede\n        justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim\n        justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum\n        felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus\n        elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo\n        ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam\n        lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus\n        viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean\n        imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper\n        ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus\n        eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing\n        sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar,\n        hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus.\n      </CardBody>\n    </ScrollView>\n  </Card>\n</div>",__scope:{props:t,DefaultLayout:n.a,Playground:i.c,Props:i.d,Button:l.a,ScrollView:c.a,Card:s.a,CardBody:b.a,CardFooter:u.a,DefaultLayout:n.a,_frontmatter:p},mdxType:"Playground"},Object(d.b)("div",{style:{display:"flex",height:"200px"}},Object(d.b)(s.a,{raised:!0,mdxType:"Card"},Object(d.b)(c.a,{mdxType:"ScrollView"},Object(d.b)(b.a,{mdxType:"CardBody"},"Hello! I'm scrollable card. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus."))))),Object(d.b)("h2",{id:"card-types"},"Card Types"),Object(d.b)("p",null,"All ",Object(d.b)("a",Object(r.a)({parentName:"p"},{href:"/foundation/colors#ui-colors"}),"UI colors")," (success, warning, error, help,\ninfo, and note) are supported by cards to cover various needs of your app. The\nbordered card type is forced automatically to make sure the border is visible."),Object(d.b)(i.c,{__position:6,__code:'<Card type="success">\n  <CardBody>Hello! I&apos;m success variant of card.</CardBody>\n  <CardFooter>\n    <Button label="Read more" priority="outline" variant="success" />\n  </CardFooter>\n</Card>\n<Card type="warning">\n  <CardBody>Hello! I&apos;m warning variant of card.</CardBody>\n  <CardFooter>\n    <Button label="Read more" priority="outline" variant="warning" />\n  </CardFooter>\n</Card>\n<Card type="error">\n  <CardBody>Hello! I&apos;m error variant of card.</CardBody>\n  <CardFooter>\n    <Button label="Read more" priority="outline" variant="danger" />\n  </CardFooter>\n</Card>\n<Card type="help">\n  <CardBody>Hello! I&apos;m help variant of card.</CardBody>\n  <CardFooter>\n    <Button label="Read more" priority="outline" variant="dark" />\n  </CardFooter>\n</Card>\n<Card type="info">\n  <CardBody>Hello! I&apos;m info variant of card.</CardBody>\n  <CardFooter>\n    <Button label="Read more" priority="outline" variant="dark" />\n  </CardFooter>\n</Card>\n<Card type="note">\n  <CardBody>Hello! I&apos;m note variant of card.</CardBody>\n  <CardFooter>\n    <Button label="Read more" priority="outline" variant="dark" />\n  </CardFooter>\n</Card>',__scope:{props:t,DefaultLayout:n.a,Playground:i.c,Props:i.d,Button:l.a,ScrollView:c.a,Card:s.a,CardBody:b.a,CardFooter:u.a,DefaultLayout:n.a,_frontmatter:p},mdxType:"Playground"},Object(d.b)(s.a,{type:"success",mdxType:"Card"},Object(d.b)(b.a,{mdxType:"CardBody"},"Hello! I'm success variant of card."),Object(d.b)(u.a,{mdxType:"CardFooter"},Object(d.b)(l.a,{label:"Read more",priority:"outline",variant:"success",mdxType:"Button"}))),Object(d.b)(s.a,{type:"warning",mdxType:"Card"},Object(d.b)(b.a,{mdxType:"CardBody"},"Hello! I'm warning variant of card."),Object(d.b)(u.a,{mdxType:"CardFooter"},Object(d.b)(l.a,{label:"Read more",priority:"outline",variant:"warning",mdxType:"Button"}))),Object(d.b)(s.a,{type:"error",mdxType:"Card"},Object(d.b)(b.a,{mdxType:"CardBody"},"Hello! I'm error variant of card."),Object(d.b)(u.a,{mdxType:"CardFooter"},Object(d.b)(l.a,{label:"Read more",priority:"outline",variant:"danger",mdxType:"Button"}))),Object(d.b)(s.a,{type:"help",mdxType:"Card"},Object(d.b)(b.a,{mdxType:"CardBody"},"Hello! I'm help variant of card."),Object(d.b)(u.a,{mdxType:"CardFooter"},Object(d.b)(l.a,{label:"Read more",priority:"outline",variant:"dark",mdxType:"Button"}))),Object(d.b)(s.a,{type:"info",mdxType:"Card"},Object(d.b)(b.a,{mdxType:"CardBody"},"Hello! I'm info variant of card."),Object(d.b)(u.a,{mdxType:"CardFooter"},Object(d.b)(l.a,{label:"Read more",priority:"outline",variant:"dark",mdxType:"Button"}))),Object(d.b)(s.a,{type:"note",mdxType:"Card"},Object(d.b)(b.a,{mdxType:"CardBody"},"Hello! I'm note variant of card."),Object(d.b)(u.a,{mdxType:"CardFooter"},Object(d.b)(l.a,{label:"Read more",priority:"outline",variant:"dark",mdxType:"Button"})))),Object(d.b)("h2",{id:"states"},"States"),Object(d.b)("h3",{id:"disabled-state"},"Disabled State"),Object(d.b)("p",null,"Entire card can appear disabled. However, you'll still need to manually disable\nits interactive elements to disallow user's interaction."),Object(d.b)(i.c,{__position:7,__code:'<Card disabled>\n  <CardBody>Hello! I&apos;m a disabled card.</CardBody>\n  <CardFooter>\n    <Button label="Read more" priority="outline" disabled />\n  </CardFooter>\n</Card>\n<Card disabled raised>\n  <CardBody>Hello! I&apos;m a disabled raised card.</CardBody>\n  <CardFooter>\n    <Button label="Read more" priority="outline" disabled />\n  </CardFooter>\n</Card>\n<Card variant="bordered" disabled>\n  <CardBody>Hello! I&apos;m a disabled bordered card.</CardBody>\n  <CardFooter>\n    <Button label="Read more" priority="outline" disabled />\n  </CardFooter>\n</Card>\n<Card type="success" disabled>\n  <CardBody>Hello! I&apos;m a disabled success variant of card.</CardBody>\n  <CardFooter>\n    <Button label="Read more" priority="outline" variant="success" disabled />\n  </CardFooter>\n</Card>',__scope:{props:t,DefaultLayout:n.a,Playground:i.c,Props:i.d,Button:l.a,ScrollView:c.a,Card:s.a,CardBody:b.a,CardFooter:u.a,DefaultLayout:n.a,_frontmatter:p},mdxType:"Playground"},Object(d.b)(s.a,{disabled:!0,mdxType:"Card"},Object(d.b)(b.a,{mdxType:"CardBody"},"Hello! I'm a disabled card."),Object(d.b)(u.a,{mdxType:"CardFooter"},Object(d.b)(l.a,{label:"Read more",priority:"outline",disabled:!0,mdxType:"Button"}))),Object(d.b)(s.a,{disabled:!0,raised:!0,mdxType:"Card"},Object(d.b)(b.a,{mdxType:"CardBody"},"Hello! I'm a disabled raised card."),Object(d.b)(u.a,{mdxType:"CardFooter"},Object(d.b)(l.a,{label:"Read more",priority:"outline",disabled:!0,mdxType:"Button"}))),Object(d.b)(s.a,{variant:"bordered",disabled:!0,mdxType:"Card"},Object(d.b)(b.a,{mdxType:"CardBody"},"Hello! I'm a disabled bordered card."),Object(d.b)(u.a,{mdxType:"CardFooter"},Object(d.b)(l.a,{label:"Read more",priority:"outline",disabled:!0,mdxType:"Button"}))),Object(d.b)(s.a,{type:"success",disabled:!0,mdxType:"Card"},Object(d.b)(b.a,{mdxType:"CardBody"},"Hello! I'm a disabled success variant of card."),Object(d.b)(u.a,{mdxType:"CardFooter"},Object(d.b)(l.a,{label:"Read more",priority:"outline",variant:"success",disabled:!0,mdxType:"Button"})))),Object(d.b)("h2",{id:"api"},"API"),Object(d.b)(i.d,{of:s.a,mdxType:"Props"}),Object(d.b)("h3",{id:"cardbody"},"CardBody"),Object(d.b)("p",null,"Space your content with CardBody. See ",Object(d.b)("a",Object(r.a)({parentName:"p"},{href:"#card-composition"}),"Card Composition")," for\nall details."),Object(d.b)(i.d,{of:b.a,mdxType:"Props"}),Object(d.b)("h3",{id:"cardfooter"},"CardFooter"),Object(d.b)("p",null,"Separate your card actions with CardFooter. See\n",Object(d.b)("a",Object(r.a)({parentName:"p"},{href:"#card-composition"}),"Card Composition")," for all details."),Object(d.b)(i.d,{of:u.a,mdxType:"Props"}),Object(d.b)("hr",null),Object(d.b)("p",null,"Next: ",Object(d.b)("a",Object(r.a)({parentName:"p"},{href:"/components/ui/checkbox-field"}),"CheckboxField â†’")))}void 0!==C&&C&&C===Object(C)&&Object.isExtensible(C)&&!C.hasOwnProperty("__filemeta")&&Object.defineProperty(C,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/lib/components/ui/Card/README.mdx"}}),C.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-lib-components-ui-card-readme-mdx-5bb49c800d71d59256fd.js.map