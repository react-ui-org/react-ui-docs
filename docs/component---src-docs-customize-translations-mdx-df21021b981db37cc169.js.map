{"version":3,"sources":["webpack:///../src/docs/customize/translations.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yRAQaA,EAAe,Q,2OAC5B,MAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,gBADR,gBAGA,kLAEA,2EAA0D,0BAAYC,WAAW,KAAvB,gCAA1D,KACA,uEAAsD,0BAAYA,WAAW,KAAvB,eAAtD,WACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,4DAIL,iEAAgD,0BAAYA,WAAW,KAAvB,eAAhD,SAAiH,0BAAYA,WAAW,KAAvB,gBAAjH,iBACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,0Q,yOAuBTJ,EAAWK,gBAAiB","file":"component---src-docs-customize-translations-mdx-df21021b981db37cc169.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-ui/react-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"translations\"\n    }}>{`Translations`}</h1>\n    <p>{`Some components may contain texts which improve components' accessibility.\nAll texts are in English by default and can be translated to other languages.`}</p>\n    <p>{`Structure of translations can be found in the file `}<inlineCode parentName=\"p\">{`src/lib/translations/en.json`}</inlineCode>{`.`}</p>\n    <p>{`To use custom translations, you need to import `}<inlineCode parentName=\"p\">{`RUIProvider`}</inlineCode>{` first:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { RUIProvider } from '@react-ui-org/react-ui';\n`}</code></pre>\n    <p>{`Then wrap application (or its part) with `}<inlineCode parentName=\"p\">{`RUIProvider`}</inlineCode>{` with `}<inlineCode parentName=\"p\">{`translations`}</inlineCode>{` prop object.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<RUIProvider translations={{\n    Alert: {\n      close: 'Close',\n    },\n    Modal: {\n      close: 'Close',\n    },\n    ScrollView: {\n      next: 'Next',\n      previous: 'Previous',\n    },\n  }}>\n  <Modal>\n    // ...\n  </Modal>\n</RUIProvider>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}