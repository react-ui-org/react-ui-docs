{"version":3,"sources":["webpack:///../src/docs/contribute/composition.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wRAQaA,EAAe,Q,2OAC5B,MAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,eADR,eAGA,2EACA,sBACE,kBAAIC,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,8BAAnB,6CACN,0BAAYA,WAAW,KAAvB,SADM,KACiD,0BAAYA,WAAW,KAAvB,UADjD,KACyG,0BAAYA,WAAW,KAAvB,aADzG,WAGF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,kCAAnB,8EAEA,kBAAIA,WAAW,MACb,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,4BAAnB,wFAC8B,0BAAYA,WAAW,KAAvB,QAD9B,MACqF,0BAAYA,WAAW,KAAvB,YADrF,MAGF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,2BAAnB,yEACY,0BAAYA,WAAW,KAAvB,cADZ,MACyE,0BAAYA,WAAW,KAAvB,yBADzE,OACkJ,0BAAYA,WAAW,KAAvB,QADlJ,OAEV,0BAAYA,WAAW,KAAvB,YAFU,MAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,8CAAnB,SAA2G,0BAAYA,WAAW,KAAvB,QAA3G,MAAkK,0BAAYA,WAAW,KAAvB,YAAlK,mBACI,0BAAYA,WAAW,KAAvB,cADJ,gBAC2E,0BAAYA,WAAW,KAAvB,WAD3E,MACqI,0BAAYA,WAAW,KAAvB,eADrI,mBAEI,0BAAYA,WAAW,KAAvB,gBAFJ,wBAMN,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,kCAAnB,yEAC0B,0BAAYA,WAAW,KAAvB,cAD1B,mBACoG,0BAAYA,WAAW,KAAvB,iBADpG,MAEN,0BAAYA,WAAW,KAAvB,aAFM,KAEqD,0BAAYA,WAAW,KAAvB,UAFrD,WAEmH,0BAAYA,WAAW,KAAvB,eAFnH,MAEiL,0BAAYA,WAAW,KAAvB,UAFjL,OAKJ,iMAEe,iBAAGA,WAAW,IACzB,KAAQ,mBADG,kBAFf,yB,yOASJJ,EAAWK,gBAAiB","file":"component---src-docs-contribute-composition-mdx-c74f8e3c9c923a92e17f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-ui/react-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"composition\"\n    }}>{`Composition`}</h1>\n    <p>{`There are several types of composition approaches.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Self-contained components:`}</strong>{` just a single component is needed. E.g.\n`}<inlineCode parentName=\"p\">{`Alert`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Button`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`TextField`}</inlineCode>{`, etc.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Components with subcomponents:`}</strong>{` subcomponents cannot exist on their own\noutside their parent components.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`Mandatory subcomponents:`}</strong>{` subcomponent must be used at least once in\norder for the composition to work. E.g. `}<inlineCode parentName=\"p\">{`Tabs`}</inlineCode>{` + `}<inlineCode parentName=\"p\">{`TabsItem`}</inlineCode>{`.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`Optional subcomponents:`}</strong>{` optional subcomponents may be used to achieve\nspecial results. E.g. `}<inlineCode parentName=\"p\">{`FormLayout`}</inlineCode>{` + `}<inlineCode parentName=\"p\">{`FormLayoutCustomField`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`Grid`}</inlineCode>{` +\n`}<inlineCode parentName=\"p\">{`GridSpan`}</inlineCode>{`.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`Both mandatory and optional subcomponents:`}</strong>{` e.g. `}<inlineCode parentName=\"p\">{`Card`}</inlineCode>{` + `}<inlineCode parentName=\"p\">{`CardBody`}</inlineCode>{`\n(mandatory) + `}<inlineCode parentName=\"p\">{`CardFooter`}</inlineCode>{` (optional), `}<inlineCode parentName=\"p\">{`Toolbar`}</inlineCode>{` + `}<inlineCode parentName=\"p\">{`ToolbarItem`}</inlineCode>{`\n(mandatory) + `}<inlineCode parentName=\"p\">{`ToolbarGroup`}</inlineCode>{` (optional), etc.`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Wrappers for other components:`}</strong>{` component is designed to wrap other\nself-contained components. E.g. `}<inlineCode parentName=\"p\">{`FormLayout`}</inlineCode>{` + form fields (`}<inlineCode parentName=\"p\">{`CheckboxField`}</inlineCode>{`,\n`}<inlineCode parentName=\"p\">{`TextField`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Toggle`}</inlineCode>{`, â€¦) or `}<inlineCode parentName=\"p\">{`ButtonGroup`}</inlineCode>{` + `}<inlineCode parentName=\"p\">{`Button`}</inlineCode>{`.`}</p>\n      </li>\n    </ol>\n    <p>{`While authoring self-contained components (1) and wrappers (3) is quite\nstraightforward, components with subcomponents require special attention when\nstyling. Head to `}<a parentName=\"p\" {...{\n        \"href\": \"/contribute/css\"\n      }}>{`CSS Guidelines`}</a>{` to learn more.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}