{"version":3,"sources":["webpack:///../src/docs/getting-started/usage.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"kQAMO,MAAMA,EAAe,Q,oNAE5B,MAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,uBADR,uBAGA,sTAG2C,0BAAYC,WAAW,KAAvB,UAH3C,aAIA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,6EAIL,iBAAQ,CACN,GAAM,SADR,SAGA,+HACmB,0BAAYA,WAAW,KAAvB,UADnB,aAEA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,uIAOL,kHAEA,iBAAQ,CACN,GAAM,kBADR,kBAGA,yCACF,6BAAGA,WAAW,KAAQ,CAChB,KAAQ,4EADd,SADE,sIAMA,sBACE,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,UAApB,6FACkB,6BAAGA,WAAW,MAAS,CACrC,KAAQ,uBADM,WADlB,cAIA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,eAApB,mIAEJ,0BAAYA,WAAW,MAAvB,iBAFI,4DAIF,gGACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,oHAKL,oDAAmC,sBAAQA,WAAW,KAAnB,yBAAnC,kFAEA,qNAGA,iBAAQ,CACN,GAAM,cADR,cAGA,+EACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,yFAML,iBAAQ,CACN,GAAM,gBADR,gBAGA,sCACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,2bAmBL,qCACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,+VAcL,iBAAQ,CACN,GAAM,eADR,eAGA,uFACF,6BAAGA,WAAW,KAAQ,CAChB,KAAQ,4BADd,cADE,KAG6B,6BAAGA,WAAW,KAAQ,CAC/C,KAAQ,yBADiB,WAH7B,MAMF,6BAAGA,WAAW,KAAQ,CAChB,KAAQ,wBADd,UANE,UASA,4GAEA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,2KAML,gDACF,6BAAGA,WAAW,KAAQ,CAChB,KAAQ,mDADd,yBADE,yEAKA,uBACA,8BAAa,6BAAGA,WAAW,KAAQ,CAC/B,KAAQ,0CADC,+B,kNAOjBJ,EAAWK,gBAAiB","file":"component---src-docs-getting-started-usage-mdx-9e95de0d495c004381fa.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-ui/react-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h1>\n    <h2 {...{\n      \"id\": \"responsive-meta-tag\"\n    }}>{`Responsive Meta Tag`}</h2>\n    <p>{`React UI is designed and developed mobile-first, a strategy in which we first\nwrite code for mobile devices, and then scale up components as necessary using\nCSS media queries. To ensure proper rendering and touch zooming for all devices,\nadd the responsive viewport meta tag to your `}<inlineCode parentName=\"p\">{`<head>`}</inlineCode>{` element:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"fonts\"\n    }}>{`Fonts`}</h2>\n    <p>{`React UI is designed with the Titillium Web font. Add it to your project eg. via\nGoogle Fonts in your `}<inlineCode parentName=\"p\">{`<head>`}</inlineCode>{` element:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<link\n  href=\"https://fonts.googleapis.com/css2?family=Titillium+Web:wght@300;400;600;700&display=swap\"\n  rel=\"stylesheet\"\n/>\n`}</code></pre>\n    <p>{`Remember to include all necessary font weights (and only them ‚Äî for better\nperformance).`}</p>\n    <h2 {...{\n      \"id\": \"foundation-css\"\n    }}>{`Foundation CSS`}</h2>\n    <p>{`React UI honors\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.xfive.co/blog/itcss-scalable-maintainable-css-architecture/\"\n      }}>{`ITCSS`}</a>{`\nprinciples to make sure that its CSS code base will work and perform well even\nin large scale. There are two global CSS layers:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Theme:`}</strong>{` a collection of hundreds of CSS custom properties that define the\nlook of your app. See `}<a parentName=\"li\" {...{\n          \"href\": \"/customize/theming\"\n        }}>{`Theming`}</a>{` for more.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Foundation:`}</strong>{` the ground-zero CSS for React UI components. Includes global\nresets and fixes rendering inconsistencies across browsers with\n`}<inlineCode parentName=\"li\">{`normalize.css`}</inlineCode>{`. Not to be confused with the Foundation CSS framework.`}</li>\n    </ul>\n    <p>{`Import the two global CSS layers as early as possible in your document:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import '@react-ui-org/react-ui/src/lib/theme.scss';\nimport '@react-ui-org/react-ui/src/lib/foundation.scss';\n`}</code></pre>\n    <p>{`‚ö†Ô∏è As of now, you will need `}<strong parentName=\"p\">{`working SASS pipeline`}</strong>{` for this to work. This is\nto be changed to a ready-to-use CSS in the future.`}</p>\n    <p>{`Ô∏èüëâÔ∏è Because of using CSS custom properties, it is technically possible to import\nthe theme layer anywhere later in the app. But it's a nice habit to declare\nvariables before using them.`}</p>\n    <h2 {...{\n      \"id\": \"components\"\n    }}>{`Components`}</h2>\n    <p>{`Import and use any of React UI components in your app:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Button } from '@react-ui-org/react-ui';\n\n<Button label=\"My Button\" />\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"full-example\"\n    }}>{`Full Example`}</h2>\n    <p>{`Example HTML:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <title>React UI Example</title>\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=Titillium+Web:wght@300;400;600;700&display=swap\"\n      rel=\"stylesheet\"\n    />\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <script src=\"app.js\"></script>\n  </body>\n</html>\n`}</code></pre>\n    <p>{`Example JSX:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button } from '@react-ui-org/react-ui';\nimport '@react-ui-org/react-ui/src/lib/theme.scss';\nimport '@react-ui-org/react-ui/src/lib/foundation.scss';\n\nconst App = () => (\n  <Button label=\"My Button\" />\n);\n\nReactDOM.render(<App />, document.querySelector('#app'));\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"css-helpers\"\n    }}>{`CSS Helpers`}</h2>\n    <p>{`CSS helpers are tiny CSS classes that can handle details like\n`}<a parentName=\"p\" {...{\n        \"href\": \"/css-helpers/typography\"\n      }}>{`typography`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"/css-helpers/spacing\"\n      }}>{`spacing`}</a>{`,\n`}<a parentName=\"p\" {...{\n        \"href\": \"/css-helpers/colors\"\n      }}>{`colors`}</a>{`, etc.`}</p>\n    <p>{`To use CSS helper classes, just import them along the base CSS layers of\nReact UI:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import '@react-ui-org/react-ui/src/lib/theme.scss';\nimport '@react-ui-org/react-ui/src/lib/foundation.scss';\nimport '@react-ui-org/react-ui/src/lib/helpers.scss';\n`}</code></pre>\n    <p>{`Class name notation is\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://getbootstrap.com/docs/4.5/css-helpers/\"\n      }}>{`inspired by Bootstrap`}</a>{`, so if you\nare familiar with Bootstrap, you will feel at home here.`}</p>\n    <hr></hr>\n    <p>{`Next: `}<a parentName=\"p\" {...{\n        \"href\": \"/getting-started/browsers-and-devices\"\n      }}>{`Browsers & Devices ‚Üí`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}