(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{Pfjf:function(t,e,o){"use strict";o.r(e),o.d(e,"_frontmatter",(function(){return c})),o.d(e,"default",(function(){return B}));var a=o("k0FJ"),n=o("yHgN"),b=o("mXGw"),l=o("/FXl"),u=o("TjRS"),r=o("ZFoC"),p=o("8X2u"),i=o("99Eb");o("aD51");const c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/lib/components/ui/ButtonGroup/README.mdx"}});const d={_frontmatter:c},s=u.a;function B(t){let{components:e}=t,o=Object(n.a)(t,["components"]);return Object(l.b)(s,Object(a.a)({},d,o,{components:e,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"buttongroup"},"ButtonGroup"),Object(l.b)("p",null,"ButtonGroup visually groups related buttons together."),Object(l.b)("h2",{id:"basic-usage"},"Basic Usage"),Object(l.b)("p",null,"To implement the ButtonGroup component, you need to import it first:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { ButtonGroup } from '@react-ui-org/react-ui';\n")),Object(l.b)("p",null,"And use it:"),Object(l.b)(r.c,{__position:0,__code:'<ButtonGroup>\n  <Button label="Week" />\n  <Button label="Month" />\n  <Button label="Year" />\n</ButtonGroup>',__scope:{props:o,DefaultLayout:u.a,Playground:r.c,Props:r.d,Button:p.a,ButtonGroup:i.a,DefaultLayout:u.a,_frontmatter:c},mdxType:"Playground"},Object(l.b)(i.a,{mdxType:"ButtonGroup"},Object(l.b)(p.a,{label:"Week",mdxType:"Button"}),Object(l.b)(p.a,{label:"Month",mdxType:"Button"}),Object(l.b)(p.a,{label:"Year",mdxType:"Button"}))),Object(l.b)("p",null,"See ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#api"}),"API")," for all available options."),Object(l.b)("h2",{id:"general-guidelines"},"General Guidelines"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Use button group to group ",Object(l.b)("strong",{parentName:"p"},"related actions")," that a user can take. Buttons\nshould not be grouped just to save space on the screen.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Use ",Object(l.b)("strong",{parentName:"p"},"short labels or icons")," so the buttons can fit small screens.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"For toggling between on/off states, use rather the\n",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/components/ui/toggle"}),"Toggle")," component.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"For switching between options in a form that needs to be submitted, use rather\nthe ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/components/ui/select-field"}),"SelectField")," or\n",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/components/ui/radio"}),"Radio")," components."))),Object(l.b)("h3",{id:"shared-properties"},"Shared Properties"),Object(l.b)("p",null,"You can set the following properties directly on ButtonGroup to be shared for\nall buttons inside the group: size, priority, disabled state, and block width.\nThese properties are then passed over to individual buttons. At the same time,\nthey ",Object(l.b)("strong",{parentName:"p"},"cannot be overridden")," on the buttons' level. While technically possible,\nfrom the design point of view it's undesirable to group buttons of totally\ndifferent types or sizes."),Object(l.b)("h2",{id:"priorities"},"Priorities"),Object(l.b)("p",null,"There are three ",Object(l.b)("strong",{parentName:"p"},"visual priorities")," of buttons which exactly copy the\npriorities of the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/components/ui/button"}),"Button")," component:"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"default"),Object(l.b)("li",{parentName:"ol"},"outline"),Object(l.b)("li",{parentName:"ol"},"flat")),Object(l.b)("h3",{id:"default"},"Default"),Object(l.b)("p",null,"The default, high-emphasis priority should be used for primary actions of your\napp."),Object(l.b)(r.c,{__position:1,__code:'<ButtonGroup>\n  <Button label="Week" />\n  <Button label="Month" />\n  <Button label="Year" />\n</ButtonGroup>',__scope:{props:o,DefaultLayout:u.a,Playground:r.c,Props:r.d,Button:p.a,ButtonGroup:i.a,DefaultLayout:u.a,_frontmatter:c},mdxType:"Playground"},Object(l.b)(i.a,{mdxType:"ButtonGroup"},Object(l.b)(p.a,{label:"Week",mdxType:"Button"}),Object(l.b)(p.a,{label:"Month",mdxType:"Button"}),Object(l.b)(p.a,{label:"Year",mdxType:"Button"}))),Object(l.b)("h3",{id:"outline"},"Outline"),Object(l.b)("p",null,"Medium-emphasis buttons to contain actions that are important but not primary\nin your app."),Object(l.b)(r.c,{__position:2,__code:'<ButtonGroup priority="outline">\n  <Button label="Week" />\n  <Button label="Month" />\n  <Button label="Year" />\n</ButtonGroup>',__scope:{props:o,DefaultLayout:u.a,Playground:r.c,Props:r.d,Button:p.a,ButtonGroup:i.a,DefaultLayout:u.a,_frontmatter:c},mdxType:"Playground"},Object(l.b)(i.a,{priority:"outline",mdxType:"ButtonGroup"},Object(l.b)(p.a,{label:"Week",mdxType:"Button"}),Object(l.b)(p.a,{label:"Month",mdxType:"Button"}),Object(l.b)(p.a,{label:"Year",mdxType:"Button"}))),Object(l.b)("h3",{id:"flat"},"Flat"),Object(l.b)("p",null,"Flat buttons are designed for less pronounced actions to help maintain focus on\nthe content."),Object(l.b)(r.c,{__position:3,__code:'<ButtonGroup priority="flat">\n  <Button label="Week" />\n  <Button label="Month" />\n  <Button label="Year" />\n</ButtonGroup>',__scope:{props:o,DefaultLayout:u.a,Playground:r.c,Props:r.d,Button:p.a,ButtonGroup:i.a,DefaultLayout:u.a,_frontmatter:c},mdxType:"Playground"},Object(l.b)(i.a,{priority:"flat",mdxType:"ButtonGroup"},Object(l.b)(p.a,{label:"Week",mdxType:"Button"}),Object(l.b)(p.a,{label:"Month",mdxType:"Button"}),Object(l.b)(p.a,{label:"Year",mdxType:"Button"}))),Object(l.b)("h2",{id:"sizes"},"Sizes"),Object(l.b)("p",null,"All existing button sizes are also available on the button group level: small,\nmedium, and large."),Object(l.b)(r.c,{__position:4,__code:'<ButtonGroup size="small">\n  <Button label="Week" />\n  <Button label="Month" />\n  <Button label="Year" />\n</ButtonGroup>\n<ButtonGroup>\n  <Button label="Week" />\n  <Button label="Month" />\n  <Button label="Year" />\n</ButtonGroup>\n<ButtonGroup size="large">\n  <Button label="Week" />\n  <Button label="Month" />\n  <Button label="Year" />\n</ButtonGroup>',__scope:{props:o,DefaultLayout:u.a,Playground:r.c,Props:r.d,Button:p.a,ButtonGroup:i.a,DefaultLayout:u.a,_frontmatter:c},mdxType:"Playground"},Object(l.b)(i.a,{size:"small",mdxType:"ButtonGroup"},Object(l.b)(p.a,{label:"Week",mdxType:"Button"}),Object(l.b)(p.a,{label:"Month",mdxType:"Button"}),Object(l.b)(p.a,{label:"Year",mdxType:"Button"})),Object(l.b)(i.a,{mdxType:"ButtonGroup"},Object(l.b)(p.a,{label:"Week",mdxType:"Button"}),Object(l.b)(p.a,{label:"Month",mdxType:"Button"}),Object(l.b)(p.a,{label:"Year",mdxType:"Button"})),Object(l.b)(i.a,{size:"large",mdxType:"ButtonGroup"},Object(l.b)(p.a,{label:"Week",mdxType:"Button"}),Object(l.b)(p.a,{label:"Month",mdxType:"Button"}),Object(l.b)(p.a,{label:"Year",mdxType:"Button"}))),Object(l.b)("p",null,"Block button groups span the full width of a parent:"),Object(l.b)(r.c,{__position:5,__code:'<ButtonGroup block>\n  <Button label="Week" />\n  <Button label="Month" />\n  <Button label="Year" />\n</ButtonGroup>',__scope:{props:o,DefaultLayout:u.a,Playground:r.c,Props:r.d,Button:p.a,ButtonGroup:i.a,DefaultLayout:u.a,_frontmatter:c},mdxType:"Playground"},Object(l.b)(i.a,{block:!0,mdxType:"ButtonGroup"},Object(l.b)(p.a,{label:"Week",mdxType:"Button"}),Object(l.b)(p.a,{label:"Month",mdxType:"Button"}),Object(l.b)(p.a,{label:"Year",mdxType:"Button"}))),Object(l.b)("h2",{id:"states"},"States"),Object(l.b)("h3",{id:"disabled-state"},"Disabled State"),Object(l.b)("p",null,"Disables all buttons inside the group."),Object(l.b)(r.c,{__position:6,__code:'<ButtonGroup disabled>\n  <Button label="Week" />\n  <Button label="Month" />\n  <Button label="Year" />\n</ButtonGroup>\n<ButtonGroup priority="outline" disabled>\n  <Button label="Week" />\n  <Button label="Month" />\n  <Button label="Year" />\n</ButtonGroup>\n<ButtonGroup priority="flat" disabled>\n  <Button label="Week" />\n  <Button label="Month" />\n  <Button label="Year" />\n</ButtonGroup>',__scope:{props:o,DefaultLayout:u.a,Playground:r.c,Props:r.d,Button:p.a,ButtonGroup:i.a,DefaultLayout:u.a,_frontmatter:c},mdxType:"Playground"},Object(l.b)(i.a,{disabled:!0,mdxType:"ButtonGroup"},Object(l.b)(p.a,{label:"Week",mdxType:"Button"}),Object(l.b)(p.a,{label:"Month",mdxType:"Button"}),Object(l.b)(p.a,{label:"Year",mdxType:"Button"})),Object(l.b)(i.a,{priority:"outline",disabled:!0,mdxType:"ButtonGroup"},Object(l.b)(p.a,{label:"Week",mdxType:"Button"}),Object(l.b)(p.a,{label:"Month",mdxType:"Button"}),Object(l.b)(p.a,{label:"Year",mdxType:"Button"})),Object(l.b)(i.a,{priority:"flat",disabled:!0,mdxType:"ButtonGroup"},Object(l.b)(p.a,{label:"Week",mdxType:"Button"}),Object(l.b)(p.a,{label:"Month",mdxType:"Button"}),Object(l.b)(p.a,{label:"Year",mdxType:"Button"}))),Object(l.b)("h3",{id:"active-state"},"Active State"),Object(l.b)("p",null,"To highlight the selected option, the active state can be achieved by setting\na different button variant for the active item."),Object(l.b)(r.c,{__position:7,__code:'<ButtonGroup>\n  <Button variant="dark" label="Week" />\n  <Button label="Month" />\n  <Button label="Year" />\n</ButtonGroup>\n<ButtonGroup priority="outline">\n  <Button variant="dark" label="Week" />\n  <Button label="Month" />\n  <Button label="Year" />\n</ButtonGroup>\n<ButtonGroup priority="flat">\n  <Button variant="dark" label="Week" />\n  <Button label="Month" />\n  <Button label="Year" />\n</ButtonGroup>',__scope:{props:o,DefaultLayout:u.a,Playground:r.c,Props:r.d,Button:p.a,ButtonGroup:i.a,DefaultLayout:u.a,_frontmatter:c},mdxType:"Playground"},Object(l.b)(i.a,{mdxType:"ButtonGroup"},Object(l.b)(p.a,{variant:"dark",label:"Week",mdxType:"Button"}),Object(l.b)(p.a,{label:"Month",mdxType:"Button"}),Object(l.b)(p.a,{label:"Year",mdxType:"Button"})),Object(l.b)(i.a,{priority:"outline",mdxType:"ButtonGroup"},Object(l.b)(p.a,{variant:"dark",label:"Week",mdxType:"Button"}),Object(l.b)(p.a,{label:"Month",mdxType:"Button"}),Object(l.b)(p.a,{label:"Year",mdxType:"Button"})),Object(l.b)(i.a,{priority:"flat",mdxType:"ButtonGroup"},Object(l.b)(p.a,{variant:"dark",label:"Week",mdxType:"Button"}),Object(l.b)(p.a,{label:"Month",mdxType:"Button"}),Object(l.b)(p.a,{label:"Year",mdxType:"Button"}))),Object(l.b)("h2",{id:"accessibility"},"Accessibility"),Object(l.b)("p",null,"You can improve the accessibility of your ButtonGroup by linking it to a label\nand communicating the state of individual options."),Object(l.b)(r.c,{__position:8,__code:'<>\n  <span id="period-label">Period:</span>\n  <ButtonGroup aria-labelledby="#period-label">\n    <Button label="Week" aria-pressed variant="dark" />\n    <Button label="Month" aria-pressed={false} />\n    <Button label="Year" aria-pressed={false} />\n  </ButtonGroup>\n</>',__scope:{props:o,DefaultLayout:u.a,Playground:r.c,Props:r.d,Button:p.a,ButtonGroup:i.a,DefaultLayout:u.a,_frontmatter:c},mdxType:"Playground"},Object(l.b)(b.Fragment,null,Object(l.b)("span",{id:"period-label"},"Period:"),Object(l.b)(i.a,{"aria-labelledby":"#period-label",mdxType:"ButtonGroup"},Object(l.b)(p.a,{label:"Week","aria-pressed":!0,variant:"dark",mdxType:"Button"}),Object(l.b)(p.a,{label:"Month","aria-pressed":!1,mdxType:"Button"}),Object(l.b)(p.a,{label:"Year","aria-pressed":!1,mdxType:"Button"})))),Object(l.b)("h2",{id:"api"},"API"),Object(l.b)(r.d,{of:i.a,mdxType:"Props"}),Object(l.b)("hr",null),Object(l.b)("p",null,"Next: ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/components/ui/card"}),"Card →")))}void 0!==B&&B&&B===Object(B)&&Object.isExtensible(B)&&!B.hasOwnProperty("__filemeta")&&Object.defineProperty(B,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/lib/components/ui/ButtonGroup/README.mdx"}}),B.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-lib-components-ui-button-group-readme-mdx-679bb7be543418e49a2a.js.map