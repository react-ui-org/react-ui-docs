{"version":3,"sources":["webpack:///../src/lib/components/ui/TextField/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","TextField","id","label","variant","size","fullWidth","type","inputSize","min","max","autoComplete","minLength","maxLength","isLabelVisible","placeholder","layout","helpText","validationState","validationText","value","required","disabled","table","of","isMDXComponent"],"mappings":"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","file":"component---src-lib-components-ui-text-field-readme-mdx-d4739b09a2a3ffe9836d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-ui/react-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { TextField } from './TextField';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"textfield\"\n    }}>{`TextField`}</h1>\n    <p>{`TextField allows users to input text information.`}</p>\n\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <p>{`To implement the TextField component, you need to import it first:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { TextField } from '@react-ui-org/react-ui';\n`}</code></pre>\n    <p>{`And use it:`}</p>\n    <Playground __position={0} __code={'<TextField id=\\\"my-text-field\\\" label=\\\"First name\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextField id=\"my-text-field\" label=\"First name\" mdxType=\"TextField\" />\n    </Playground>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"#api\"\n      }}>{`API`}</a>{` for all available options.`}</p>\n    <h2 {...{\n      \"id\": \"general-guidelines\"\n    }}>{`General Guidelines`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use the `}<strong parentName=\"p\">{`most suitable input type`}</strong>{` for current context: aside from the\ncommon `}<inlineCode parentName=\"p\">{`text`}</inlineCode>{` type, there are also `}<inlineCode parentName=\"p\">{`email`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`number`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`password`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`tel`}</inlineCode>{`\ntypes at your disposal. A properly chosen input type is especially important\nfor touch users as it triggers an appropriate virtual keyboard, so it helps\nspeed up the completion of the field.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Beware of the `}<inlineCode parentName=\"strong\">{`number`}</inlineCode>{` input type:`}</strong>{` it may not be always what you want.\nNot all number-like values are actually numbers, eg. phone numbers, credit\ncard numbers, or business IDs. In such cases use the most appropriate input\ntype (probably `}<inlineCode parentName=\"p\">{`text`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`tel`}</inlineCode>{`) along with the\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern\"\n          }}><inlineCode parentName=\"a\">{`pattern`}</inlineCode>{` attribute`}</a>{`\nto improve the input experience for touch users.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use `}<strong parentName=\"p\">{`short and descriptive labels`}</strong>{`, ideally nouns rather than seemingly\npolite phrases like `}<em parentName=\"p\">{`Please enter your first name`}</em>{`. Short labels will help\nyour users accomplish their task faster.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Only make the TextField's label invisible when there is `}<strong parentName=\"p\">{`another visual\nclue`}</strong>{` to guide users through filling the input.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`When a short label is not enough, use `}<strong parentName=\"p\">{`help texts to guide users`}</strong>{` before\nthey enter anything.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Optionally you can `}<strong parentName=\"p\">{`pre-fill your text fields with a placeholder`}</strong>{` to give\nusers an example of what they're expected to fill in. Just remember the\nplaceholder disappears once a value is entered so don't put anything important\nthere. Usually, en example value starting with “Eg.” works best.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use `}<strong parentName=\"p\">{`clear, calm error messages`}</strong>{` when there's a problem with what they\nentered. Be positive and focus on solutions to make the error message helpful.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`When asking users for their contact information or other personal information,\nmake use of the\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\"\n          }}><inlineCode parentName=\"a\">{`autocomplete`}</inlineCode>{` attribute`}</a>{`\nto help them fill the form faster.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"design-variants\"\n    }}>{`Design Variants`}</h2>\n    <p>{`To satisfy the design requirements of your project, all input fields in React UI\ncome in `}<strong parentName=\"p\">{`two design variants`}</strong>{` to choose from: outline and filled. Both can be\nfurther `}<a parentName=\"p\" {...{\n        \"href\": \"#theming\"\n      }}>{`customized`}</a>{` with CSS custom properties.`}</p>\n    <Playground __position={1} __code={'<TextField id=\\\"my-text-field-outline\\\" label=\\\"First name\\\" />\\n<TextField id=\\\"my-text-field-filled\\\" label=\\\"First name\\\" variant=\\\"filled\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextField id=\"my-text-field-outline\" label=\"First name\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled\" label=\"First name\" variant=\"filled\" mdxType=\"TextField\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h2>\n    <p>{`Aside from the default (medium) size, two additional sizes are available: small\nand large.`}</p>\n    <Playground __position={2} __code={'<TextField id=\\\"my-text-field-outline-small\\\" label=\\\"First name\\\" size=\\\"small\\\" />\\n<TextField id=\\\"my-text-field-outline-medium\\\" label=\\\"First name\\\" />\\n<TextField id=\\\"my-text-field-outline-large\\\" label=\\\"First name\\\" size=\\\"large\\\" />\\n<TextField\\n  id=\\\"my-text-field-filled-small\\\"\\n  label=\\\"First name\\\"\\n  size=\\\"small\\\"\\n  variant=\\\"filled\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-medium\\\"\\n  label=\\\"First name\\\"\\n  variant=\\\"filled\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-large\\\"\\n  label=\\\"First name\\\"\\n  size=\\\"large\\\"\\n  variant=\\\"filled\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextField id=\"my-text-field-outline-small\" label=\"First name\" size=\"small\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-outline-medium\" label=\"First name\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-outline-large\" label=\"First name\" size=\"large\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-small\" label=\"First name\" size=\"small\" variant=\"filled\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-medium\" label=\"First name\" variant=\"filled\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-large\" label=\"First name\" size=\"large\" variant=\"filled\" mdxType=\"TextField\" />\n    </Playground>\n    <p>{`Full-width fields span the full width of a parent:`}</p>\n    <Playground __position={3} __code={'<TextField\\n  id=\\\"my-text-field-outline-full-width\\\"\\n  label=\\\"First name\\\"\\n  fullWidth\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-full-width\\\"\\n  label=\\\"First name\\\"\\n  variant=\\\"filled\\\"\\n  fullWidth\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextField id=\"my-text-field-outline-full-width\" label=\"First name\" fullWidth mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-full-width\" label=\"First name\" variant=\"filled\" fullWidth mdxType=\"TextField\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"input-types\"\n    }}>{`Input Types`}</h2>\n    <p>{`Aside from the common `}<inlineCode parentName=\"p\">{`text`}</inlineCode>{` type, there are also `}<inlineCode parentName=\"p\">{`email`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`number`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`password`}</inlineCode>{`,\nand `}<inlineCode parentName=\"p\">{`tel`}</inlineCode>{` types at your disposal.`}</p>\n    <Playground __position={4} __code={'<TextField\\n  id=\\\"my-text-field-outline-input-type-email\\\"\\n  label=\\\"Email\\\"\\n  type=\\\"email\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-input-type-email\\\"\\n  label=\\\"Email\\\"\\n  variant=\\\"filled\\\"\\n  type=\\\"email\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-outline-input-type-number\\\"\\n  label=\\\"Age\\\"\\n  type=\\\"number\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-input-type-number\\\"\\n  label=\\\"Age\\\"\\n  variant=\\\"filled\\\"\\n  type=\\\"number\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-outline-input-type-password\\\"\\n  label=\\\"Password\\\"\\n  type=\\\"password\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-input-type-password\\\"\\n  label=\\\"Password\\\"\\n  variant=\\\"filled\\\"\\n  type=\\\"password\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-outline-input-type-tel\\\"\\n  label=\\\"Phone\\\"\\n  type=\\\"tel\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-input-type-tel\\\"\\n  label=\\\"Phone\\\"\\n  variant=\\\"filled\\\"\\n  type=\\\"tel\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextField id=\"my-text-field-outline-input-type-email\" label=\"Email\" type=\"email\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-input-type-email\" label=\"Email\" variant=\"filled\" type=\"email\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-outline-input-type-number\" label=\"Age\" type=\"number\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-input-type-number\" label=\"Age\" variant=\"filled\" type=\"number\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-outline-input-type-password\" label=\"Password\" type=\"password\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-input-type-password\" label=\"Password\" variant=\"filled\" type=\"password\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-outline-input-type-tel\" label=\"Phone\" type=\"tel\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-input-type-tel\" label=\"Phone\" variant=\"filled\" type=\"tel\" mdxType=\"TextField\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"input-size\"\n    }}>{`Input Size`}</h2>\n    <p>{`The default width of all inputs is 240 px, and it can be `}<a parentName=\"p\" {...{\n        \"href\": \"#theming\"\n      }}>{`customized`}</a>{`\nwith a CSS custom property. However, you can also `}<strong parentName=\"p\">{`change the width of\nindividual text fields`}</strong>{` using the `}<inlineCode parentName=\"p\">{`inputSize`}</inlineCode>{` property. It (obviously) sets the\n`}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` attribute of the `}<inlineCode parentName=\"p\">{`input`}</inlineCode>{` element and is further picked up by CSS to\nnormalize rendering across browsers.`}</p>\n    <p>{`👉 Remember that the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text#size\"\n      }}><inlineCode parentName=\"a\">{`size`}</inlineCode></a>{`\nHTML attribute `}<strong parentName=\"p\">{`does not limit on how many characters`}</strong>{` the user can enter. Use\nthe `}<inlineCode parentName=\"p\">{`maxlength`}</inlineCode>{` attribute to achieve that effect.`}</p>\n    <p>{`👉 For compatibility with the HTML specification, the `}<inlineCode parentName=\"p\">{`inputSize`}</inlineCode>{` option (which\nis translated as `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` attribute of the input element) is\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/number#Controlling_input_size\"\n      }}>{`not available for the `}<inlineCode parentName=\"a\">{`number`}</inlineCode>{` input type`}</a>{`.\nHowever, you can use the `}<inlineCode parentName=\"p\">{`max`}</inlineCode>{` attribute to determine the desired width of the\nnumber input instead.`}</p>\n    <Playground __position={5} __code={'<TextField\\n  id=\\\"my-text-field-outline-input-size\\\"\\n  inputSize={3}\\n  label=\\\"Title\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-input-size\\\"\\n  inputSize={3}\\n  label=\\\"Title\\\"\\n  variant=\\\"filled\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-outline-input-size-number\\\"\\n  label=\\\"Age\\\"\\n  min={13}\\n  max={120}\\n  type=\\\"number\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-input-size-number\\\"\\n  label=\\\"Age\\\"\\n  min={13}\\n  max={120}\\n  variant=\\\"filled\\\"\\n  type=\\\"number\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextField id=\"my-text-field-outline-input-size\" inputSize={3} label=\"Title\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-input-size\" inputSize={3} label=\"Title\" variant=\"filled\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-outline-input-size-number\" label=\"Age\" min={13} max={120} type=\"number\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-input-size-number\" label=\"Age\" min={13} max={120} variant=\"filled\" type=\"number\" mdxType=\"TextField\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"forwarding-html-attributes\"\n    }}>{`Forwarding HTML Attributes`}</h2>\n    <p>{`When you want to improve the accessibility of your text fields even further, you\ncan `}<strong parentName=\"p\">{`add whatever HTML attribute you like.`}</strong>{` All attributes that don't\ninterfere with `}<a parentName=\"p\" {...{\n        \"href\": \"#api\"\n      }}>{`component's API`}</a>{` are forwarded to the native HTML input.`}</p>\n    <Playground __position={6} __code={'<TextField\\n  id=\\\"my-text-field-outline-forwarding\\\"\\n  label=\\\"Address\\\"\\n  autoComplete=\\\"street-address\\\"\\n  minLength={3}\\n  maxLength={80}\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-forwarding\\\"\\n  label=\\\"Address\\\"\\n  variant=\\\"filled\\\"\\n  autoComplete=\\\"street-address\\\"\\n  minLength={3}\\n  maxLength={80}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextField id=\"my-text-field-outline-forwarding\" label=\"Address\" autoComplete=\"street-address\" minLength={3} maxLength={80} mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-forwarding\" label=\"Address\" variant=\"filled\" autoComplete=\"street-address\" minLength={3} maxLength={80} mdxType=\"TextField\" />\n    </Playground>\n    <p>{`👉 Refer to the MDN reference for the full list of supported attributes of the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text\"\n      }}>{`text`}</a>{`,\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email\"\n      }}>{`email`}</a>{`,\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/number\"\n      }}>{`number`}</a>{`,\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/tel\"\n      }}>{`tel`}</a>{`, and\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/password\"\n      }}>{`password`}</a>{`\ninput types.`}</p>\n    <h2 {...{\n      \"id\": \"invisible-label\"\n    }}>{`Invisible Label`}</h2>\n    <p>{`In some cases, it may be convenient to visually hide the field label. The label\nremains accessible to assistive technologies.`}</p>\n    <p>{`While it may be acceptable for login screens with just a few fields or for other\nsimple forms, it's dangerous to hide labels from users in most cases. Keep in\nmind you should `}<strong parentName=\"p\">{`provide another visual clue`}</strong>{` so users know what to fill into\nthe input.`}</p>\n    <Playground __position={7} __code={'<TextField\\n  id=\\\"my-text-field-outline-hidden-label\\\"\\n  label=\\\"User name\\\"\\n  isLabelVisible={false}\\n  placeholder=\\\"Eg. john@example.com\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-hidden-label\\\"\\n  label=\\\"User name\\\"\\n  isLabelVisible={false}\\n  variant=\\\"filled\\\"\\n  placeholder=\\\"Eg. john@example.com\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextField id=\"my-text-field-outline-hidden-label\" label=\"User name\" isLabelVisible={false} placeholder=\"Eg. john@example.com\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-hidden-label\" label=\"User name\" isLabelVisible={false} variant=\"filled\" placeholder=\"Eg. john@example.com\" mdxType=\"TextField\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"horizontal-layout\"\n    }}>{`Horizontal Layout`}</h2>\n    <p>{`The default vertical layout is very easy to use and work with. However, there\nare situations where horizontal layout suits better — and that's why React UI\nsupports this kind of layout as well.`}</p>\n    <Playground __position={8} __code={'<TextField\\n  id=\\\"my-text-field-outline-input-size-horizontal\\\"\\n  inputSize={3}\\n  label=\\\"Title\\\"\\n  layout=\\\"horizontal\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-input-size-horizontal\\\"\\n  inputSize={3}\\n  label=\\\"Title\\\"\\n  layout=\\\"horizontal\\\"\\n  variant=\\\"filled\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-outline-horizontal\\\"\\n  label=\\\"First name\\\"\\n  layout=\\\"horizontal\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-horizontal\\\"\\n  label=\\\"First name\\\"\\n  layout=\\\"horizontal\\\"\\n  variant=\\\"filled\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-outline-horizontal-full-width\\\"\\n  label=\\\"First name\\\"\\n  layout=\\\"horizontal\\\"\\n  fullWidth\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-horizontal-full-width\\\"\\n  label=\\\"First name\\\"\\n  layout=\\\"horizontal\\\"\\n  variant=\\\"filled\\\"\\n  fullWidth\\n/>\\n<TextField\\n  id=\\\"my-text-field-outline-horizontal-full-width-invisible-label\\\"\\n  isLabelVisible={false}\\n  label=\\\"First name\\\"\\n  layout=\\\"horizontal\\\"\\n  placeholder=\\\"First name\\\"\\n  fullWidth\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-horizontal-full-width-invisible-label\\\"\\n  isLabelVisible={false}\\n  label=\\\"First name\\\"\\n  layout=\\\"horizontal\\\"\\n  placeholder=\\\"First name\\\"\\n  variant=\\\"filled\\\"\\n  fullWidth\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextField id=\"my-text-field-outline-input-size-horizontal\" inputSize={3} label=\"Title\" layout=\"horizontal\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-input-size-horizontal\" inputSize={3} label=\"Title\" layout=\"horizontal\" variant=\"filled\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-outline-horizontal\" label=\"First name\" layout=\"horizontal\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-horizontal\" label=\"First name\" layout=\"horizontal\" variant=\"filled\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-outline-horizontal-full-width\" label=\"First name\" layout=\"horizontal\" fullWidth mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-horizontal-full-width\" label=\"First name\" layout=\"horizontal\" variant=\"filled\" fullWidth mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-outline-horizontal-full-width-invisible-label\" isLabelVisible={false} label=\"First name\" layout=\"horizontal\" placeholder=\"First name\" fullWidth mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-horizontal-full-width-invisible-label\" isLabelVisible={false} label=\"First name\" layout=\"horizontal\" placeholder=\"First name\" variant=\"filled\" fullWidth mdxType=\"TextField\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"help-text\"\n    }}>{`Help Text`}</h2>\n    <p>{`You may provide an additional help text to clarify how the input should be\nfilled.`}</p>\n    <Playground __position={9} __code={'<TextField\\n  id=\\\"my-text-field-outline-help-text\\\"\\n  label=\\\"First name\\\"\\n  helpText=\\\"Choose one or more kinds of fruit to feel happy.\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-help-text\\\"\\n  label=\\\"First name\\\"\\n  variant=\\\"filled\\\"\\n  helpText=\\\"Choose one or more kinds of fruit to feel happy.\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-outline-help-text-horizontal\\\"\\n  label=\\\"First name\\\"\\n  layout=\\\"horizontal\\\"\\n  helpText=\\\"Choose one or more kinds of fruit to feel happy.\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-help-text-horizontal\\\"\\n  label=\\\"First name\\\"\\n  layout=\\\"horizontal\\\"\\n  helpText=\\\"Choose one or more kinds of fruit to feel happy.\\\"\\n  variant=\\\"filled\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-outline-help-text-horizontal-full-width\\\"\\n  label=\\\"First name\\\"\\n  layout=\\\"horizontal\\\"\\n  helpText=\\\"Choose one or more kinds of fruit to feel happy.\\\"\\n  fullWidth\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-help-text-horizontal-full-width\\\"\\n  label=\\\"First name\\\"\\n  layout=\\\"horizontal\\\"\\n  variant=\\\"filled\\\"\\n  helpText=\\\"Choose one or more kinds of fruit to feel happy.\\\"\\n  fullWidth\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextField id=\"my-text-field-outline-help-text\" label=\"First name\" helpText=\"Choose one or more kinds of fruit to feel happy.\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-help-text\" label=\"First name\" variant=\"filled\" helpText=\"Choose one or more kinds of fruit to feel happy.\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-outline-help-text-horizontal\" label=\"First name\" layout=\"horizontal\" helpText=\"Choose one or more kinds of fruit to feel happy.\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-help-text-horizontal\" label=\"First name\" layout=\"horizontal\" helpText=\"Choose one or more kinds of fruit to feel happy.\" variant=\"filled\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-outline-help-text-horizontal-full-width\" label=\"First name\" layout=\"horizontal\" helpText=\"Choose one or more kinds of fruit to feel happy.\" fullWidth mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-help-text-horizontal-full-width\" label=\"First name\" layout=\"horizontal\" variant=\"filled\" helpText=\"Choose one or more kinds of fruit to feel happy.\" fullWidth mdxType=\"TextField\" />\n    </Playground>\n    <p>{`Keep in mind that `}<strong parentName=\"p\">{`long help texts don't play well with small input sizes,`}</strong>{`\nespecially in a vertical layout. To fix this at least for the horizontal layout,\nthe help text expands over the full field width when the desired input width\n(based on `}<inlineCode parentName=\"p\">{`inputSize`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`max`}</inlineCode>{` options) is 10 characters or smaller.`}</p>\n    <Playground __position={10} __code={'<TextField\\n  id=\\\"my-text-field-outline-help-text-input-size-horizontal\\\"\\n  inputSize={3}\\n  label=\\\"Title\\\"\\n  layout=\\\"horizontal\\\"\\n  helpText=\\\"What academic degree do you hold?\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-help-text-input-size-horizontal\\\"\\n  inputSize={3}\\n  label=\\\"Title\\\"\\n  layout=\\\"horizontal\\\"\\n  variant=\\\"filled\\\"\\n  helpText=\\\"What academic degree do you hold?\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-outline-help-text-input-size-number-horizontal\\\"\\n  label=\\\"Age\\\"\\n  layout=\\\"horizontal\\\"\\n  min={13}\\n  max={120}\\n  type=\\\"number\\\"\\n  helpText=\\\"How old do you see yourself?\\\"\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-help-text-input-size-number-horizontal\\\"\\n  label=\\\"Age\\\"\\n  layout=\\\"horizontal\\\"\\n  min={13}\\n  max={120}\\n  variant=\\\"filled\\\"\\n  type=\\\"number\\\"\\n  helpText=\\\"How old do you see yourself?\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextField id=\"my-text-field-outline-help-text-input-size-horizontal\" inputSize={3} label=\"Title\" layout=\"horizontal\" helpText=\"What academic degree do you hold?\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-help-text-input-size-horizontal\" inputSize={3} label=\"Title\" layout=\"horizontal\" variant=\"filled\" helpText=\"What academic degree do you hold?\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-outline-help-text-input-size-number-horizontal\" label=\"Age\" layout=\"horizontal\" min={13} max={120} type=\"number\" helpText=\"How old do you see yourself?\" mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-help-text-input-size-number-horizontal\" label=\"Age\" layout=\"horizontal\" min={13} max={120} variant=\"filled\" type=\"number\" helpText=\"How old do you see yourself?\" mdxType=\"TextField\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"states\"\n    }}>{`States`}</h2>\n    <h3 {...{\n      \"id\": \"validation-states\"\n    }}>{`Validation States`}</h3>\n    <p>{`Validation states visually present the result of validation of the input. You\nshould always `}<strong parentName=\"p\">{`provide a validation message for states other than valid`}</strong>{` so\nusers know what happened and what action they should take or what options they\nhave.`}</p>\n    <Playground __position={11} __code={'<TextField\\n  id=\\\"my-text-field-outline-success\\\"\\n  label=\\\"User name\\\"\\n  validationState=\\\"valid\\\"\\n  validationText=\\\"Looks good!\\\"\\n  value=\\\"johnny1986\\\"\\n  required\\n/>\\n<TextField\\n  id=\\\"my-text-field-outline-warning\\\"\\n  label=\\\"User name\\\"\\n  validationState=\\\"warning\\\"\\n  validationText=\\\"Account with this name already exists, pick a different one.\\\"\\n  value=\\\"joe\\\"\\n  required\\n/>\\n<TextField\\n  id=\\\"my-text-field-outline-error\\\"\\n  label=\\\"User name\\\"\\n  validationState=\\\"invalid\\\"\\n  validationText=\\\"Please enter a user name of your choice.\\\"\\n  required\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-success\\\"\\n  label=\\\"User name\\\"\\n  validationState=\\\"valid\\\"\\n  validationText=\\\"Looks good!\\\"\\n  variant=\\\"filled\\\"\\n  value=\\\"johnny1986\\\"\\n  required\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-warning\\\"\\n  label=\\\"User name\\\"\\n  validationState=\\\"warning\\\"\\n  validationText=\\\"Account with this name already exists, pick a different one.\\\"\\n  variant=\\\"filled\\\"\\n  value=\\\"joe\\\"\\n  required\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-error\\\"\\n  label=\\\"User name\\\"\\n  validationState=\\\"invalid\\\"\\n  validationText=\\\"Please enter a user name of your choice.\\\"\\n  variant=\\\"filled\\\"\\n  required\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextField id=\"my-text-field-outline-success\" label=\"User name\" validationState=\"valid\" validationText=\"Looks good!\" value=\"johnny1986\" required mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-outline-warning\" label=\"User name\" validationState=\"warning\" validationText=\"Account with this name already exists, pick a different one.\" value=\"joe\" required mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-outline-error\" label=\"User name\" validationState=\"invalid\" validationText=\"Please enter a user name of your choice.\" required mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-success\" label=\"User name\" validationState=\"valid\" validationText=\"Looks good!\" variant=\"filled\" value=\"johnny1986\" required mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-warning\" label=\"User name\" validationState=\"warning\" validationText=\"Account with this name already exists, pick a different one.\" variant=\"filled\" value=\"joe\" required mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-error\" label=\"User name\" validationState=\"invalid\" validationText=\"Please enter a user name of your choice.\" variant=\"filled\" required mdxType=\"TextField\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"disabled-state\"\n    }}>{`Disabled State`}</h3>\n    <p>{`It's possible to disable the whole input.`}</p>\n    <Playground __position={12} __code={'<TextField\\n  id=\\\"my-text-field-outline-disabled\\\"\\n  label=\\\"First name\\\"\\n  value=\\\"John\\\"\\n  disabled\\n/>\\n<TextField\\n  id=\\\"my-text-field-filled-disabled\\\"\\n  label=\\\"First name\\\"\\n  variant=\\\"filled\\\"\\n  value=\\\"John\\\"\\n  disabled\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <TextField id=\"my-text-field-outline-disabled\" label=\"First name\" value=\"John\" disabled mdxType=\"TextField\" />\n  <TextField id=\"my-text-field-filled-disabled\" label=\"First name\" variant=\"filled\" value=\"John\" disabled mdxType=\"TextField\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <p>{`In addition to the options below, you can add any custom attributes that do not\ninterfere with the API, and they will be passed to the `}<inlineCode parentName=\"p\">{`input`}</inlineCode>{` HTML element.\nThis is useful mainly to improve component's\n`}<a parentName=\"p\" {...{\n        \"href\": \"#forwarding-html-attributes\"\n      }}>{`accessibility`}</a>{`.`}</p>\n    <Props table of={TextField} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"theming\"\n    }}>{`Theming`}</h2>\n    <p>{`Head to `}<a parentName=\"p\" {...{\n        \"href\": \"/customize/theming/forms\"\n      }}>{`Forms Theming`}</a>{` to see shared form theming\noptions.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}