{"version":3,"sources":["webpack:///../src/docs/css-helpers/animation.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Icon","className","icon","isMDXComponent"],"mappings":"2RAQO,MAAMA,EAAe,Q,oNAE5B,MAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,aADR,aAIA,+FACA,oFAAmE,0BAAYC,WAAW,KAAvB,QAAnE,2BACQ,0BAAYA,WAAW,KAAvB,mBADR,yBAEA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,sYAAmZC,QAAS,CAC7bL,QACAH,kBACAS,eACAC,SACAV,kBACAH,gBACCO,QAAQ,cACb,4BACE,qBACE,oBAAMO,UAAU,QAAhB,6BACA,oBAAMA,UAAU,0CACd,YAAC,IAAD,CAAMC,KAAK,UAAUR,QAAQ,WAGjC,qBACE,oBAAMO,UAAU,QAAhB,oCACA,oBAAMA,UAAU,iDACd,YAAC,IAAD,CAAMC,KAAK,UAAUR,QAAQ,aAKjC,uBACA,8BAAa,6BAAGC,WAAW,KAAQ,CAC/B,KAAQ,+BADC,0B,kNAOjBJ,EAAWY,gBAAiB","file":"component---src-docs-css-helpers-animation-mdx-4d4b4c0b3bc3cf9a3e9a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-ui/react-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Icon } from '../_components/Icon/Icon';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"animation\"\n    }}>{`Animation`}</h1>\n\n    <p>{`The animation helper allows applying simple animations to UI elements.`}</p>\n    <p>{`ðŸ‘‰ Remember that non-block inline elements (ie. an unstyled `}<inlineCode parentName=\"p\">{`span`}</inlineCode>{` or elements\nthat have `}<inlineCode parentName=\"p\">{`display: inline`}</inlineCode>{`) cannot be animated.`}</p>\n    <Playground __position={0} __code={'<>\\n  <p>\\n    <code className=\\\"mr-3\\\">.animation-spin-clockwise</code>\\n    <span className=\\\"d-inline-flex animation-spin-clockwise\\\">\\n      <Icon icon=\\\"loading\\\" />\\n    </span>\\n  </p>\\n  <p>\\n    <code className=\\\"mr-3\\\">.animation-spin-counterclockwise</code>\\n    <span className=\\\"d-inline-flex animation-spin-counterclockwise\\\">\\n      <Icon icon=\\\"loading\\\" />\\n    </span>\\n  </p>\\n</>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Icon,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <>\n    <p>\n      <code className=\"mr-3\">.animation-spin-clockwise</code>\n      <span className=\"d-inline-flex animation-spin-clockwise\">\n        <Icon icon=\"loading\" mdxType=\"Icon\" />\n      </span>\n    </p>\n    <p>\n      <code className=\"mr-3\">.animation-spin-counterclockwise</code>\n      <span className=\"d-inline-flex animation-spin-counterclockwise\">\n        <Icon icon=\"loading\" mdxType=\"Icon\" />\n      </span>\n    </p>\n  </>\n    </Playground>\n    <hr></hr>\n    <p>{`Next: `}<a parentName=\"p\" {...{\n        \"href\": \"/css-helpers/box-alignment\"\n      }}>{`Box Alignment â†’`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}