{"version":3,"sources":["webpack:///../src/lib/components/ui/Toggle/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Toggle","id","label","checked","description","isLabelVisible","labelPosition","validationState","error","disabled","of","isMDXComponent"],"mappings":"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","file":"component---src-lib-components-ui-toggle-readme-mdx-fa3907261fd16eb39175.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-ui/react-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Toggle } from './Toggle';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"toggle\"\n    }}>{`Toggle`}</h1>\n    <p>{`Toggle switches things on and off.`}</p>\n\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <p>{`To use the Toggle component, you need to import it first:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Toggle } from '@react-ui-org/react-ui';\n`}</code></pre>\n    <p>{`And use it:`}</p>\n    <Playground __position={0} __code={'<Toggle id=\\\"my-toggle\\\" label=\\\"Listen in studio quality\\\" checked />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Toggle,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Toggle id=\"my-toggle\" label=\"Listen in studio quality\" checked mdxType=\"Toggle\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"general-guidelines\"\n    }}>{`General Guidelines`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use the toggle only for boolean (true/false) input `}<strong parentName=\"p\">{`with an immediate effect\n(without confirmation)`}</strong>{`. To toggle things on or off in forms that require to\nbe submitted by a button, use rather the\n`}<a parentName=\"p\" {...{\n            \"href\": \"/components/ui/checkbox-field\"\n          }}>{`CheckboxField`}</a>{` component.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Use positive wording for the toggle label,`}</strong>{` so that it's clear what will\nhappen when the user turns on the toggle. Avoid negations such as “Don't send\nme any emails” which would mean that the user needs to turn the toggle `}<strong parentName=\"p\">{`on`}</strong>{`\nin order for something `}<strong parentName=\"p\">{`not`}</strong>{` to happen.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Only make the Toggle's label invisible when there is `}<strong parentName=\"p\">{`another visual clue`}</strong>{`\nto guide users through using the input.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`When a short label is not enough, use `}<strong parentName=\"p\">{`help texts to guide users`}</strong>{` before\nthey enter anything.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use `}<strong parentName=\"p\">{`clear, calm error messages`}</strong>{` when there's a problem with what they\nentered.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The toggle is designed for `}<strong parentName=\"p\">{`switching things on and off.`}</strong>{` Don't use it to\nswitch between two different things that cannot be described as on or off\nusing a single label, eg. different viewing modes. In such cases, consider\nusing the `}<a parentName=\"p\" {...{\n            \"href\": \"/components/ui/button-group\"\n          }}>{`ButtonGroup`}</a>{` component.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"help-text\"\n    }}>{`Help Text`}</h2>\n    <p>{`You may provide an additional help text to clarify what will be the impact of\nturning the toggle on or off.`}</p>\n    <Playground __position={1} __code={'<Toggle\\n  id=\\\"my-toggle-with-helper-text\\\"\\n  label=\\\"Listen in studio quality\\\"\\n  description={\\n    \\'Unrivaled audio quality. Uses the MQA audio format. \\' +\\n    \\'Transfers a lot of data.\\'\\n  }\\n  checked\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Toggle,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Toggle id=\"my-toggle-with-helper-text\" label=\"Listen in studio quality\" description={'Unrivaled audio quality. Uses the MQA audio format. ' + 'Transfers a lot of data.'} checked mdxType=\"Toggle\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"label-options\"\n    }}>{`Label Options`}</h2>\n    <p>{`In some cases, it may be convenient to visually hide the toggle label. The label\nremains accessible to assistive technologies.`}</p>\n    <Playground __position={2} __code={'<Toggle\\n  id=\\\"my-toggle-with-invisible-label\\\"\\n  isLabelVisible={false}\\n  label=\\\"You cannot see this\\\"\\n  checked\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Toggle,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Toggle id=\"my-toggle-with-invisible-label\" isLabelVisible={false} label=\"You cannot see this\" checked mdxType=\"Toggle\" />\n    </Playground>\n    <p>{`It's also possible to display the label before the input:`}</p>\n    <Playground __position={3} __code={'<Toggle\\n  id=\\\"my-toggle-with-label-before-input\\\"\\n  label=\\\"Listen in studio quality\\\"\\n  labelPosition=\\\"before\\\"\\n  checked\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Toggle,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Toggle id=\"my-toggle-with-label-before-input\" label=\"Listen in studio quality\" labelPosition=\"before\" checked mdxType=\"Toggle\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"states\"\n    }}>{`States`}</h2>\n    <h3 {...{\n      \"id\": \"validation-states\"\n    }}>{`Validation States`}</h3>\n    <p>{`Validation states visually present the result of validation of the input. You\nshould always `}<strong parentName=\"p\">{`provide a help text for states other than valid`}</strong>{` so users know\nwhat happened and what action they should take or what options they have.`}</p>\n    <Playground __position={4} __code={'<Toggle\\n  id=\\\"my-toggle-valid\\\"\\n  label=\\\"Listen in studio quality\\\"\\n  validationState=\\\"valid\\\"\\n  checked\\n/>\\n<Toggle\\n  id=\\\"my-toggle-warning\\\"\\n  label=\\\"Listen in studio quality\\\"\\n  validationState=\\\"warning\\\"\\n  description={\\n    \\'Looks like you are connected over cellular network. \\' +\\n    \\'Please make sure you know what you are doing.\\'\\n  }\\n  checked\\n/>\\n<Toggle\\n  id=\\\"my-toggle-invalid\\\"\\n  label=\\\"Listen in studio quality\\\"\\n  validationState=\\\"invalid\\\"\\n  error=\\\"Please upgrade your plan to make this option available.\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Toggle,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Toggle id=\"my-toggle-valid\" label=\"Listen in studio quality\" validationState=\"valid\" checked mdxType=\"Toggle\" />\n  <Toggle id=\"my-toggle-warning\" label=\"Listen in studio quality\" validationState=\"warning\" description={'Looks like you are connected over cellular network. ' + 'Please make sure you know what you are doing.'} checked mdxType=\"Toggle\" />\n  <Toggle id=\"my-toggle-invalid\" label=\"Listen in studio quality\" validationState=\"invalid\" error=\"Please upgrade your plan to make this option available.\" mdxType=\"Toggle\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"disabled-state\"\n    }}>{`Disabled State`}</h3>\n    <p>{`Disabled state makes the input unavailable.`}</p>\n    <Playground __position={5} __code={'<Toggle label=\\\"Disabled toggle\\\" id=\\\"my-toggle-disabled\\\" disabled />\\n<Toggle\\n  label=\\\"Disabled toggle, checked\\\"\\n  id=\\\"my-toggle-checked-disabled\\\"\\n  disabled\\n  checked\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Toggle,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Toggle label=\"Disabled toggle\" id=\"my-toggle-disabled\" disabled mdxType=\"Toggle\" />\n  <Toggle label=\"Disabled toggle, checked\" id=\"my-toggle-checked-disabled\" disabled checked mdxType=\"Toggle\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <Props of={Toggle} mdxType=\"Props\" />\n    <hr></hr>\n    <p>{`Next: `}<a parentName=\"p\" {...{\n        \"href\": \"/components/layout/cta\"\n      }}>{`CTA →`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}