(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{G1l0:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return m})),a.d(t,"default",(function(){return p}));var n=a("Fcif"),s=a("dV/x"),o=(a("mXGw"),a("/FXl")),c=a("TjRS"),l=a("ZFoC"),i=a("nBnF");a("aD51");const r=["components"],m={};void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!Object.prototype.hasOwnProperty.call(m,"__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/js-helpers/classnames.mdx"}});const b={_frontmatter:m},u=c.a;function p(e){let{components:t}=e,a=Object(s.a)(e,r);return Object(o.b)(u,Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"classnames"},"Classnames"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"classNames")," helper joins all classnames you pass into the function as\nsingle classname. It automatically filters out empty strings and values that\nare not strings, so you can conditionally assemble classnames and ",Object(o.b)("inlineCode",{parentName:"p"},"classNames"),"\nfunction will take care about the single format of classname for you."),Object(o.b)("h2",{id:"basic-usage"},"Basic Usage"),Object(o.b)("p",null,"To use ",Object(o.b)("inlineCode",{parentName:"p"},"classNames")," helper, you need to import it first:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { classNames } from '@react-ui-org/react-ui';\n")),Object(o.b)("p",null,"And use it:"),Object(o.b)(l.c,{__position:0,__code:"<div\n  className={classNames(\n    'd-inline-block',\n    Date.now() > 1609455600 && 'text-warning',\n    Date.now() > 1622498400 ? 'text-muted' : null,\n  )}\n>\n  {new Date().toLocaleDateString()}\n</div>",__scope:{props:a,DefaultLayout:c.a,Playground:l.c,classNames:i.a,DefaultLayout:c.a,_frontmatter:m},mdxType:"Playground"},Object(o.b)("div",{className:Object(i.a)("d-inline-block",Date.now()>1609455600&&"text-warning",Date.now()>1622498400?"text-muted":null)},(new Date).toLocaleDateString())))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!Object.prototype.hasOwnProperty.call(p,"__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/js-helpers/classnames.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-js-helpers-classnames-mdx-aa240ceb9b4502026320.js.map