(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{vAOS:function(e,t,o){"use strict";o.r(t),o.d(t,"_frontmatter",(function(){return i})),o.d(t,"default",(function(){return m}));var n=o("Fcif"),a=o("dV/x"),r=o("mXGw"),l=o("/FXl"),c=o("TjRS"),b=o("ZFoC"),u=o("R5VZ"),p=o("nBnF");o("aD51");const d=["components"],i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!Object.prototype.hasOwnProperty.call(i,"__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/lib/components/ButtonGroup/README.mdx"}});const s={_frontmatter:i},y=c.a;function m(e){let{components:t}=e,o=Object(a.a)(e,d);return Object(l.b)(y,Object(n.a)({},s,o,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"buttongroup"},"ButtonGroup"),Object(l.b)("p",null,"ButtonGroup visually groups related buttons together."),Object(l.b)("h2",{id:"basic-usage"},"Basic Usage"),Object(l.b)("p",null,"To implement the ButtonGroup component, you need to import it first:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"import { ButtonGroup } from '@react-ui-org/react-ui';\n")),Object(l.b)("p",null,"And use it:"),Object(l.b)(b.c,{__position:0,__code:'<ButtonGroup>\n  <Button label="Week" />\n  <Button label="Month" />\n  <Button label="Year" />\n</ButtonGroup>',__scope:{props:o,DefaultLayout:c.a,Playground:b.c,Props:b.d,Icon:u.a,Button:p.c,ButtonGroup:p.d,DefaultLayout:c.a,_frontmatter:i},mdxType:"Playground"},Object(l.b)(p.d,{mdxType:"ButtonGroup"},Object(l.b)(p.c,{label:"Week",mdxType:"Button"}),Object(l.b)(p.c,{label:"Month",mdxType:"Button"}),Object(l.b)(p.c,{label:"Year",mdxType:"Button"}))),Object(l.b)("p",null,"See ",Object(l.b)("a",{parentName:"p",href:"#api"},"API")," for all available options."),Object(l.b)("h2",{id:"general-guidelines"},"General Guidelines"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Use button group to group ",Object(l.b)("strong",{parentName:"p"},"related actions")," that a user can take. Buttons\nshould not be grouped just to save space on the screen.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Mixing multiple button priorities")," and some other properties within a\nbutton group is ",Object(l.b)("a",{parentName:"p",href:"#shared-properties"},"not allowed"),". The priority can only be\nset for all buttons in the group at once.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"In most use cases, ",Object(l.b)("strong",{parentName:"p"},"secondary action color")," is probably the best option for\nbuttons in a group as it works good with the colors of the selected state.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Use ",Object(l.b)("strong",{parentName:"p"},"short labels or icons")," so the buttons can fit small screens.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"For toggling between on/off states, use rather the\n",Object(l.b)("a",{parentName:"p",href:"/components/toggle"},"Toggle")," component.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"For switching between options in a form that needs to be submitted, use rather\nthe ",Object(l.b)("a",{parentName:"p",href:"/components/select-field"},"SelectField")," or\n",Object(l.b)("a",{parentName:"p",href:"/components/radio"},"Radio")," components.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Be careful with using ",Object(l.b)("inlineCode",{parentName:"p"},"startCorner")," and ",Object(l.b)("inlineCode",{parentName:"p"},"endCorner")," options for grouped\nbuttons. Overflowing elements may cause undesired interaction problems."))),Object(l.b)("h3",{id:"shared-properties"},"Shared Properties"),Object(l.b)("p",null,"You can set the following properties directly on ButtonGroup to be shared for\nall buttons inside the group:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"size"),","),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"priority"),","),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"disabled")," state,"),Object(l.b)("li",{parentName:"ul"},"and ",Object(l.b)("inlineCode",{parentName:"li"},"block")," width.")),Object(l.b)("p",null,"These properties are then passed over to individual buttons. At the same time,\nthey ",Object(l.b)("strong",{parentName:"p"},"cannot be overridden")," on the buttons' level. While (in theory)\ntechnically possible, from the design point of view it's undesirable to group\nbuttons of totally different types or sizes."),Object(l.b)("h2",{id:"priorities"},"Priorities"),Object(l.b)("p",null,"There are three ",Object(l.b)("strong",{parentName:"p"},"visual priorities")," of buttons which exactly copy the\npriorities of the ",Object(l.b)("a",{parentName:"p",href:"/components/button"},"Button")," component:"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"filled"),Object(l.b)("li",{parentName:"ol"},"outline"),Object(l.b)("li",{parentName:"ol"},"flat")),Object(l.b)("p",null,"ðŸ‘‰ To avoid undesired combinations, the visual priority of the button group\n",Object(l.b)("strong",{parentName:"p"},"cannot be overridden")," on the Button level."),Object(l.b)("h3",{id:"filled"},"Filled"),Object(l.b)("p",null,"The default, high-emphasis priority should be used for primary actions of your\napp."),Object(l.b)(b.c,{__position:1,__code:'<ButtonGroup>\n  <Button color="secondary" label="Week" />\n  <Button color="secondary" label="Month" />\n  <Button color="secondary" label="Year" />\n</ButtonGroup>',__scope:{props:o,DefaultLayout:c.a,Playground:b.c,Props:b.d,Icon:u.a,Button:p.c,ButtonGroup:p.d,DefaultLayout:c.a,_frontmatter:i},mdxType:"Playground"},Object(l.b)(p.d,{mdxType:"ButtonGroup"},Object(l.b)(p.c,{color:"secondary",label:"Week",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Month",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Year",mdxType:"Button"}))),Object(l.b)("h3",{id:"outline"},"Outline"),Object(l.b)("p",null,"Medium-emphasis buttons to contain actions that are important but not primary\nin your app."),Object(l.b)(b.c,{__position:2,__code:'<ButtonGroup priority="outline">\n  <Button color="secondary" label="Week" />\n  <Button color="secondary" label="Month" />\n  <Button color="secondary" label="Year" />\n</ButtonGroup>',__scope:{props:o,DefaultLayout:c.a,Playground:b.c,Props:b.d,Icon:u.a,Button:p.c,ButtonGroup:p.d,DefaultLayout:c.a,_frontmatter:i},mdxType:"Playground"},Object(l.b)(p.d,{priority:"outline",mdxType:"ButtonGroup"},Object(l.b)(p.c,{color:"secondary",label:"Week",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Month",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Year",mdxType:"Button"}))),Object(l.b)("h3",{id:"flat"},"Flat"),Object(l.b)("p",null,"Flat buttons are designed for less pronounced actions to help maintain focus on\nthe content."),Object(l.b)(b.c,{__position:3,__code:'<ButtonGroup priority="flat">\n  <Button color="secondary" label="Week" />\n  <Button color="secondary" label="Month" />\n  <Button color="secondary" label="Year" />\n</ButtonGroup>',__scope:{props:o,DefaultLayout:c.a,Playground:b.c,Props:b.d,Icon:u.a,Button:p.c,ButtonGroup:p.d,DefaultLayout:c.a,_frontmatter:i},mdxType:"Playground"},Object(l.b)(p.d,{priority:"flat",mdxType:"ButtonGroup"},Object(l.b)(p.c,{color:"secondary",label:"Week",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Month",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Year",mdxType:"Button"}))),Object(l.b)("h2",{id:"sizes"},"Sizes"),Object(l.b)("p",null,"All existing button sizes are also available on the button group level: small,\nmedium, and large."),Object(l.b)(b.c,{__position:4,__code:'<ButtonGroup size="small">\n  <Button color="secondary" label="Week" />\n  <Button color="secondary" label="Month" />\n  <Button color="secondary" label="Year" />\n</ButtonGroup>\n<ButtonGroup>\n  <Button color="secondary" label="Week" />\n  <Button color="secondary" label="Month" />\n  <Button color="secondary" label="Year" />\n</ButtonGroup>\n<ButtonGroup size="large">\n  <Button color="secondary" label="Week" />\n  <Button color="secondary" label="Month" />\n  <Button color="secondary" label="Year" />\n</ButtonGroup>',__scope:{props:o,DefaultLayout:c.a,Playground:b.c,Props:b.d,Icon:u.a,Button:p.c,ButtonGroup:p.d,DefaultLayout:c.a,_frontmatter:i},mdxType:"Playground"},Object(l.b)(p.d,{size:"small",mdxType:"ButtonGroup"},Object(l.b)(p.c,{color:"secondary",label:"Week",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Month",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Year",mdxType:"Button"})),Object(l.b)(p.d,{mdxType:"ButtonGroup"},Object(l.b)(p.c,{color:"secondary",label:"Week",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Month",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Year",mdxType:"Button"})),Object(l.b)(p.d,{size:"large",mdxType:"ButtonGroup"},Object(l.b)(p.c,{color:"secondary",label:"Week",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Month",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Year",mdxType:"Button"}))),Object(l.b)("p",null,"Block button groups span the full width of a parent:"),Object(l.b)(b.c,{__position:5,__code:'<ButtonGroup block>\n  <Button color="secondary" label="Week" />\n  <Button color="secondary" label="Month" />\n  <Button color="secondary" label="Year" />\n</ButtonGroup>',__scope:{props:o,DefaultLayout:c.a,Playground:b.c,Props:b.d,Icon:u.a,Button:p.c,ButtonGroup:p.d,DefaultLayout:c.a,_frontmatter:i},mdxType:"Playground"},Object(l.b)(p.d,{block:!0,mdxType:"ButtonGroup"},Object(l.b)(p.c,{color:"secondary",label:"Week",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Month",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Year",mdxType:"Button"}))),Object(l.b)("h2",{id:"states"},"States"),Object(l.b)("h3",{id:"disabled-state"},"Disabled State"),Object(l.b)("p",null,"Disables all buttons inside the group."),Object(l.b)(b.c,{__position:6,__code:'<ButtonGroup disabled>\n  <Button color="secondary" label="Week" />\n  <Button color="secondary" label="Month" />\n  <Button color="secondary" label="Year" />\n</ButtonGroup>\n<ButtonGroup priority="outline" disabled>\n  <Button color="secondary" label="Week" />\n  <Button color="secondary" label="Month" />\n  <Button color="secondary" label="Year" />\n</ButtonGroup>\n<ButtonGroup priority="flat" disabled>\n  <Button color="secondary" label="Week" />\n  <Button color="secondary" label="Month" />\n  <Button color="secondary" label="Year" />\n</ButtonGroup>',__scope:{props:o,DefaultLayout:c.a,Playground:b.c,Props:b.d,Icon:u.a,Button:p.c,ButtonGroup:p.d,DefaultLayout:c.a,_frontmatter:i},mdxType:"Playground"},Object(l.b)(p.d,{disabled:!0,mdxType:"ButtonGroup"},Object(l.b)(p.c,{color:"secondary",label:"Week",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Month",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Year",mdxType:"Button"})),Object(l.b)(p.d,{priority:"outline",disabled:!0,mdxType:"ButtonGroup"},Object(l.b)(p.c,{color:"secondary",label:"Week",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Month",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Year",mdxType:"Button"})),Object(l.b)(p.d,{priority:"flat",disabled:!0,mdxType:"ButtonGroup"},Object(l.b)(p.c,{color:"secondary",label:"Week",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Month",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Year",mdxType:"Button"}))),Object(l.b)("h3",{id:"feedback-state"},"Feedback State"),Object(l.b)("p",null,"When user's action triggers an asynchronous process on background, feedback\nstate of individual buttons can be indicated by showing an icon."),Object(l.b)(b.c,{__position:7,__code:'<ButtonGroup>\n  <Button\n    color="success"\n    label="Week"\n    feedbackIcon={<Icon icon="success" />}\n  />\n  <Button color="secondary" label="Month" />\n  <Button color="secondary" label="Year" />\n</ButtonGroup>\n<ButtonGroup priority="outline">\n  <Button\n    color="success"\n    label="Week"\n    feedbackIcon={<Icon icon="success" />}\n  />\n  <Button color="secondary" label="Month" />\n  <Button color="secondary" label="Year" />\n</ButtonGroup>\n<ButtonGroup priority="flat">\n  <Button\n    color="success"\n    label="Week"\n    feedbackIcon={<Icon icon="success" />}\n  />\n  <Button color="secondary" label="Month" />\n  <Button color="secondary" label="Year" />\n</ButtonGroup>',__scope:{props:o,DefaultLayout:c.a,Playground:b.c,Props:b.d,Icon:u.a,Button:p.c,ButtonGroup:p.d,DefaultLayout:c.a,_frontmatter:i},mdxType:"Playground"},Object(l.b)(p.d,{mdxType:"ButtonGroup"},Object(l.b)(p.c,{color:"success",label:"Week",feedbackIcon:Object(l.b)(u.a,{icon:"success",mdxType:"Icon"}),mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Month",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Year",mdxType:"Button"})),Object(l.b)(p.d,{priority:"outline",mdxType:"ButtonGroup"},Object(l.b)(p.c,{color:"success",label:"Week",feedbackIcon:Object(l.b)(u.a,{icon:"success",mdxType:"Icon"}),mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Month",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Year",mdxType:"Button"})),Object(l.b)(p.d,{priority:"flat",mdxType:"ButtonGroup"},Object(l.b)(p.c,{color:"success",label:"Week",feedbackIcon:Object(l.b)(u.a,{icon:"success",mdxType:"Icon"}),mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Month",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Year",mdxType:"Button"}))),Object(l.b)("h3",{id:"selected-state"},"Selected State"),Object(l.b)("p",null,"To highlight the selected option, just apply the selected color variant for\nthe desired item."),Object(l.b)(b.c,{__position:8,__code:'<ButtonGroup>\n  <Button color="selected" label="Week" />\n  <Button color="secondary" label="Month" />\n  <Button color="secondary" label="Year" />\n</ButtonGroup>\n<ButtonGroup priority="outline">\n  <Button color="selected" label="Week" />\n  <Button color="secondary" label="Month" />\n  <Button color="secondary" label="Year" />\n</ButtonGroup>\n<ButtonGroup priority="flat">\n  <Button color="selected" label="Week" />\n  <Button color="secondary" label="Month" />\n  <Button color="secondary" label="Year" />\n</ButtonGroup>',__scope:{props:o,DefaultLayout:c.a,Playground:b.c,Props:b.d,Icon:u.a,Button:p.c,ButtonGroup:p.d,DefaultLayout:c.a,_frontmatter:i},mdxType:"Playground"},Object(l.b)(p.d,{mdxType:"ButtonGroup"},Object(l.b)(p.c,{color:"selected",label:"Week",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Month",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Year",mdxType:"Button"})),Object(l.b)(p.d,{priority:"outline",mdxType:"ButtonGroup"},Object(l.b)(p.c,{color:"selected",label:"Week",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Month",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Year",mdxType:"Button"})),Object(l.b)(p.d,{priority:"flat",mdxType:"ButtonGroup"},Object(l.b)(p.c,{color:"selected",label:"Week",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Month",mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Year",mdxType:"Button"}))),Object(l.b)("h2",{id:"accessibility"},"Accessibility"),Object(l.b)("p",null,"You can improve the accessibility of your ButtonGroup by linking it to a label\nand communicating the state of individual options."),Object(l.b)(b.c,{__position:9,__code:'<>\n  <span id="period-label">Period:</span>\n  <ButtonGroup aria-labelledby="period-label">\n    <Button color="selected" label="Week" aria-pressed />\n    <Button color="secondary" label="Month" aria-pressed={false} />\n    <Button color="secondary" label="Year" aria-pressed={false} />\n  </ButtonGroup>\n</>',__scope:{props:o,DefaultLayout:c.a,Playground:b.c,Props:b.d,Icon:u.a,Button:p.c,ButtonGroup:p.d,DefaultLayout:c.a,_frontmatter:i},mdxType:"Playground"},Object(l.b)(r.Fragment,null,Object(l.b)("span",{id:"period-label"},"Period:"),Object(l.b)(p.d,{"aria-labelledby":"period-label",mdxType:"ButtonGroup"},Object(l.b)(p.c,{color:"selected",label:"Week","aria-pressed":!0,mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Month","aria-pressed":!1,mdxType:"Button"}),Object(l.b)(p.c,{color:"secondary",label:"Year","aria-pressed":!1,mdxType:"Button"})))),Object(l.b)("h2",{id:"forwarding-html-attributes"},"Forwarding HTML Attributes"),Object(l.b)("p",null,"In addition to the options below in the ",Object(l.b)("a",{parentName:"p",href:"#api"},"component's API")," section, you\ncan specify ",Object(l.b)("a",{parentName:"p",href:"https://reactjs.org/docs/events.html"},"React synthetic events")," or ",Object(l.b)("strong",{parentName:"p"},"any HTML attribute you like.")," All\nattributes that don't interfere with the API are forwarded to the root ",Object(l.b)("inlineCode",{parentName:"p"},"<div>"),"\nHTML element. This enables making the component interactive and helps to improve\nits accessibility."),Object(l.b)("p",null,"ðŸ‘‰ Refer to the MDN reference for the full list of supported attributes of the\n",Object(l.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div#attributes"},"div")," element."),Object(l.b)("h2",{id:"api"},"API"),Object(l.b)(b.d,{table:!0,of:p.d,mdxType:"Props"}),Object(l.b)("h2",{id:"theming"},"Theming"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Custom Property"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-ButtonGroup--filled__gap")),Object(l.b)("td",{parentName:"tr",align:null},"Gap between ",Object(l.b)("inlineCode",{parentName:"td"},"filled")," buttons")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-ButtonGroup--filled__separator__width")),Object(l.b)("td",{parentName:"tr",align:null},"Separator width for ",Object(l.b)("inlineCode",{parentName:"td"},"filled")," buttons")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-ButtonGroup--filled__separator__color")),Object(l.b)("td",{parentName:"tr",align:null},"Separator color for ",Object(l.b)("inlineCode",{parentName:"td"},"filled")," buttons")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-ButtonGroup--flat__gap")),Object(l.b)("td",{parentName:"tr",align:null},"Gap between ",Object(l.b)("inlineCode",{parentName:"td"},"flat")," buttons")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-ButtonGroup--flat__separator__width")),Object(l.b)("td",{parentName:"tr",align:null},"Separator width for ",Object(l.b)("inlineCode",{parentName:"td"},"flat")," buttons")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-ButtonGroup--flat__separator__color")),Object(l.b)("td",{parentName:"tr",align:null},"Separator color for ",Object(l.b)("inlineCode",{parentName:"td"},"flat")," buttons")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"--rui-ButtonGroup--outline__gap")),Object(l.b)("td",{parentName:"tr",align:null},"Gap between ",Object(l.b)("inlineCode",{parentName:"td"},"outline")," buttons")))))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!Object.prototype.hasOwnProperty.call(m,"__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/lib/components/ButtonGroup/README.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-lib-components-button-group-readme-mdx-e6c95a37b1dc0a4bac43.js.map