{"version":3,"sources":["webpack:///../src/docs/foundation/design-tokens.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yRAQaA,EAAe,Q,6OAC5B,MAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,iBADR,iBAGA,4CAA2B,iBAAGC,WAAW,IACrC,KAAQ,8DADe,eAA3B,QAEiC,sBAAQA,WAAW,KAAnB,+BAFjC,kLAMA,sEACF,iBAAGA,WAAW,IACR,KAAQ,+BADd,iBADE,8IAMA,kBACE,GAAM,sBADR,sBAGA,kBACE,GAAM,iBADR,iBAGA,8NAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,8CAML,kBACE,GAAM,mBADR,mBAGA,kNAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,sEAML,kBACE,GAAM,oBADR,oBAGA,2OAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,+G,2OAUTJ,EAAWK,gBAAiB","file":"component---src-docs-foundation-design-tokens-mdx-4fcf77f0198a6ce69ac6.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-ui/react-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"design-tokens\"\n    }}>{`Design Tokens`}</h1>\n    <p>{`Design tokens are a `}<a parentName=\"p\" {...{\n        \"href\": \"https://uxdesign.cc/design-tokens-for-dummies-8acebf010d71\"\n      }}>{`methodology`}</a>{` for `}<strong parentName=\"p\">{`expressing design decisions`}</strong>{` in a\nplatform-agnostic way so that they can be shared across different disciplines,\ntools, and technologies. They help establish a common vocabulary across\norganizations.`}</p>\n    <p>{`ðŸ‘‰ Design tokens are your starting point for\n`}<a parentName=\"p\" {...{\n        \"href\": \"/customize/theming/overview\"\n      }}>{`customization`}</a>{` of React UI to make it fit your\ndesign system needs. React UI uses CSS custom properties as a primary storage\nformat for design tokens.`}</p>\n    <h2 {...{\n      \"id\": \"design-token-types\"\n    }}>{`Design Token Types`}</h2>\n    <h3 {...{\n      \"id\": \"global-tokens\"\n    }}>{`Global Tokens`}</h3>\n    <p>{`Global tokens represent the basic, context-agnostic values in your design\nlanguage. They define color palettes, typography scales, or spacing values,\nwithout binding them to any semantic meaning.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`:root {\n  --pantone-3145c: #00778b;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"semantic-tokens\"\n    }}>{`Semantic Tokens`}</h3>\n    <p>{`Semantic tokens define roles and decisions that give the design system its\ncharacter. They communicate the intended purpose of a global token and are often\nreused by component tokens.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`:root {\n  --rui-color-action-primary: var(--pantone-3145c);\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"component-tokens\"\n    }}>{`Component Tokens`}</h3>\n    <p>{`Component tokens represent the values associated with a component. They often\ninherit from semantic tokens, but are named in a way that narrows down their\nreusability to the context of the specific component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`:root {\n  --rui-Button--filled--primary--default__background: var(--rui-color-action-primary);\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}