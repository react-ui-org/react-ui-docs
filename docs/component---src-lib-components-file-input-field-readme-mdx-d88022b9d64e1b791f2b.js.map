{"version":3,"sources":["webpack:///../src/lib/components/FileInputField/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","FileInputField","label","fullWidth","accept","helpText","multiple","isLabelVisible","layout","validationState","validationText","disabled","table","of","isMDXComponent"],"mappings":"4RAUO,MAAMA,EAAe,Q,8NAC5B,MAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,kBADR,kBAGA,+EAEA,kBACE,GAAM,eADR,eAGA,gGACA,uBAAK,oBAAMC,WAAW,MAClB,UAAa,eADZ,+DAIL,oCACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,wCAA2CC,QAAS,CACrFL,QACAH,kBACAS,eACAC,UACAC,mBACAX,kBACAH,gBACCO,QAAQ,cACb,YAAC,IAAD,CAAgBQ,MAAM,aAAaR,QAAQ,oBAEzC,4BAAW,iBAAGC,WAAW,IACrB,KAAQ,QADD,OAAX,+BAGA,kBACE,GAAM,sBADR,sBAGA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,SAA6B,iBAAGA,WAAW,IACvC,KAAQ,+BADiB,0BAA7B,eAEmD,sBAAQA,WAAW,KAAnB,4BAFnD,uBAKF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,OAA2B,sBAAQA,WAAW,KAAnB,gCAA3B,8DACc,kBAAIA,WAAW,KAAf,gCADd,uEAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gEAAoF,sBAAQA,WAAW,KAAnB,wBAApF,+CAGF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,yCAA6D,sBAAQA,WAAW,KAAnB,6BAA7D,kCAGF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,OAA2B,sBAAQA,WAAW,KAAnB,8BAA3B,4HAIJ,iEAAgD,0BAAYA,WAAW,KAAvB,qBAAhD,qHAGF,iBAAGA,WAAW,IACR,KAAQ,uDADd,sCAHE,gKAQA,kBACE,GAAM,SADR,SAGA,2EACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,kDAAqDC,QAAS,CAC/FL,QACAH,kBACAS,eACAC,UACAC,mBACAX,kBACAH,gBACCO,QAAQ,cACb,YAAC,IAAD,CAAgBS,WAAS,EAACD,MAAM,aAAaR,QAAQ,oBAEnD,kBACE,GAAM,8BADR,8BAGA,8FACE,sBAAQC,WAAW,KAAnB,yCADF,8CAEa,iBAAGA,WAAW,IACvB,KAAQ,QADC,mBAFb,4CAKA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,uNAA4NC,QAAS,CACtQL,QACAH,kBACAS,eACAC,UACAC,mBACAX,kBACAH,gBACCO,QAAQ,cACb,YAAC,IAAD,CAAgBU,OAAO,uBAAuBC,SAAQ,sHAGjDH,MAAM,aAAaI,UAAQ,EAACZ,QAAQ,oBAEvC,wGACF,iBAAGC,WAAW,IACR,KAAQ,wEADd,cADE,WAKA,kBACE,GAAM,mBADR,mBAGA,uJAEA,8KAEF,sBAAQA,WAAW,KAAnB,+BAFE,+CAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,+DAAkEC,QAAS,CAC5GL,QACAH,kBACAS,eACAC,UACAC,mBACAX,kBACAH,gBACCO,QAAQ,cACb,YAAC,IAAD,CAAgBa,gBAAgB,EAAOL,MAAM,aAAaR,QAAQ,oBAEhE,kBACE,GAAM,qBADR,qBAGA,4NAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,qKAA8KC,QAAS,CACxNL,QACAH,kBACAS,eACAC,UACAC,mBACAX,kBACAH,gBACCO,QAAQ,cACb,YAAC,IAAD,CAAgBQ,MAAM,aAAaM,OAAO,aAAad,QAAQ,mBAC/D,YAAC,IAAD,CAAgBS,WAAS,EAACI,gBAAgB,EAAOL,MAAM,aAAaM,OAAO,aAAad,QAAQ,oBAE9F,kBACE,GAAM,aADR,aAGA,4GAEA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,mVAAoWC,QAAS,CAC9YL,QACAH,kBACAS,eACAC,UACAC,mBACAX,kBACAH,gBACCO,QAAQ,cACb,YAAC,IAAD,CAAgBW,SAAS,sCAAsCH,MAAM,aAAaR,QAAQ,mBAC1F,YAAC,IAAD,CAAgBW,SAAS,sCAAsCH,MAAM,aAAaM,OAAO,aAAad,QAAQ,mBAC9G,YAAC,IAAD,CAAgBS,WAAS,EAACE,SAAS,sCAAsCH,MAAM,aAAaM,OAAO,aAAad,QAAQ,oBAEtH,kBACE,GAAM,UADR,UAGA,kBACE,GAAM,qBADR,qBAGA,qHACY,sBAAQC,WAAW,KAAnB,4DADZ,8FAIA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,sbAAucC,QAAS,CACjfL,QACAH,kBACAS,eACAC,UACAC,mBACAX,kBACAH,gBACCO,QAAQ,cACb,YAAC,IAAD,CAAgBQ,MAAM,aAAaO,gBAAgB,QAAQC,eAAe,cAAchB,QAAQ,mBAChG,YAAC,IAAD,CAAgBQ,MAAM,aAAaO,gBAAgB,UAAUC,eAAe,yDAAyDhB,QAAQ,mBAC7I,YAAC,IAAD,CAAgBQ,MAAM,aAAaO,gBAAgB,UAAUC,eAAc,sGAGtEhB,QAAQ,oBAEX,kBACE,GAAM,kBADR,kBAGA,kEACA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,iDAAoDC,QAAS,CAC9FL,QACAH,kBACAS,eACAC,UACAC,mBACAX,kBACAH,gBACCO,QAAQ,cACb,YAAC,IAAD,CAAgBiB,UAAQ,EAACT,MAAM,aAAaR,QAAQ,oBAElD,kBACE,GAAM,OADR,OAGA,0EAAyD,iBAAGC,WAAW,IACnE,KAAQ,wCAD6C,0BAAzD,uGAIY,0BAAYA,WAAW,KAAvB,SAJZ,uFAKgC,iBAAGA,WAAW,IAC1C,KAAQ,+BADoB,iBALhC,KAQA,YAAC,IAAD,CAAOiB,OAAK,EAACC,GAAIZ,IAAgBP,QAAQ,UACzC,kBACE,GAAM,WADR,WAGA,gCAAe,iBAAGC,WAAW,IACzB,KAAQ,4BADG,iBAAf,+C,4NAQJJ,EAAWuB,gBAAiB","file":"component---src-lib-components-file-input-field-readme-mdx-d88022b9d64e1b791f2b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-ui/react-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { FileInputField } from './FileInputField';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"fileinputfield\"\n    }}>{`FileInputField`}</h1>\n    <p>{`FileInputField allows users to select files to upload.`}</p>\n\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <p>{`To implement the FileInputField component, you need to import it first:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { FileInputField } from '@react-ui-org/react-ui';\n`}</code></pre>\n    <p>{`And use it:`}</p>\n    <Playground __position={0} __code={'<FileInputField label=\\\"Attachment\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FileInputField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <FileInputField label=\"Attachment\" mdxType=\"FileInputField\" />\n    </Playground>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"#api\"\n      }}>{`API`}</a>{` for all available options.`}</p>\n    <h2 {...{\n      \"id\": \"general-guidelines\"\n    }}>{`General Guidelines`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Apply `}<a parentName=\"p\" {...{\n            \"href\": \"#forwarding-html-attributes\"\n          }}>{`native HTML attributes`}</a>{` to control `}<strong parentName=\"p\">{`what\nand how many files`}</strong>{` users can select.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use `}<strong parentName=\"p\">{`short and descriptive labels`}</strong>{`, ideally nouns rather than seemingly\npolite phrases like `}<em parentName=\"p\">{`Please attach your file here`}</em>{`. Short labels will help\nyour users accomplish their task faster.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Only make the FileInputField's label invisible when there is `}<strong parentName=\"p\">{`another visual\nclue`}</strong>{` to guide users through filling the input.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`When a short label is not enough, use `}<strong parentName=\"p\">{`help texts to guide users`}</strong>{` before\nthey enter anything.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use `}<strong parentName=\"p\">{`clear, calm error messages`}</strong>{` when there's a problem with what they\nentered. Be positive and focus on solutions to make the error message helpful.`}</p>\n      </li>\n    </ul>\n    <p>{`ðŸ‘‰ FileInputField implements native HTML `}<inlineCode parentName=\"p\">{`input type=\"file\"`}</inlineCode>{`. Therefore, it is\nnot possible to affect neither its translations (they depend on a browser), nor\nappearance.\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/react-ui-org/react-ui/issues/244\"\n      }}>{`Custom translations and appearance`}</a>{`\nare considered to be implemented at some point in the future. However, from the\nlayout perspective, FileInputFields work just like any other form fields.`}</p>\n    <h2 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h2>\n    <p>{`Full-width fields span the full width of a parent:`}</p>\n    <Playground __position={1} __code={'<FileInputField fullWidth label=\\\"First name\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FileInputField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <FileInputField fullWidth label=\"First name\" mdxType=\"FileInputField\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"forwarding-html-attributes\"\n    }}>{`Forwarding HTML Attributes`}</h2>\n    <p>{`When you want to refine your file input fields even further, you\ncan `}<strong parentName=\"p\">{`add whatever HTML attribute you like.`}</strong>{` All attributes that don't\ninterfere with `}<a parentName=\"p\" {...{\n        \"href\": \"#api\"\n      }}>{`component's API`}</a>{` are forwarded to the native HTML input.`}</p>\n    <Playground __position={2} __code={'<FileInputField\\n  accept=\\\".pdf,.jpg,.jpeg,.png\\\"\\n  helpText={`\\n    Choose up to 10 files. Allowed extensions are .pdf, .jpg, .jpeg, or .png.\\n    Size limit is 10 MB.\\n  `}\\n  label=\\\"Attachment\\\"\\n  multiple\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FileInputField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <FileInputField accept=\".pdf,.jpg,.jpeg,.png\" helpText={`\n      Choose up to 10 files. Allowed extensions are .pdf, .jpg, .jpeg, or .png.\n      Size limit is 10 MB.\n    `} label=\"Attachment\" multiple mdxType=\"FileInputField\" />\n    </Playground>\n    <p>{`ðŸ‘‰ Refer to the MDN reference for the full list of supported attributes of the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file\"\n      }}>{`file input`}</a>{`\ntype.`}</p>\n    <h2 {...{\n      \"id\": \"invisible-label\"\n    }}>{`Invisible Label`}</h2>\n    <p>{`In some cases, it may be convenient to visually hide the field label. The label\nremains accessible to assistive technologies.`}</p>\n    <p>{`While it may be acceptable for simple forms with just a few fields, it's\ndangerous to hide labels from users in most cases. Keep in mind you should\n`}<strong parentName=\"p\">{`provide another visual clue`}</strong>{` so users know what to fill into the input.`}</p>\n    <Playground __position={3} __code={'<FileInputField isLabelVisible={false} label=\\\"Attachment\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FileInputField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <FileInputField isLabelVisible={false} label=\"Attachment\" mdxType=\"FileInputField\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"horizontal-layout\"\n    }}>{`Horizontal Layout`}</h2>\n    <p>{`The default vertical layout is very easy to use and work with. However, there\nare situations where horizontal layout suits better â€” and that's why React UI\nsupports this kind of layout as well.`}</p>\n    <Playground __position={4} __code={'<FileInputField label=\\\"Attachment\\\" layout=\\\"horizontal\\\" />\\n<FileInputField\\n  fullWidth\\n  isLabelVisible={false}\\n  label=\\\"Attachment\\\"\\n  layout=\\\"horizontal\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FileInputField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <FileInputField label=\"Attachment\" layout=\"horizontal\" mdxType=\"FileInputField\" />\n  <FileInputField fullWidth isLabelVisible={false} label=\"Attachment\" layout=\"horizontal\" mdxType=\"FileInputField\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"help-text\"\n    }}>{`Help Text`}</h2>\n    <p>{`You may provide an additional help text to clarify how the input should be\nfilled.`}</p>\n    <Playground __position={5} __code={'<FileInputField\\n  helpText=\\\"Choose one or more files to upload.\\\"\\n  label=\\\"Attachment\\\"\\n/>\\n<FileInputField\\n  helpText=\\\"Choose one or more files to upload.\\\"\\n  label=\\\"Attachment\\\"\\n  layout=\\\"horizontal\\\"\\n/>\\n<FileInputField\\n  fullWidth\\n  helpText=\\\"Choose one or more files to upload.\\\"\\n  label=\\\"Attachment\\\"\\n  layout=\\\"horizontal\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FileInputField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <FileInputField helpText=\"Choose one or more files to upload.\" label=\"Attachment\" mdxType=\"FileInputField\" />\n  <FileInputField helpText=\"Choose one or more files to upload.\" label=\"Attachment\" layout=\"horizontal\" mdxType=\"FileInputField\" />\n  <FileInputField fullWidth helpText=\"Choose one or more files to upload.\" label=\"Attachment\" layout=\"horizontal\" mdxType=\"FileInputField\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"states\"\n    }}>{`States`}</h2>\n    <h3 {...{\n      \"id\": \"validation-states\"\n    }}>{`Validation States`}</h3>\n    <p>{`Validation states visually present the result of validation of the input. You\nshould always `}<strong parentName=\"p\">{`provide a validation message for states other than valid`}</strong>{` so\nusers know what happened and what action they should take or what options they\nhave.`}</p>\n    <Playground __position={6} __code={'<FileInputField\\n  label=\\\"Attachment\\\"\\n  validationState=\\\"valid\\\"\\n  validationText=\\\"Looks good!\\\"\\n/>\\n<FileInputField\\n  label=\\\"Attachment\\\"\\n  validationState=\\\"invalid\\\"\\n  validationText=\\\"Your file is too big. Please select something smaller.\\\"\\n/>\\n<FileInputField\\n  label=\\\"Attachment\\\"\\n  validationState=\\\"warning\\\"\\n  validationText={`\\n    You selected more than 10 files.\\n    It may take some time before we process them.\\n  `}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FileInputField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <FileInputField label=\"Attachment\" validationState=\"valid\" validationText=\"Looks good!\" mdxType=\"FileInputField\" />\n  <FileInputField label=\"Attachment\" validationState=\"invalid\" validationText=\"Your file is too big. Please select something smaller.\" mdxType=\"FileInputField\" />\n  <FileInputField label=\"Attachment\" validationState=\"warning\" validationText={`\n      You selected more than 10 files.\n      It may take some time before we process them.\n    `} mdxType=\"FileInputField\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"disabled-state\"\n    }}>{`Disabled State`}</h3>\n    <p>{`It's possible to disable the whole input.`}</p>\n    <Playground __position={7} __code={'<FileInputField disabled label=\\\"Attachment\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FileInputField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <FileInputField disabled label=\"Attachment\" mdxType=\"FileInputField\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <p>{`In addition to the options below, you can specify `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/events.html\"\n      }}>{`React synthetic events`}</a>{` or\nany custom HTML attributes that do not interfere with the API, and they will be\npassed to the `}<inlineCode parentName=\"p\">{`input`}</inlineCode>{` HTML element. This enables making the component\ninteractive and helps improve its `}<a parentName=\"p\" {...{\n        \"href\": \"#forwarding-html-attributes\"\n      }}>{`accessibility`}</a>{`.`}</p>\n    <Props table of={FileInputField} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"theming\"\n    }}>{`Theming`}</h2>\n    <p>{`Head to `}<a parentName=\"p\" {...{\n        \"href\": \"/customize/theming/forms\"\n      }}>{`Forms Theming`}</a>{` to see shared form theming\noptions.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}